Curriculum code,Course introduction,Course objectives
2440033,,"
3. 新增：四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
4. 新增：五、本课程中的复杂工程问题定义

一、 课程基本信息
课程代码：2440033
课程名称：设计模式
学时/学分：32 / 1.5
学时分配：	授课：	16			上机：16
实验：			   实践：
实践（周数）：	
适用专业：计算机科学与技术、软件工程、网络安全、人工智能等
授课学院：智能与计算学部
先修课程：程序设计原理、面向对象程序设计
同修课程： 
教材及主要参考书：
1）《图解设计模式》，[日] 结城浩 著，杨文轩 译，人民邮电出版社，2016-12
2）《设计模式：可复用面向对象软件的基础》，[美] 埃里克·伽玛（Erich Gamma） 等 著，李英军，马晓星，蔡敏，刘建中 等 译，机械工业出版社，2019-05

二、 课程简介
设计模式，是一套被反复使用、多数人知晓的、经过分类编目的、代码设计经验的总结。使用设计模式是为了可重用代码、让代码更容易被他人理解、保证代码可靠性、程序的重用性。
设计模式通常描述了一组相互紧密作用的类与对象。设计模式提供一种讨论软件设计的公共语言，使得熟练设计者的设计经验可以被初学者和其他设计者掌握。设计模式还为软件重构提供了目标。

三、 课程目标
1. 了解面向对象程序设计的一般原则，包括SOLID原则、LOD法则等。掌握将上述原则应用于设计的方法。（支撑毕业要求指标点3.2）
2. 掌握经典的23个设计模式的设计思想，能够应用上述思想相关问题进行分析，并获得有效的解决方案。（支撑毕业要求5.2）
3. 将设计模式的思想应用到软件项目开发的实践中，编写出具有可复用性的代码。（支撑毕业要求3.2）

"
2440041,,"
3. 修改：四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
4. 新增：五、本课程中的复杂工程问题定义

一、 课程基本信息
课程代码：2440041
课程名称：程序设计初级实践
课程类别：实践教学课程
课程性质：必修
学时/学分：1.5周 / 1.5学分
适用专业：软件工程
授课学院：智能与计算学部
先修课程：程序设计原理、数据结构	
同修课程：面向对象程序设计
教材及主要参考书：
1) 《Java语言程序设计与数据结构（基础篇）（原书第11版）》，[美] Y.Daniel Liang 著；戴开宇 等 译，机械工业出版社，2018.06
2) 《Java语言程序设计与数据结构（进阶篇 原书第11版）》，[美] Y.Daniel Liang 著；戴开宇 等 译，机械工业出版社，2018.10
3) 《Java编程思想（第4版）》，[美] Bruce Eckel 著，陈昊鹏 译，机械工业出版社，2017.06


二、 课程简介
“程序设计初级实践”是一门专业实践课程，在“程序设计原理”、“数据结构”与“面向对象程序设计”课程基础之上，进一步培养学生面向对象程序设计的思想，加深对高级语言基本语言要素和控制结构的理解。
数据结构与算法是软件工程专业必修课，也是所有其他计算机软件课程的基础。运用好数据结构、设计好算法，使用高级程序设计语言编写程序解决工程实际和科学研究问题是软件工程专业学生必须要掌握的技能。程序设计初级实践不仅是数据结构与算法课程的实践教学环节，而且是一门综合性实验项目。通过这个实践过程，培养学生综合运用数据结构和算法以及程序设计基本知识，解决实际问题，提高程序设计的能力和团队协作精神。
本程序设计实践的目的就是要达到理论与实际应用相结合，使学生能够根据问题使用软件工程规范的分析、设计、编写代码、调试、测试过程，通过数据的组织、已掌握算法的灵活运用，把现实世界中的实际问题用计算机程序予以解决，并针对面向对象语言中的重点和难点内容进行训练，要求独立完成有一定工作量的程序设计任务。

三、 课程目标
1. 掌握面向对象语言的基本语法和开发工具，能够使用标准面向对象语言语法编写程序，代码书写要求有良好的风格。（支撑毕业要求7.1）
2. 掌握常用的数据表示和处理技术，掌握常用算法，学会分析研究计算机加工的数据结构的特性，为应用涉及的数据选择适当的逻辑结构、存储结构及其相应的算法，并初步掌握算法的时间分析和空间分析的技术。能够理解并运用面向对象思想，对软件工程领域问题进行分析，并获得有效的解决方案并撰写文档。（支撑毕业要求7.2）

"
2440042,,"
3. 修改：四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
4. 新增：五、本课程中的复杂工程问题定义

一、 课程基本信息
课程代码：2440042
课程名称：程序设计中级实践
课程类别：实践教学课程
课程性质：必修
学时/学分：1.5周 / 1.5学分
适用专业：软件工程
授课学院：智能与计算学部
先修课程：程序设计原理
同修课程：设计模式			
教材及主要参考书：
1） 《Java编程思想（第4版）》，[美] Bruce Eckel 著；陈昊鹏 译 ，机械工业出版社，2017.06
2） 《图解设计模式》，[日] 结城浩 著；杨文轩 译 ，人民邮电出版社，2016.12

二、 课程简介
“程序设计中级实践”是一门专业实践课程，在“程序设计原理”与“面向对象程序设计”课程基础之上，进一步培养学生面向对象程序设计的思想。
课程设置的主要目的，是使用面向对象语言，实现面向对象设计，应用设计模式的思想进行训练，要求独立完成有一定工作量的程序设计任务。

三、 课程目标
1. 能够理解并运用面向对象思想和设计模式，对软件工程领域问题进行分析，并获得有效的解决方案。（支撑毕业要求6.1）
2. 掌握面向对象的编程技巧和上机调试程序的方法，能够通过调试查找程序中存在的问题并加以解决，能够对项目开发过程进行归纳、分析及深入研究，并得出有效结论。（支撑毕业要求6.2）
3. 能够根据系统设计需求，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求11.1）
4. 掌握自学相关技术和工具的前沿发展方法，把新技术、新方法应用到实践项目中。（支撑毕业要求14.2）

"
2440043,,"
3. 新增：四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）

一、 课程基本信息
课程代码：2440043
课程名称：程序设计高级实践
课程类别：集中实践类
课程性质：必修
学时/学分：1.5周/ 1.5学分
适用专业：软件工程
授课学院：智能与计算学部
先修课程：程序设计原理
同修课程： 
    教材及主要参考书：
1） 《火球：UML大战需求分析》，张传波 著 ， 中国水利水电出版社，2012.02
2） 《重构 改善既有代码的设计》，[美] 马丁·福勒（Martin Fowler） 著，熊节，林从羽 译，人民邮电出版社，2019.05

二、 课程简介
程序设计高级实践是软件工程的实践教学环节，而且是一门综合性实验项目。通过这个实践过程，培养学生综合运用软件工程的开发实践，以及程序设计的综合知识，解决实际问题，提高程序设计的能力和团队协作精神。
本程序设计实践的目的就是要达到理论与实际应用相结合，使学生能够根据问题使用软件工程规范的分析、设计、编写代码、调试、测试过程，通过数据的组织、已掌握算法的灵活运用，把现实世界中的企业级工程问题用计算机程序予以解决，并培养基本的、良好的团队分工和合作能力。

三、 课程目标
1. 通过对问题的分析求解训练编写复杂程序设计能力，通过对大型问题的分解训练团队合作及沟通能力，编写的程序符合软件工程规范。（支撑毕业要求5.1）
2. 能够使用面向对象的思想进行软件需求分析，撰写软件需求规格说明书，使用UML中的用例图、类图、活动图、顺序图和状态机图等描述软件需求，掌握编写用例分析的方法。（支撑毕业要求6.2）
3. 通过对问题的分析求解训练编写复杂程序设计能力，通过对大型问题的分解训练团队合作及沟通能力，编写的程序符合软件工程规范。能够根据要解决的问题的性质，选择和使用恰当的软件领域技术、资源，并能够理解和评价其对环境、社会可持续发展的影响。（支撑毕业要求9.2）
4. 能够综合运用前端和后端开发的技术，对企业级应用提供全栈解决方案，能够认识到不断探索和学习软件开发技术的必要性，具有自主学习和终身学习的意识。（支撑毕业要求14.1）
5. 掌握学习前端和后端开发技术新发展的能力，能够自学新的相关工具和框架。能够不断适应和学习软件开发技术的新发展和前沿动态。（支撑毕业要求14.2）

"
2160044,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。
离散数学2课程作为离散数学课程的后继课程，是离散数学课程的知识的进一步加深和扩展。通过本课程的学习，能够进一步掌握处理离散结构的多种描述工具和方法，为后续计算机相关课程中遇到的相关问题建立必要的理论基础，而且有利于进一步提高学生的抽象思维和逻辑推理能力，为将来参与创新性的研究和开发工作打下更为坚实的基础。
","
1. 了解离散数学2中各部分（包括构造性逻辑、布尔代数、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题，并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求2.1）
2. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。判断具体的应用问题是否能够使用离散数学课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。（支撑毕业要求3.2）
3. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求3.2）
"
2160044,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。
离散数学2课程作为离散数学课程的后继课程，是离散数学课程的知识的进一步加深和扩展。通过本课程的学习，能够进一步掌握处理离散结构的多种描述工具和方法，为后续计算机相关课程中遇到的相关问题建立必要的理论基础，而且有利于进一步提高学生的抽象思维和逻辑推理能力，为将来参与创新性的研究和开发工作打下更为坚实的基础。
","
1. 了解离散数学2中各部分（包括构造性逻辑、布尔代数、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题，并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求2.1）
2. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。判断具体的应用问题是否能够使用离散数学课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。（支撑毕业要求3.2）
3. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求3.2）
"
2160083,,
2160083,,
2160191,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学导论课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。通过课程的学习，不但可以掌握处理离散结构的描述工具和方法，为后续课程的学习创造条件，而且可以提高抽象思维和严格的逻辑推理能力，为将来参与创新性的研究和开发工作打下坚实的基础。
","
1. 了解离散数学各部分（包括数理逻辑、集合论、代数系统、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。（支撑毕业要求1.1）
2. 熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题（例如“苏格拉底三段论”等推理问题、旅行商等优化问题），并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求1.1）
3. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。（支撑毕业要求2.1）
4. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求2.1）
"
2160240,"
并行计算是面向计算机科学与技术专业的核心必修课。该课程旨在让学生能够掌握并行计算技术在研究与开发中的应用，能够根据自己的需要选择合适的并行计算环境与并行计算编程技术，独立完成针对本领域或所承担具体任务的并行算法，并能够独立完成并行应用程序的编制、调试与部署。课程内容主要介绍并行计算领域中基本概念以及基础的并行程序设计方法，目的是让学习本课程的同学了解并行计算硬件平台的类别、分布式计算模式以及MapReduce并行计算模型，掌握简单多线程/OpenMP/MPI并行化方法、GPU异构编程，以及基本的并行程序设计技术，为未来的工作或者科研打好基础。
该课程针对当前计算机类专业的学生并行思维以及并行编程能力，以适应大数据、人工智能大潮对算力的需求。

","
课程目标1：了解并行应用需求，掌握并行计算硬件、并行程序设计的基本概念；理解域分解、任务分解和流水线的并行化方法，能够针对具体应用选择合理并行化解决方案；了解国内外高性能计算发展现状。（支撑毕业要求3.2）
课程目标2：了解共享内存程序设计及多线程编程的基本思想，掌握Pthread/OpenMP/GPU等多个多线程编程模型；理解共享变量访问的冲突以及互斥方法；了解假共享的出现以及消除方法；学会采用多线程编程来并行化一些实际算法和例子并体现创新意识；能够针对特定的共享内存计算环境选择与使用恰当的技术进行多线程程序调优；学会异构GPU编程；掌握使用Eclipse作为开发工具进行多线程编程。（支撑毕业要求3.2，5.1）
课程目标3：掌握基本的MPI并行程序设计方法以及MPI混合异构编程，理解多线程与多进程的不同；掌握点对点通信和组通信，了解虚拟进程及其拓扑；学会采用多进程的方式进行并行分布式编程，理解死锁的概念以及如何避免；学会使用Eclipse工具进行多进程编程（支撑毕业要求3.2，5.1） 
课程目标4：了解大数据的基本概念；掌握MapReduce计算模型；了解Hadoop的调度策略；了解HDFS分布式文件系统；了解Hadoop容错和负载平衡机制；了解Hadoop的有确定；学会使用Eclipse进行Hadoop编程以及Hadoop程序的提交运行。（支撑毕业要求3.2，5.1）
课程目标5：掌握PCAM并行程序设计方法学，了解并行程序设计的三种基本策略；掌握四种常用的通信模式；及并行程序算法设计的判据；了解重复计算的优缺点；能够针对具体应用设计一个合理的并行优化方案；能够采用第Linux自带的性能监测工具进行程序性能监测。（支撑毕业要求5.1）

四、课程目标和毕业要求的对应关系

毕业要求
毕业要求指标点
支撑强度
课程目标

3.设计/开发解决方案

3.2能够设计满足特定需求的计算机系统或软硬件模块，并在其中体现创新意识。
M（0.2）
1，2，3，4
5.使用现代工具
5.1掌握计算机专业所需的基本技术、基础资源和基本工具的使用原理和使用方法，并理解它们的局限性；能够针对复杂计算机工程问题的不同需求，选择与使用恰当的技术、资源和软硬件工具。
M（0.2）
2，3，4，5

五、课程教学方法
本课程的目标是让学生能够了解并行计算的基本概念，了解主要的并行计算硬件平台，掌握基本的并行程序设计技术，了解并行算法分析与设计的方法。课程注重理论与实践的充分结合，上机实验占总学时的一半，实验课的时间结合课堂教学的进度相应安排。
课程内容难度较高，且与操作系统、计算机组成原理、数据结构、算法分析与设计、计算机网络等其他课程有密切联系，因此课堂教学需要结合相关课程的内容进行组织，使学生能够基本相关内容形成自己的专业知识体系；实践是本课程的重要环节，与教学内容中的多线程及MPI程序设计部分对应，在课堂授课时需要结合实验内容与要求提前进行有针对性地讲解；并行程序设计部分与并行计算硬件直接相关，此两部分授课内容需要相互呼应；课程后期关于分布式计算、MapReduce、并行程序设计方法学等部分内容没有相应的上机实验课程，需要结合实例进行讲解。
上机实验在多核计算机、集群等并行计算环境中进行，学生们对于Linux远程使用、集群环境中并行程序编译以及计算任务提交等较为陌生，需要辅以详细的实例演示，并安排专门的上机实验辅导人员；并行计算程序的性能分析与课堂教学的性能评测指标以及加速比定律部分结合密切，实验报告部分要求与之相呼应。

六、教学内容
1、授课与自学
第一章	 并行计算概述
1.1 并行计算基本概念
1.2 基本的并行化方法
本章重点：并行计算与传统串行计算的区别，典型的并行计算应用。
教学模式：课堂授课。
知识点：并行计算概念、并行计算应用领域、域分解、任务解。
能力：了解并行计算基本概念以及基本的并行化方法。

第二章 并行计算的性能评测
   2.1 并行计算的性能
   2.2 内存系统对性能的影响
   2.3 加速比定律
本章重点：掌握基本的并行计算性能指标，了解三个加速比定律。
教学模式：课堂授课。
知识点：加速比、效率、加速比定律。
能力：掌握并行计算程序性能分析方法与指标，理解三个加速比定律及其涵义。

第三章 并行计算硬件环境
   3.1 处理器
   3.2 互联网络
   3.3 内存访问模式
   3.4 并行计算系统体系结构分类
   3.5 并行计算作业管理
本章重点：了解SIMD、多核处理器、GPU和并行计算机互联网络。掌握内存访问模式，并行计算系统的体系结构分类和作业管理。
教学模式：课堂授课。
知识点：多核处理器、内存访问模式、并行计算系统的分类。
能力：能够编写基本的OpenMP程序。

第四章 多线程并行程序设计
   4.1 多线程基本概念
   4.2 多线程计算实例分析
   4.3 PThread多线程
   4.4 Java多线程
本章重点：理解线程与进程的区别以及操作系统调度线程的方式，掌握基本的PThread编程和Java多线程编程。
教学模式：课堂授课，上机实验。
知识点：内存系统参数、高速缓存、线程与进程、竞态条件、同步、PThread。
能力：能够分析与推导高速缓存对于计算性能的影响，能够编写PThread程序。

第五章 OpenMP
   5.1 OpenMP概述
   5.2 编译制导语句
本章重点：了解OpenMP的思想与实现机制，了解OpenMP编程。
教学模式：课堂授课。
知识点：OpenMP的编程模型、编译制导语句。
能力：能够编写基本的OpenMP程序。

第六章 GPU编程
   6.1 GPU体系结构
   6.2 CUDA程序设计
本章重点：了解GPU体系结构，会CUDA编程。
教学模式：课堂授课。
知识点：CUDA的编程模型。
能力：能够编写基本的CUDA程序。


第七章 MPI分布式编程
   7.1 MPI概述
   7.2 点到点通信
   7.3 组通信
   7.4 MPI数据类型
本章重点：掌握基于消息传递的并行计算方法，掌握基本的MPI接口，掌握基本的通信模式。
教学模式：课堂教学，上机实验。
知识点：消息传递并行计算、MPI、通信模式。
能力：能够设计开发基本的MPI并行计算程序。

第八章 MPI 多级混合编程
   8.1 多级混合编程概述
   8.2 MPI+OpenMP混合编程
   8.3 MPI+CUDA混合编程
本章重点：掌握MPI混合编程模型、会MPI+OpenMP、MPI+CUDA混合编程。
教学模式：课堂教学，上机实验。
知识点：多级混合编程，MPI+OpenMP混合编程、MPI+CUDA混合编程。
能力：能够编写较复杂的MPI混合并行计算程序。


第九章 MapReduce编程
   9.1 MapReduce背景介绍
   9.2 MapReduce编程模型
   9.3 Hadoop/YARN
本章重点：掌握MapReduce编程模型，了解Hadoop思想以及系统应用。
教学模式：课堂教学。
知识点：MapReduce编程模型、中间结果排序、Hadoop。
能力：能够判断应用问题是否可映射到MapReduce模型，了解Hadoop的使用。

第八章 并行程序设计方法学
   8.1 PCAM方法学
   8.2 并行编程模型
本章重点：掌握PCAM方法的基本思想，了解并行编程模式。
教学模式：课堂教学。
知识点：PCAM方法学、并行编程模型
能力：能够完成从问题分析到并行计算方案设计的全过程。

第十章 Spark编程
   10.1 Spark概述
   10.2 Spark框架介绍
   10.3 Spark编程模型
本章重点：掌握Spark编程模型，了解Spark思想以及系统应用。
教学模式：课堂教学。
知识点：RDD编程模型、Spark。
能力：能够判断应用问题是否可映射到RDD模型，了解Spark的使用。

第十一章 PCAM方法学
   11.1 划分(Partitioning)
   11.2 通讯(Communication)
   11.3 组合(Agglomeration)
   11.4 映射(Mapping)
   11.5 小结
本章重点：掌握PCAM方法的基本思想，了解并行编程模式。
教学模式：课堂教学。
知识点：PCAM方法学
能力：能够完成从问题分析到并行计算方案设计的全过程。

第十二章 并行算法的一般设计策略
   12.1 串行算法的直接并行化
   12.2 从问题描述开始设计并行算法
   12.3 借用已有算法求解新问题
   12.4 小结
本章重点：掌握并行算法并行化的一般设计策略。
教学模式：课堂教学。
知识点：多种不同的并行化设计策略
能力：能够这对一个问题，选择一个合适的并行化设计策略。


2、实验
实验教学内容：
实验一		多线程计算PI值
实验二    多线程实现矩阵转置算法
实验三		MPI实现矩阵转置算法
实验四    Hadoop/Spark算法实现
教学模式：机房授课和实验，演示并行计算环境的使用方法以及并行程序运行、性能分析方法，为学生提供基本的并行程序代码范例以及供参考的串行算法源代码。
知识点：并行计算环境使用、计算任务提交、性能分析、算法并行化
能力：能够使用集群等并行计算硬件环境，能够独立设计实现并行计算程序和提交并行计算任务，能够进行并行计算程序执行性能分析，初步掌握并行算法分析设计的基本思想与方法。

七、学时分配
教学内容
授课
实验
自学
课程设计
大作业
其他
并行计算概述
2

　
　


并行计算的性能评测
2

　
　


并行计算硬件环境
2

　
　


多线程并行程序设计
2

　
　


OpenMP
2





GPU编程
2





MPI分布式编程
2





MPI 多级混合编程
2





MapReduce编程
2





Spark编程
2





PCAM方法学
2





并行算法的一般设计策略
2





多线程计算PI值

4




多线程实现矩阵转置算法

4




MPI实现矩阵转置算法

4




Hadoop/Spark算法实现

4




总计：
24
16
　
　



八、考核与评价方式及标准
实验报告：40%
平时作业：20%
平时成绩：10%
大作业：30%
科目
分值
内容
评分标准
大作业
30
完成实验综合报告，提交文档、PPT与讲解视频。
1、 对第1/2/3/4次实验，进行算法分析比较；
2、 实验内容与理论课知识点的对应总结。
24-30：文档与PPT有深度，视频讲解条理清楚，知识点分析不少于12项；
18-14：文档与PPT完整，视频讲解基本到位，知识点分析不少于8项；
18分以下：内容缺失或错误。
迟交：一周内减3分，再迟计0分。
实验报告
40
4次上机实验：
1、 多线程求PI（15%）
2、 多线程求矩阵转置（30%）
3、 MPI求矩阵转置（30%）
4、 Hadoop/Spark（25%）
每次实验满分按100分计，累加折算。
90-100：分析总结详尽，代码完善；
80-89：代码完整，分析总结全面；
60-79：代码可运行，有分析总结；
60以下：代码或报告不合格。
迟交：一周内减10分，再迟计0分。
平时作业
20
10次理论课的课后作业，作业内容为针对每次课程内容知识点与重难点的理解与分析。
每次满分按10分计，累加折算。
9-10：自己总结且写作认真；
7-8：查阅网络材料，但直接摘抄；
5-6：拷贝PPT内容。
迟交减1分，不交不得分。
平时成绩
10
出勤情况与互动情况
基准分为7分，旷课一次减1分；
互动频次和质量综合考虑加1-3分。
      

1、课程目标达成考核与评价方式及成绩评定


考核与评价方式
成绩比例（%）

平时作业
课程实验
平时成绩
大作业
课程考试
课程目标1
支持毕业要求3
2
10
2
5

19
课程目标2
支持毕业要求3
5
5
3


13
支持毕业要求5
3


10

13
课程目标3
支持毕业要求3

5



5
支持毕业要求5
5

3
5

13
课程目标4
支持毕业要求3
3
5

5

13
支持毕业要求5

5



5
课程目标5
支持毕业要求3
2
5
2
5

14
支持毕业要求5

5



5
合计
20
40
10
30

100

2、考核与评价标准
实验评价标准：

基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
实验
能够根据实验指导书规定的实验目的与要求，进行多线程编程和多进程编程。同时熟悉运行和测试并行程序。
（支撑毕业要求3）
按照要求完成预习；按照实验安全操作规则进行实验；实验步骤与结果正确；实验机器设备完好。
能够预习，按照实验安全操作规则进行实验；实验步骤与结果正确；实验机器设备完好。
按照实验安全操作规则进行实验；实验步骤与结果基本正确；实验机器设备完好。
没有按照实验安全操作规则进行实验；或者实验步骤与结果不正确。
65
在并行程序的设计中，能够借助于已有的IDE开发工具实现快速高效开发，同时会使用一些并行调试工具进行程序的调试。
（支撑毕业要求5）
能够使用Eclipse工具完成并行程序的开发设计；能够熟练掌握并行程序的程序的部署和运行。 
能够使用Eclipse工具完成并行程序的开发设计；会并行程序的程序的部署和运行。
能够使用Eclipse工具完成并行程序的开发设计；了解并行程序的程序的部署和运行基本方法。
不能熟练的使用Eclipse进行并行程序设计和开发。
35
注：该表格中比例为实验考核成绩比例。

课程考试考核与评价标准

基本要求
评价标准
比例
优秀 
（0.9-1）
良好
（0.7-0.89）
合格（0.6-0.69）
不合格（0-0.59）
掌握并行计算基本知识
（支撑毕业要求3）
了解并行计算的基本概念及其基本的并行化方法，能够理解并行计算与传统的串行计算的区别与联系。熟悉并行程序性能评测的基本方法。
熟悉并行计算概念、并行计算应用领域、域分解、任务解。掌握并行计算机体系结构、内存访问模式、多核处理器、GPU、加速比、效率、加速比定律知识。
熟悉并行计算概念、并行计算应用领域、域分解、任务解。了解并行计算机体系结构、内存访问模式、多核处理器、GPU、加速比、效率、加速比定律知识。
了解并行计算概念、并行计算应用领域、域分解、任务解。掌握并行计算机体系结构、内存访问模式、 加速比、效率、加速比定律知识。
不清楚域分解与功能分解的区别；不了解加速比的定义及相关的定律； 
30
会使用openMP多线程和MPI多进程编程
（支撑毕业要求3）
了解OpenMP编程，能够编写基本的OpenMP程序。能够设计开发基本的MPI并行计算程序
了解OpenMP的思想与实现机制，及OpenMP的编程模型、编译制导语句。熟悉消息传递并行计算、MPI、通信模式。熟悉准确使用openMP和MPI进行并行程序的设计。
了解OpenMP和MPI的思想与实现机制，准确使用openMP和MPI进行并行程序的设计。
会进行使用openMP和MPI进行的一些并行程序的设计。
不了解openMP和MPI的编程模型，不会使用这两种编程模型进行编程。 
50
掌握并行程序设计的基本方法和思路（支撑毕业要求5）
能够完成从问题分析到并行计算方案设计的全过程。掌握PCAM方法的基本思想， 
熟练掌握PCAM方法学和并行编程模型。精通并行编程模式。
熟练掌握PCAM方法学和并行编程模型。了解并行编程模式。
会进行PCAM方法学和并行编程模型。了解并行编程模式。
不熟悉 PCAM并行编程方法
20









 

















并行计算课程
结 题 报 告
（模板）
                    




报告名称：

姓    名：

学    号：

联系电话：

电子邮箱：

填写日期：





2020年制


说明：所有说明文本，包括本行，请在提交前删除。正文字号不大于小四，行间距不大于1.25倍。标题字号不大于四号。

一、实验内容概述
	用自己的话，复述本课程对实验的要求（包括所要求的算法、并行计算环境、数据分析要求等）。
	不少于300字，但不要超过0.5页。

二、并行算法分析设计
	（以流程图、伪代码、框图等方式给出针对相应并行计算方式的算法设计思路，简述）
2.1 多线程求PI算法设计
2.2 多线程求矩阵转置算法设计
2.3 MPI求矩阵转置算法设计
2.4 Hadoop/Spark算法实现
合理排版，不超过2页。

三、实验数据分析
3.1 实验环境（CPU型号与参数、内存容量与带宽、互联网络参数等）
3.2 实验数据综合分析（此部分的分析至少要包括加速比、效率两个方面的内容，但建议最多附4张图）
合理排版，不超过3页。

"
2160240,"
并行计算是面向计算机科学与技术专业的核心必修课。该课程旨在让学生能够掌握并行计算技术在研究与开发中的应用，能够根据自己的需要选择合适的并行计算环境与并行计算编程技术，独立完成针对本领域或所承担具体任务的并行算法，并能够独立完成并行应用程序的编制、调试与部署。课程内容主要介绍并行计算领域中基本概念以及基础的并行程序设计方法，目的是让学习本课程的同学了解并行计算硬件平台的类别、分布式计算模式以及MapReduce并行计算模型，掌握简单多线程/OpenMP/MPI并行化方法、GPU异构编程，以及基本的并行程序设计技术，为未来的工作或者科研打好基础。
该课程针对当前计算机类专业的学生并行思维以及并行编程能力，以适应大数据、人工智能大潮对算力的需求。

","
课程目标1：了解并行应用需求，掌握并行计算硬件、并行程序设计的基本概念；理解域分解、任务分解和流水线的并行化方法，能够针对具体应用选择合理并行化解决方案；了解国内外高性能计算发展现状。（支撑毕业要求3.2）
课程目标2：了解共享内存程序设计及多线程编程的基本思想，掌握Pthread/OpenMP/GPU等多个多线程编程模型；理解共享变量访问的冲突以及互斥方法；了解假共享的出现以及消除方法；学会采用多线程编程来并行化一些实际算法和例子并体现创新意识；能够针对特定的共享内存计算环境选择与使用恰当的技术进行多线程程序调优；学会异构GPU编程；掌握使用Eclipse作为开发工具进行多线程编程。（支撑毕业要求3.2，5.1）
课程目标3：掌握基本的MPI并行程序设计方法以及MPI混合异构编程，理解多线程与多进程的不同；掌握点对点通信和组通信，了解虚拟进程及其拓扑；学会采用多进程的方式进行并行分布式编程，理解死锁的概念以及如何避免；学会使用Eclipse工具进行多进程编程（支撑毕业要求3.2，5.1） 
课程目标4：了解大数据的基本概念；掌握MapReduce计算模型；了解Hadoop的调度策略；了解HDFS分布式文件系统；了解Hadoop容错和负载平衡机制；了解Hadoop的有确定；学会使用Eclipse进行Hadoop编程以及Hadoop程序的提交运行。（支撑毕业要求3.2，5.1）
课程目标5：掌握PCAM并行程序设计方法学，了解并行程序设计的三种基本策略；掌握四种常用的通信模式；及并行程序算法设计的判据；了解重复计算的优缺点；能够针对具体应用设计一个合理的并行优化方案；能够采用第Linux自带的性能监测工具进行程序性能监测。（支撑毕业要求5.1）

四、课程目标和毕业要求的对应关系

毕业要求
毕业要求指标点
支撑强度
课程目标

3.设计/开发解决方案

3.2能够设计满足特定需求的计算机系统或软硬件模块，并在其中体现创新意识。
M（0.2）
1，2，3，4
5.使用现代工具
5.1掌握计算机专业所需的基本技术、基础资源和基本工具的使用原理和使用方法，并理解它们的局限性；能够针对复杂计算机工程问题的不同需求，选择与使用恰当的技术、资源和软硬件工具。
M（0.2）
2，3，4，5

五、课程教学方法
本课程的目标是让学生能够了解并行计算的基本概念，了解主要的并行计算硬件平台，掌握基本的并行程序设计技术，了解并行算法分析与设计的方法。课程注重理论与实践的充分结合，上机实验占总学时的一半，实验课的时间结合课堂教学的进度相应安排。
课程内容难度较高，且与操作系统、计算机组成原理、数据结构、算法分析与设计、计算机网络等其他课程有密切联系，因此课堂教学需要结合相关课程的内容进行组织，使学生能够基本相关内容形成自己的专业知识体系；实践是本课程的重要环节，与教学内容中的多线程及MPI程序设计部分对应，在课堂授课时需要结合实验内容与要求提前进行有针对性地讲解；并行程序设计部分与并行计算硬件直接相关，此两部分授课内容需要相互呼应；课程后期关于分布式计算、MapReduce、并行程序设计方法学等部分内容没有相应的上机实验课程，需要结合实例进行讲解。
上机实验在多核计算机、集群等并行计算环境中进行，学生们对于Linux远程使用、集群环境中并行程序编译以及计算任务提交等较为陌生，需要辅以详细的实例演示，并安排专门的上机实验辅导人员；并行计算程序的性能分析与课堂教学的性能评测指标以及加速比定律部分结合密切，实验报告部分要求与之相呼应。

六、教学内容
1、授课与自学
第一章	 并行计算概述
1.1 并行计算基本概念
1.2 基本的并行化方法
本章重点：并行计算与传统串行计算的区别，典型的并行计算应用。
教学模式：课堂授课。
知识点：并行计算概念、并行计算应用领域、域分解、任务解。
能力：了解并行计算基本概念以及基本的并行化方法。

第二章 并行计算的性能评测
   2.1 并行计算的性能
   2.2 内存系统对性能的影响
   2.3 加速比定律
本章重点：掌握基本的并行计算性能指标，了解三个加速比定律。
教学模式：课堂授课。
知识点：加速比、效率、加速比定律。
能力：掌握并行计算程序性能分析方法与指标，理解三个加速比定律及其涵义。

第三章 并行计算硬件环境
   3.1 处理器
   3.2 互联网络
   3.3 内存访问模式
   3.4 并行计算系统体系结构分类
   3.5 并行计算作业管理
本章重点：了解SIMD、多核处理器、GPU和并行计算机互联网络。掌握内存访问模式，并行计算系统的体系结构分类和作业管理。
教学模式：课堂授课。
知识点：多核处理器、内存访问模式、并行计算系统的分类。
能力：能够编写基本的OpenMP程序。

第四章 多线程并行程序设计
   4.1 多线程基本概念
   4.2 多线程计算实例分析
   4.3 PThread多线程
   4.4 Java多线程
本章重点：理解线程与进程的区别以及操作系统调度线程的方式，掌握基本的PThread编程和Java多线程编程。
教学模式：课堂授课，上机实验。
知识点：内存系统参数、高速缓存、线程与进程、竞态条件、同步、PThread。
能力：能够分析与推导高速缓存对于计算性能的影响，能够编写PThread程序。

第五章 OpenMP
   5.1 OpenMP概述
   5.2 编译制导语句
本章重点：了解OpenMP的思想与实现机制，了解OpenMP编程。
教学模式：课堂授课。
知识点：OpenMP的编程模型、编译制导语句。
能力：能够编写基本的OpenMP程序。

第六章 GPU编程
   6.1 GPU体系结构
   6.2 CUDA程序设计
本章重点：了解GPU体系结构，会CUDA编程。
教学模式：课堂授课。
知识点：CUDA的编程模型。
能力：能够编写基本的CUDA程序。


第七章 MPI分布式编程
   7.1 MPI概述
   7.2 点到点通信
   7.3 组通信
   7.4 MPI数据类型
本章重点：掌握基于消息传递的并行计算方法，掌握基本的MPI接口，掌握基本的通信模式。
教学模式：课堂教学，上机实验。
知识点：消息传递并行计算、MPI、通信模式。
能力：能够设计开发基本的MPI并行计算程序。

第八章 MPI 多级混合编程
   8.1 多级混合编程概述
   8.2 MPI+OpenMP混合编程
   8.3 MPI+CUDA混合编程
本章重点：掌握MPI混合编程模型、会MPI+OpenMP、MPI+CUDA混合编程。
教学模式：课堂教学，上机实验。
知识点：多级混合编程，MPI+OpenMP混合编程、MPI+CUDA混合编程。
能力：能够编写较复杂的MPI混合并行计算程序。


第九章 MapReduce编程
   9.1 MapReduce背景介绍
   9.2 MapReduce编程模型
   9.3 Hadoop/YARN
本章重点：掌握MapReduce编程模型，了解Hadoop思想以及系统应用。
教学模式：课堂教学。
知识点：MapReduce编程模型、中间结果排序、Hadoop。
能力：能够判断应用问题是否可映射到MapReduce模型，了解Hadoop的使用。

第八章 并行程序设计方法学
   8.1 PCAM方法学
   8.2 并行编程模型
本章重点：掌握PCAM方法的基本思想，了解并行编程模式。
教学模式：课堂教学。
知识点：PCAM方法学、并行编程模型
能力：能够完成从问题分析到并行计算方案设计的全过程。

第十章 Spark编程
   10.1 Spark概述
   10.2 Spark框架介绍
   10.3 Spark编程模型
本章重点：掌握Spark编程模型，了解Spark思想以及系统应用。
教学模式：课堂教学。
知识点：RDD编程模型、Spark。
能力：能够判断应用问题是否可映射到RDD模型，了解Spark的使用。

第十一章 PCAM方法学
   11.1 划分(Partitioning)
   11.2 通讯(Communication)
   11.3 组合(Agglomeration)
   11.4 映射(Mapping)
   11.5 小结
本章重点：掌握PCAM方法的基本思想，了解并行编程模式。
教学模式：课堂教学。
知识点：PCAM方法学
能力：能够完成从问题分析到并行计算方案设计的全过程。

第十二章 并行算法的一般设计策略
   12.1 串行算法的直接并行化
   12.2 从问题描述开始设计并行算法
   12.3 借用已有算法求解新问题
   12.4 小结
本章重点：掌握并行算法并行化的一般设计策略。
教学模式：课堂教学。
知识点：多种不同的并行化设计策略
能力：能够这对一个问题，选择一个合适的并行化设计策略。


2、实验
实验教学内容：
实验一		多线程计算PI值
实验二    多线程实现矩阵转置算法
实验三		MPI实现矩阵转置算法
实验四    Hadoop/Spark算法实现
教学模式：机房授课和实验，演示并行计算环境的使用方法以及并行程序运行、性能分析方法，为学生提供基本的并行程序代码范例以及供参考的串行算法源代码。
知识点：并行计算环境使用、计算任务提交、性能分析、算法并行化
能力：能够使用集群等并行计算硬件环境，能够独立设计实现并行计算程序和提交并行计算任务，能够进行并行计算程序执行性能分析，初步掌握并行算法分析设计的基本思想与方法。

七、学时分配
教学内容
授课
实验
自学
课程设计
大作业
其他
并行计算概述
2

　
　


并行计算的性能评测
2

　
　


并行计算硬件环境
2

　
　


多线程并行程序设计
2

　
　


OpenMP
2





GPU编程
2





MPI分布式编程
2





MPI 多级混合编程
2





MapReduce编程
2





Spark编程
2





PCAM方法学
2





并行算法的一般设计策略
2





多线程计算PI值

4




多线程实现矩阵转置算法

4




MPI实现矩阵转置算法

4




Hadoop/Spark算法实现

4




总计：
24
16
　
　



八、考核与评价方式及标准
实验报告：40%
平时作业：20%
平时成绩：10%
大作业：30%
科目
分值
内容
评分标准
大作业
30
完成实验综合报告，提交文档、PPT与讲解视频。
1、 对第1/2/3/4次实验，进行算法分析比较；
2、 实验内容与理论课知识点的对应总结。
24-30：文档与PPT有深度，视频讲解条理清楚，知识点分析不少于12项；
18-14：文档与PPT完整，视频讲解基本到位，知识点分析不少于8项；
18分以下：内容缺失或错误。
迟交：一周内减3分，再迟计0分。
实验报告
40
4次上机实验：
1、 多线程求PI（15%）
2、 多线程求矩阵转置（30%）
3、 MPI求矩阵转置（30%）
4、 Hadoop/Spark（25%）
每次实验满分按100分计，累加折算。
90-100：分析总结详尽，代码完善；
80-89：代码完整，分析总结全面；
60-79：代码可运行，有分析总结；
60以下：代码或报告不合格。
迟交：一周内减10分，再迟计0分。
平时作业
20
10次理论课的课后作业，作业内容为针对每次课程内容知识点与重难点的理解与分析。
每次满分按10分计，累加折算。
9-10：自己总结且写作认真；
7-8：查阅网络材料，但直接摘抄；
5-6：拷贝PPT内容。
迟交减1分，不交不得分。
平时成绩
10
出勤情况与互动情况
基准分为7分，旷课一次减1分；
互动频次和质量综合考虑加1-3分。
      

1、课程目标达成考核与评价方式及成绩评定


考核与评价方式
成绩比例（%）

平时作业
课程实验
平时成绩
大作业
课程考试
课程目标1
支持毕业要求3
2
10
2
5

19
课程目标2
支持毕业要求3
5
5
3


13
支持毕业要求5
3


10

13
课程目标3
支持毕业要求3

5



5
支持毕业要求5
5

3
5

13
课程目标4
支持毕业要求3
3
5

5

13
支持毕业要求5

5



5
课程目标5
支持毕业要求3
2
5
2
5

14
支持毕业要求5

5



5
合计
20
40
10
30

100

2、考核与评价标准
实验评价标准：

基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
实验
能够根据实验指导书规定的实验目的与要求，进行多线程编程和多进程编程。同时熟悉运行和测试并行程序。
（支撑毕业要求3）
按照要求完成预习；按照实验安全操作规则进行实验；实验步骤与结果正确；实验机器设备完好。
能够预习，按照实验安全操作规则进行实验；实验步骤与结果正确；实验机器设备完好。
按照实验安全操作规则进行实验；实验步骤与结果基本正确；实验机器设备完好。
没有按照实验安全操作规则进行实验；或者实验步骤与结果不正确。
65
在并行程序的设计中，能够借助于已有的IDE开发工具实现快速高效开发，同时会使用一些并行调试工具进行程序的调试。
（支撑毕业要求5）
能够使用Eclipse工具完成并行程序的开发设计；能够熟练掌握并行程序的程序的部署和运行。 
能够使用Eclipse工具完成并行程序的开发设计；会并行程序的程序的部署和运行。
能够使用Eclipse工具完成并行程序的开发设计；了解并行程序的程序的部署和运行基本方法。
不能熟练的使用Eclipse进行并行程序设计和开发。
35
注：该表格中比例为实验考核成绩比例。

课程考试考核与评价标准

基本要求
评价标准
比例
优秀 
（0.9-1）
良好
（0.7-0.89）
合格（0.6-0.69）
不合格（0-0.59）
掌握并行计算基本知识
（支撑毕业要求3）
了解并行计算的基本概念及其基本的并行化方法，能够理解并行计算与传统的串行计算的区别与联系。熟悉并行程序性能评测的基本方法。
熟悉并行计算概念、并行计算应用领域、域分解、任务解。掌握并行计算机体系结构、内存访问模式、多核处理器、GPU、加速比、效率、加速比定律知识。
熟悉并行计算概念、并行计算应用领域、域分解、任务解。了解并行计算机体系结构、内存访问模式、多核处理器、GPU、加速比、效率、加速比定律知识。
了解并行计算概念、并行计算应用领域、域分解、任务解。掌握并行计算机体系结构、内存访问模式、 加速比、效率、加速比定律知识。
不清楚域分解与功能分解的区别；不了解加速比的定义及相关的定律； 
30
会使用openMP多线程和MPI多进程编程
（支撑毕业要求3）
了解OpenMP编程，能够编写基本的OpenMP程序。能够设计开发基本的MPI并行计算程序
了解OpenMP的思想与实现机制，及OpenMP的编程模型、编译制导语句。熟悉消息传递并行计算、MPI、通信模式。熟悉准确使用openMP和MPI进行并行程序的设计。
了解OpenMP和MPI的思想与实现机制，准确使用openMP和MPI进行并行程序的设计。
会进行使用openMP和MPI进行的一些并行程序的设计。
不了解openMP和MPI的编程模型，不会使用这两种编程模型进行编程。 
50
掌握并行程序设计的基本方法和思路（支撑毕业要求5）
能够完成从问题分析到并行计算方案设计的全过程。掌握PCAM方法的基本思想， 
熟练掌握PCAM方法学和并行编程模型。精通并行编程模式。
熟练掌握PCAM方法学和并行编程模型。了解并行编程模式。
会进行PCAM方法学和并行编程模型。了解并行编程模式。
不熟悉 PCAM并行编程方法
20









 

















并行计算课程
结 题 报 告
（模板）
                    




报告名称：

姓    名：

学    号：

联系电话：

电子邮箱：

填写日期：





2020年制


说明：所有说明文本，包括本行，请在提交前删除。正文字号不大于小四，行间距不大于1.25倍。标题字号不大于四号。

一、实验内容概述
	用自己的话，复述本课程对实验的要求（包括所要求的算法、并行计算环境、数据分析要求等）。
	不少于300字，但不要超过0.5页。

二、并行算法分析设计
	（以流程图、伪代码、框图等方式给出针对相应并行计算方式的算法设计思路，简述）
2.1 多线程求PI算法设计
2.2 多线程求矩阵转置算法设计
2.3 MPI求矩阵转置算法设计
2.4 Hadoop/Spark算法实现
合理排版，不超过2页。

三、实验数据分析
3.1 实验环境（CPU型号与参数、内存容量与带宽、互联网络参数等）
3.2 实验数据综合分析（此部分的分析至少要包括加速比、效率两个方面的内容，但建议最多附4张图）
合理排版，不超过3页。

"
2160240,"
并行计算是面向计算机科学与技术专业的核心必修课。该课程旨在让学生能够掌握并行计算技术在研究与开发中的应用，能够根据自己的需要选择合适的并行计算环境与并行计算编程技术，独立完成针对本领域或所承担具体任务的并行算法，并能够独立完成并行应用程序的编制、调试与部署。课程内容主要介绍并行计算领域中基本概念以及基础的并行程序设计方法，目的是让学习本课程的同学了解并行计算硬件平台的类别、分布式计算模式以及MapReduce并行计算模型，掌握简单多线程/OpenMP/MPI并行化方法、GPU异构编程，以及基本的并行程序设计技术，为未来的工作或者科研打好基础。
该课程针对当前计算机类专业的学生并行思维以及并行编程能力，以适应大数据、人工智能大潮对算力的需求。

","
课程目标1：了解并行应用需求，掌握并行计算硬件、并行程序设计的基本概念；理解域分解、任务分解和流水线的并行化方法，能够针对具体应用选择合理并行化解决方案；了解国内外高性能计算发展现状。（支撑毕业要求3.2）
课程目标2：了解共享内存程序设计及多线程编程的基本思想，掌握Pthread/OpenMP/GPU等多个多线程编程模型；理解共享变量访问的冲突以及互斥方法；了解假共享的出现以及消除方法；学会采用多线程编程来并行化一些实际算法和例子并体现创新意识；能够针对特定的共享内存计算环境选择与使用恰当的技术进行多线程程序调优；学会异构GPU编程；掌握使用Eclipse作为开发工具进行多线程编程。（支撑毕业要求3.2，5.1）
课程目标3：掌握基本的MPI并行程序设计方法以及MPI混合异构编程，理解多线程与多进程的不同；掌握点对点通信和组通信，了解虚拟进程及其拓扑；学会采用多进程的方式进行并行分布式编程，理解死锁的概念以及如何避免；学会使用Eclipse工具进行多进程编程（支撑毕业要求3.2，5.1） 
课程目标4：了解大数据的基本概念；掌握MapReduce计算模型；了解Hadoop的调度策略；了解HDFS分布式文件系统；了解Hadoop容错和负载平衡机制；了解Hadoop的有确定；学会使用Eclipse进行Hadoop编程以及Hadoop程序的提交运行。（支撑毕业要求3.2，5.1）
课程目标5：掌握PCAM并行程序设计方法学，了解并行程序设计的三种基本策略；掌握四种常用的通信模式；及并行程序算法设计的判据；了解重复计算的优缺点；能够针对具体应用设计一个合理的并行优化方案；能够采用第Linux自带的性能监测工具进行程序性能监测。（支撑毕业要求5.1）

四、课程目标和毕业要求的对应关系

毕业要求
毕业要求指标点
支撑强度
课程目标

3.设计/开发解决方案

3.2能够设计满足特定需求的计算机系统或软硬件模块，并在其中体现创新意识。
M（0.2）
1，2，3，4
5.使用现代工具
5.1掌握计算机专业所需的基本技术、基础资源和基本工具的使用原理和使用方法，并理解它们的局限性；能够针对复杂计算机工程问题的不同需求，选择与使用恰当的技术、资源和软硬件工具。
M（0.2）
2，3，4，5

五、课程教学方法
本课程的目标是让学生能够了解并行计算的基本概念，了解主要的并行计算硬件平台，掌握基本的并行程序设计技术，了解并行算法分析与设计的方法。课程注重理论与实践的充分结合，上机实验占总学时的一半，实验课的时间结合课堂教学的进度相应安排。
课程内容难度较高，且与操作系统、计算机组成原理、数据结构、算法分析与设计、计算机网络等其他课程有密切联系，因此课堂教学需要结合相关课程的内容进行组织，使学生能够基本相关内容形成自己的专业知识体系；实践是本课程的重要环节，与教学内容中的多线程及MPI程序设计部分对应，在课堂授课时需要结合实验内容与要求提前进行有针对性地讲解；并行程序设计部分与并行计算硬件直接相关，此两部分授课内容需要相互呼应；课程后期关于分布式计算、MapReduce、并行程序设计方法学等部分内容没有相应的上机实验课程，需要结合实例进行讲解。
上机实验在多核计算机、集群等并行计算环境中进行，学生们对于Linux远程使用、集群环境中并行程序编译以及计算任务提交等较为陌生，需要辅以详细的实例演示，并安排专门的上机实验辅导人员；并行计算程序的性能分析与课堂教学的性能评测指标以及加速比定律部分结合密切，实验报告部分要求与之相呼应。

六、教学内容
1、授课与自学
第一章	 并行计算概述
1.1 并行计算基本概念
1.2 基本的并行化方法
本章重点：并行计算与传统串行计算的区别，典型的并行计算应用。
教学模式：课堂授课。
知识点：并行计算概念、并行计算应用领域、域分解、任务解。
能力：了解并行计算基本概念以及基本的并行化方法。

第二章 并行计算的性能评测
   2.1 并行计算的性能
   2.2 内存系统对性能的影响
   2.3 加速比定律
本章重点：掌握基本的并行计算性能指标，了解三个加速比定律。
教学模式：课堂授课。
知识点：加速比、效率、加速比定律。
能力：掌握并行计算程序性能分析方法与指标，理解三个加速比定律及其涵义。

第三章 并行计算硬件环境
   3.1 处理器
   3.2 互联网络
   3.3 内存访问模式
   3.4 并行计算系统体系结构分类
   3.5 并行计算作业管理
本章重点：了解SIMD、多核处理器、GPU和并行计算机互联网络。掌握内存访问模式，并行计算系统的体系结构分类和作业管理。
教学模式：课堂授课。
知识点：多核处理器、内存访问模式、并行计算系统的分类。
能力：能够编写基本的OpenMP程序。

第四章 多线程并行程序设计
   4.1 多线程基本概念
   4.2 多线程计算实例分析
   4.3 PThread多线程
   4.4 Java多线程
本章重点：理解线程与进程的区别以及操作系统调度线程的方式，掌握基本的PThread编程和Java多线程编程。
教学模式：课堂授课，上机实验。
知识点：内存系统参数、高速缓存、线程与进程、竞态条件、同步、PThread。
能力：能够分析与推导高速缓存对于计算性能的影响，能够编写PThread程序。

第五章 OpenMP
   5.1 OpenMP概述
   5.2 编译制导语句
本章重点：了解OpenMP的思想与实现机制，了解OpenMP编程。
教学模式：课堂授课。
知识点：OpenMP的编程模型、编译制导语句。
能力：能够编写基本的OpenMP程序。

第六章 GPU编程
   6.1 GPU体系结构
   6.2 CUDA程序设计
本章重点：了解GPU体系结构，会CUDA编程。
教学模式：课堂授课。
知识点：CUDA的编程模型。
能力：能够编写基本的CUDA程序。


第七章 MPI分布式编程
   7.1 MPI概述
   7.2 点到点通信
   7.3 组通信
   7.4 MPI数据类型
本章重点：掌握基于消息传递的并行计算方法，掌握基本的MPI接口，掌握基本的通信模式。
教学模式：课堂教学，上机实验。
知识点：消息传递并行计算、MPI、通信模式。
能力：能够设计开发基本的MPI并行计算程序。

第八章 MPI 多级混合编程
   8.1 多级混合编程概述
   8.2 MPI+OpenMP混合编程
   8.3 MPI+CUDA混合编程
本章重点：掌握MPI混合编程模型、会MPI+OpenMP、MPI+CUDA混合编程。
教学模式：课堂教学，上机实验。
知识点：多级混合编程，MPI+OpenMP混合编程、MPI+CUDA混合编程。
能力：能够编写较复杂的MPI混合并行计算程序。


第九章 MapReduce编程
   9.1 MapReduce背景介绍
   9.2 MapReduce编程模型
   9.3 Hadoop/YARN
本章重点：掌握MapReduce编程模型，了解Hadoop思想以及系统应用。
教学模式：课堂教学。
知识点：MapReduce编程模型、中间结果排序、Hadoop。
能力：能够判断应用问题是否可映射到MapReduce模型，了解Hadoop的使用。

第八章 并行程序设计方法学
   8.1 PCAM方法学
   8.2 并行编程模型
本章重点：掌握PCAM方法的基本思想，了解并行编程模式。
教学模式：课堂教学。
知识点：PCAM方法学、并行编程模型
能力：能够完成从问题分析到并行计算方案设计的全过程。

第十章 Spark编程
   10.1 Spark概述
   10.2 Spark框架介绍
   10.3 Spark编程模型
本章重点：掌握Spark编程模型，了解Spark思想以及系统应用。
教学模式：课堂教学。
知识点：RDD编程模型、Spark。
能力：能够判断应用问题是否可映射到RDD模型，了解Spark的使用。

第十一章 PCAM方法学
   11.1 划分(Partitioning)
   11.2 通讯(Communication)
   11.3 组合(Agglomeration)
   11.4 映射(Mapping)
   11.5 小结
本章重点：掌握PCAM方法的基本思想，了解并行编程模式。
教学模式：课堂教学。
知识点：PCAM方法学
能力：能够完成从问题分析到并行计算方案设计的全过程。

第十二章 并行算法的一般设计策略
   12.1 串行算法的直接并行化
   12.2 从问题描述开始设计并行算法
   12.3 借用已有算法求解新问题
   12.4 小结
本章重点：掌握并行算法并行化的一般设计策略。
教学模式：课堂教学。
知识点：多种不同的并行化设计策略
能力：能够这对一个问题，选择一个合适的并行化设计策略。


2、实验
实验教学内容：
实验一		多线程计算PI值
实验二    多线程实现矩阵转置算法
实验三		MPI实现矩阵转置算法
实验四    Hadoop/Spark算法实现
教学模式：机房授课和实验，演示并行计算环境的使用方法以及并行程序运行、性能分析方法，为学生提供基本的并行程序代码范例以及供参考的串行算法源代码。
知识点：并行计算环境使用、计算任务提交、性能分析、算法并行化
能力：能够使用集群等并行计算硬件环境，能够独立设计实现并行计算程序和提交并行计算任务，能够进行并行计算程序执行性能分析，初步掌握并行算法分析设计的基本思想与方法。

七、学时分配
教学内容
授课
实验
自学
课程设计
大作业
其他
并行计算概述
2

　
　


并行计算的性能评测
2

　
　


并行计算硬件环境
2

　
　


多线程并行程序设计
2

　
　


OpenMP
2





GPU编程
2





MPI分布式编程
2





MPI 多级混合编程
2





MapReduce编程
2





Spark编程
2





PCAM方法学
2





并行算法的一般设计策略
2





多线程计算PI值

4




多线程实现矩阵转置算法

4




MPI实现矩阵转置算法

4




Hadoop/Spark算法实现

4




总计：
24
16
　
　



八、考核与评价方式及标准
实验报告：40%
平时作业：20%
平时成绩：10%
大作业：30%
科目
分值
内容
评分标准
大作业
30
完成实验综合报告，提交文档、PPT与讲解视频。
1、 对第1/2/3/4次实验，进行算法分析比较；
2、 实验内容与理论课知识点的对应总结。
24-30：文档与PPT有深度，视频讲解条理清楚，知识点分析不少于12项；
18-14：文档与PPT完整，视频讲解基本到位，知识点分析不少于8项；
18分以下：内容缺失或错误。
迟交：一周内减3分，再迟计0分。
实验报告
40
4次上机实验：
1、 多线程求PI（15%）
2、 多线程求矩阵转置（30%）
3、 MPI求矩阵转置（30%）
4、 Hadoop/Spark（25%）
每次实验满分按100分计，累加折算。
90-100：分析总结详尽，代码完善；
80-89：代码完整，分析总结全面；
60-79：代码可运行，有分析总结；
60以下：代码或报告不合格。
迟交：一周内减10分，再迟计0分。
平时作业
20
10次理论课的课后作业，作业内容为针对每次课程内容知识点与重难点的理解与分析。
每次满分按10分计，累加折算。
9-10：自己总结且写作认真；
7-8：查阅网络材料，但直接摘抄；
5-6：拷贝PPT内容。
迟交减1分，不交不得分。
平时成绩
10
出勤情况与互动情况
基准分为7分，旷课一次减1分；
互动频次和质量综合考虑加1-3分。
      

1、课程目标达成考核与评价方式及成绩评定


考核与评价方式
成绩比例（%）

平时作业
课程实验
平时成绩
大作业
课程考试
课程目标1
支持毕业要求3
2
10
2
5

19
课程目标2
支持毕业要求3
5
5
3


13
支持毕业要求5
3


10

13
课程目标3
支持毕业要求3

5



5
支持毕业要求5
5

3
5

13
课程目标4
支持毕业要求3
3
5

5

13
支持毕业要求5

5



5
课程目标5
支持毕业要求3
2
5
2
5

14
支持毕业要求5

5



5
合计
20
40
10
30

100

2、考核与评价标准
实验评价标准：

基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
实验
能够根据实验指导书规定的实验目的与要求，进行多线程编程和多进程编程。同时熟悉运行和测试并行程序。
（支撑毕业要求3）
按照要求完成预习；按照实验安全操作规则进行实验；实验步骤与结果正确；实验机器设备完好。
能够预习，按照实验安全操作规则进行实验；实验步骤与结果正确；实验机器设备完好。
按照实验安全操作规则进行实验；实验步骤与结果基本正确；实验机器设备完好。
没有按照实验安全操作规则进行实验；或者实验步骤与结果不正确。
65
在并行程序的设计中，能够借助于已有的IDE开发工具实现快速高效开发，同时会使用一些并行调试工具进行程序的调试。
（支撑毕业要求5）
能够使用Eclipse工具完成并行程序的开发设计；能够熟练掌握并行程序的程序的部署和运行。 
能够使用Eclipse工具完成并行程序的开发设计；会并行程序的程序的部署和运行。
能够使用Eclipse工具完成并行程序的开发设计；了解并行程序的程序的部署和运行基本方法。
不能熟练的使用Eclipse进行并行程序设计和开发。
35
注：该表格中比例为实验考核成绩比例。

课程考试考核与评价标准

基本要求
评价标准
比例
优秀 
（0.9-1）
良好
（0.7-0.89）
合格（0.6-0.69）
不合格（0-0.59）
掌握并行计算基本知识
（支撑毕业要求3）
了解并行计算的基本概念及其基本的并行化方法，能够理解并行计算与传统的串行计算的区别与联系。熟悉并行程序性能评测的基本方法。
熟悉并行计算概念、并行计算应用领域、域分解、任务解。掌握并行计算机体系结构、内存访问模式、多核处理器、GPU、加速比、效率、加速比定律知识。
熟悉并行计算概念、并行计算应用领域、域分解、任务解。了解并行计算机体系结构、内存访问模式、多核处理器、GPU、加速比、效率、加速比定律知识。
了解并行计算概念、并行计算应用领域、域分解、任务解。掌握并行计算机体系结构、内存访问模式、 加速比、效率、加速比定律知识。
不清楚域分解与功能分解的区别；不了解加速比的定义及相关的定律； 
30
会使用openMP多线程和MPI多进程编程
（支撑毕业要求3）
了解OpenMP编程，能够编写基本的OpenMP程序。能够设计开发基本的MPI并行计算程序
了解OpenMP的思想与实现机制，及OpenMP的编程模型、编译制导语句。熟悉消息传递并行计算、MPI、通信模式。熟悉准确使用openMP和MPI进行并行程序的设计。
了解OpenMP和MPI的思想与实现机制，准确使用openMP和MPI进行并行程序的设计。
会进行使用openMP和MPI进行的一些并行程序的设计。
不了解openMP和MPI的编程模型，不会使用这两种编程模型进行编程。 
50
掌握并行程序设计的基本方法和思路（支撑毕业要求5）
能够完成从问题分析到并行计算方案设计的全过程。掌握PCAM方法的基本思想， 
熟练掌握PCAM方法学和并行编程模型。精通并行编程模式。
熟练掌握PCAM方法学和并行编程模型。了解并行编程模式。
会进行PCAM方法学和并行编程模型。了解并行编程模式。
不熟悉 PCAM并行编程方法
20









 

















并行计算课程
结 题 报 告
（模板）
                    




报告名称：

姓    名：

学    号：

联系电话：

电子邮箱：

填写日期：





2020年制


说明：所有说明文本，包括本行，请在提交前删除。正文字号不大于小四，行间距不大于1.25倍。标题字号不大于四号。

一、实验内容概述
	用自己的话，复述本课程对实验的要求（包括所要求的算法、并行计算环境、数据分析要求等）。
	不少于300字，但不要超过0.5页。

二、并行算法分析设计
	（以流程图、伪代码、框图等方式给出针对相应并行计算方式的算法设计思路，简述）
2.1 多线程求PI算法设计
2.2 多线程求矩阵转置算法设计
2.3 MPI求矩阵转置算法设计
2.4 Hadoop/Spark算法实现
合理排版，不超过2页。

三、实验数据分析
3.1 实验环境（CPU型号与参数、内存容量与带宽、互联网络参数等）
3.2 实验数据综合分析（此部分的分析至少要包括加速比、效率两个方面的内容，但建议最多附4张图）
合理排版，不超过3页。

"
2160277,,
2160277,,
2160277,,
2160328,"
计算系统导论是智能与计算学部面向所有专业的大类基础课。计算机学科是一个复杂的综合性学科，该课程设计的目的是为计算机类专业的学生学习计算机知识提供入门和引导，教学内容包括计算机系统发展史、计算机软硬件组成、计算机系统理论和实践基础，以及计算机前沿技术。
该课程针对当前计算机类专业的新生学科知识匮乏但是计算机学科分支众多的情况，通过提供对计算学科的总体概览以及结合新兴技术进行领域知识介绍，帮助学生理清学习方向和目标，初步建立起学生的计算机思维。
","
1. 了解计算系统的发展历史，包括四代计算机系统结构的变化历程等，熟练掌握计算机的基本组成原理；理解计算机产生和发展的现实条件以及计算机的产生对人类社会产生的巨大影响。（支撑毕业要求3.3）
2. 熟悉数据库、计算机网络等传统计算机技术的基本原理，并理解计算机技术的发展带来的网络安全、伦理道德等问题。（支撑毕业要求6.1）
3. 了解计算机行业前沿技术以及行业动态，了解国家和社会发展亟需突破的技术壁垒，培养学生利用计算学科知识帮助社会治理的责任意识。（支撑毕业要求6.2）

4. 了解人工智能、大数据分析、云计算等技术的基本原理和发展趋势，理解计算机技术为社会管理和环境治理提供的支撑作用。（支撑毕业要求7.1）

"
2160329,"
《程序设计原理》是关于计算机程序设计语言、程序设计方法的一门基础课程。本课程以C++程序设计语言为载体，在介绍C++程序语言的基础上，注重介绍程序设计方法、规范、算法。课程的主要内容为讲解C++语言中的数据类型，运算，语句结构及其程序设计的基本方法，使学生掌握一门高级程序设计语言，熟悉程序设计的基本概念与方法，能够利用C++语言解决简单的算法问题，并为后续的专业课程奠定程序设计基础。

","
1. 掌握C++语言的基本语法，了解程序设计语言的类型，了解C++语言的特点及C++程序的构成，掌握C++程序运行的步骤，能够熟练使用C++语言进行基础的程序设计；能够熟练的使用C++语言的编程工具，熟练掌握编程工具的基本使用技巧如调试、环境变量设置等。（支撑毕业要求5.1）
2. 通过学习C++语言，掌握程序设计的基本方法，能够熟练使用分支结构、循环结构、数组、函数、指针、递归等，并能通过这些技巧设计出简单有效的方案解决一些经典算法问题，如冒泡排序、选择排序、二分检索等。（支撑毕业要求5.2）
3. 能够针对简单的实际应用问题进行建模、分析，利用C++语言编程解决这些问题。（支撑毕业要求3.2）

"
2180042,"
    本课程是计算机学科的核心课程，课程的重点在于向学生介绍人工智能领域的基本知识和算法，并通过结合课程中的实践项目，指导学生使用人工智能相关模型解决大数据时代的现实问题。
","
1.了解人工智能的发展历史和人工智能的发展方向及应用领域。（支撑毕业要求1、8）
2. 能够熟练掌握人工智能基本概念，包括搜索、马尔科夫决策过程、不确定决策、知识表示、机器学习等。（支撑毕业要求1、2、4、5）
3. 能够运用人工智能技术解决简单实际问题（支撑毕业要求2、4、5、6、9、10）




毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√






√




课程目标2
√
√

√
√







课程目标3

√

√
√
√


√
√


"
2180058,"
“图像处理”是为软件工程、计算机科学与技术等专业的学生开设的选修课程。随意移动设备的普及，图像的获取已经变得越来越容易，与人们的日常生活也联系得越来越紧密。“图像处理”这门课程正是以图像为主要研究对象，以培养学生理解并掌握基本的概念和算法并能够解决实际问题为目的的一门课程。本课程的主要内容包括三部分：第一部分是图像处理的基础，主要介绍了数字图像处理的基本概念和简单的图像变换；第二部分是数字图像处理的理论、方法与实例，包括了图像增强、图像复原与重建，图像编码与压缩等内容；第三部分是图像特征提取与分析的基本理论、方法和实例，包括图像分割、二值图像处理与形状分析、模板匹配与模式识别等。通过本课程的学习，学生应掌握有关数字图像处理的基本概念、原理、方法及应用，培养和增强学生创新意识和创新思维，提高实际动手能力和创新能力，为学生进一步学习图像理解、计算机视觉、计算机图形学等专业课程奠定基础。
","
1. 了解图像处理的基本概念，掌握不同的图像处理算法在实际应用中的主要用途和使用方法。（支撑毕业要求1）
2. 熟悉图像增强、复原、压缩、特征提取等常见算法，并能够使用常见的编程语言实现这些算法。（支撑毕业要求4）
3. 熟悉直方图均衡化、傅里叶变换、霍夫变换、SIFT特征提取等算法的主要用途，掌握算法的原理和应用，并能通过设计高效的编程实现解决实际生活中的问题（例如“基于内容的图像搜索”）。（支撑毕业要求3）
4. 能够使用在学术、工程领域常用的编程语言、集成开发环境实现形式化模型和算法。（支撑毕业要求5）
5. 对于学习和实验中遇到的问题，能够清晰明确地表达和陈述，并通过互联网等现代化工具解决。 （支撑毕业要求10）
6. 培养良好的计算机、软件工程师的职业道德规范，具有良好的社会责任感。（支撑毕业要求6、8）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2



√








课程目标3


√









课程目标4




√







课程目标5









√


课程目标6





√

√




四、基本要求
注重理论与实际应用相结合，使用多媒体教学、网络化辅助教学。考虑到课程中部分算法复杂度高、需要专门硬件等特性，教学组搭建高性能服务器，为全部选课学生提供在线开发、测试系统，降低了学习图像处理算法的硬件门槛，提高了学生学习的积极性。
五、教学内容
（一）、授课与自学
1 图像处理概述
1.1 图像、数字图像的概念
1.2 数字图像处理的概念、起源、与其他学科的联系
1.3 数字图像处理在现实中的应用
1.4 数字图像处理的主要研究内容
本章重点：数字图像处理的概念和应用
难点：理解图像处理在各个领域的应用
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：数字图像处理的历史及应用。
能力要求：能够理解数字图像在计算机中的表示；能够理解不同光谱范围内的图像处理应用；能够列举出数字图像处理中的典型应用
2 数字图像基础
2.1 图像的获取和感知：人类视觉系统的特点，光学成像系统，不同的传感器类型
2.2 图像的数字化：取样，量化，图像的放大与缩小，插值算法（最近邻、双线性插值）
2.3 数字图像的描述：图像矩阵，本征图像概念
本章重点： 数字图像的数学表示，使用matlab进行图像的读取与显示
难点：使用最近邻、双线性插值算法对图像进行放大与缩小
教学模式：课堂授课、课后复习，指导学生查阅相关文献，课堂展示双线性插值，展示使用matlab进行常见的矩阵操作
知识点：灰度、彩色图像的矩阵表示、使用matlab对矩阵操作、常见的两种插值算法。
能力要求：能够理解使用matlab完全简单的图像操作，包括读取图像、显示图像、放大、缩小图像；能够完全理解图像的最近邻、双线性插值算法。
3 空间域图像增强
3.1 图像增强的目的、含义、基本方法等
3.2 基本灰度变换：灰度变换函数分类（线性、对数、幂次、分段）、常见的灰度变换函数及其作用
3.3 直方图处理：概念与咨询、直方图均衡化算法
3.4 空间滤波基础：卷积、滤波核
3.5 平滑空间滤波器：盒式滤波、高斯滤波、中值滤波
3.6 锐化空间滤波器：Sobel滤波、Laplace滤波
3.7 混合空间滤波器：结合直方图处理、空间滤波器对图像进行增强
难点：直方图均衡化算法、空间域图像滤波
教学模式：课堂授课、课后复习，指导学生查阅相关文献，完成基本原理的习题。
知识点：灰度变换、直方图、空间滤波器
能力要求：能够理解灰度变换、直方图变换；能够实现空间滤波器，并理解不同滤波核的滤波器能够完成的功能。
4 频率域图像增强
4.1 傅里叶变换：一维傅里叶变换、二维傅里叶变换、傅里叶变换的性质
4.2 图像的傅里叶变换：离散傅里叶变换、傅里叶变换与图像灰度的关系
4.3 频率域滤波的步骤
4.4 频率域滤波与空间域滤波之间的关系
4.5 低通滤波器：理想低通、巴特沃斯低通、高斯低通
4.6 高通滤波器：理想高通，巴特沃斯高通、高斯高通
本章重点：傅里叶变换、频率域滤波 
难点：图像的傅里叶变换、频率域滤波的理解
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：一维傅里叶变换；二维傅里叶变换；频率域滤波的步骤；频率域滤波与空间域滤波之间的关系；不同类型的频率域滤波器
能力要求：能够理解图像傅里叶变换；能够使用不同类型的频率域滤波器完成频率域的滤波。
5 图像复原
5.1 图像退化模型
5.2 噪声模型
5.3 仅在噪声存在下的空间滤波复原
5.4 线性、位置不变的退化
5.5 估计退化函数
5.6 利用退化函数复原图像
本章重点：简单的图像去噪及线性、位置不变的退化图像复原
难点：利用频率域的方式进行线性位置不变的退化征图像复原 
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：不同类型的噪声；噪声参数的估计；不同类型的空间滤波器及其性质、适用范围；线性、位置不变的图像退化模型；逆滤波、维纳滤波、约束最小二乘滤波
能力要求：能够理解并实现空间滤波去除噪声；能够理解图像退化模型的推导；能够理解逆滤波、维纳滤波、约束最小二乘滤波的思想。
6、图像分割
6.1 间断检测： 点检测、线检测
6.2 边缘连接与边界检测：霍夫变换、最小二乘法、RANSAC法拟合直线 
6.3 阈值分割：全局阈值、最佳全局阈值，自适应阈值
6.4 区域分割：区域增长；区域分离与合并
本章重点：使用霍夫变换、最小二乘法、RANSAC法进行边缘连接；自适应阈值进行图像分割；区域增长、区域分离与合并的思想
难点：边缘连接算法；自适应阈值分割算法；区域分割的思想
教学模式：课堂授课、课后复习，指导学生查阅相关文献，在实际系统上加强相关命令的使用经验。
知识点：点检测； 线检测；霍夫变换；最小二乘法拟合直线；RANSAC法拟合直线；全局阈值、自适应阈值
能力要求：能够理解并实现三种拟合直线的方法，并将其应用至拟合不同的解析图形；能够理解自适应阈值、区域分割的思想，并且会使用相应的matlab函数完成功能
7、图像的表示与描述
7.1 图像的表示方法： 链码、多边形近似、标记图、边界线段、骨架
7.2 边界描绘子：一些简单的描绘子，形状数，傅里叶描绘子，统计矩
7.3 区域描绘子：简单的描绘子，拓扑描绘子，纹理，二维函数的矩
7.4 运用主分量进行描述
本章重点：使用边界描绘子、区域描绘子对图像进行描绘 
难点：不同的描绘子在对图像进行描绘时的算法 
教学模式：课堂授课、课后复习，指导学生查阅相关文献，在实际系统上加强相关命令的使用经验。
知识点：链码、多边形近似、标记图、形状数、统计矩、拓扑描绘子、纹理、二维函数的矩 
能力要求：能够理解并实现较简单的图像描绘子
8、图像识别
8.1 模式和模式类
8.2 基于决策理论方法的识别：匹配、最佳统计分类器、神经网络 
8.3 结构性方法：匹配形状数目、串匹配
本章重点：通过不能识别方法及其适用范围 
难点：最佳统计分类器；神经网络中的反射传播；串匹配的语法识别；串匹配的句法识别 
教学模式：课堂授课、课后复习，指导学生查阅相关文献，在实际系统上加强相关命令的使用经验。
知识点：神经网络的构成；串匹配中的语法、句法 
能力要求：能够理解并实现较简单基于决策理论方法的目标识别系统
（二）、大作业
作业一、图像的数字化表示
内容：理解matlab中图像的表示，初始会用matlab处理图像问题。具体内容包括：
1、 使用matlab写一个函数，img = generateFigure(imgW,imgH)，其作用为产生一幅的彩色图像，图像中用红色显示 [0,2*pi] 的正弦波，用绿色显示[0,2*pi]的余弦波，蓝色显示[0,2*pi]的y=x^2图像。
2、 不使用for循环，实现图像放大整数倍时的双线性插值算法。
教学模式：课堂上先介绍matlab对图像处理的常用方法，学生独立编程实现，然后撰写设计方案，编程调试，最后提交作业报告和源代码。
知识点：图像的数字化表示。matlab对图像的操作 
能力：能够理解图像在计算机中以矩阵方式进行存储，能够完成matlab的矩阵化操作
作业二、图像的空间滤波
内容：理解图像的空间滤波方法。具体内容包括：
1、 使用matlab完成常见的空间滤波器，具体包括，算术均值滤波器、几何均值滤波器、谐波均值滤波器、逆谐波均值滤波器、中值滤波器、最大值和最小值滤波器、中点滤波器、修正后的阿尔法均值滤波器
教学模式：课堂上先介绍均值滤波器、统计顺序滤波器的基本原理，学生独立编程实现，然后撰写设计方案，编程调试，最后提交作业报告和源代码。
知识点：图像的空间滤波 
能力：能够理解图像的空间滤波，能够理解不同的滤波核所起的作用，能够通过编写作业报告完整描述实验过程。
作业三、图像的分割
内容：理解图像分割中常见的算法。具体内容包括：
1、 对Laplace of Gaussian(LoG)的数学形式进行推导。
2、 实现最小二乘法、RANSAC法、霍夫变换法对图像中直线检测。
教学模式：课堂上先对LoG进行简单介绍并要求学生课后自己查阅相关文献，对LoG的数学公式进行详细推导；要求学生深入理解三种直线检测算法，编写程序解决问题并加以调试，最后提交作业报告和源代码。
知识点：LoG算子的性质。图像中直线的检测
能力：能够理解为什么使用LoG进行图像边缘的检测，理解直线检测的步骤和算法，能够通过编写作业报告完整描述实验过程。
作业"
2180111,"
“毕业设计（论文）”是软件工程专业本科生一门集中实践类必修课程，是本科教学过程的重要实践教学环节,对培养学生综合运用所学的软件工程基础理论、基本知识和基本技能解决实际软件工程复杂问题的能力有重要作用。通过这一教学环节，学生可以得到工程实践能力、科学研究素养和创新意识的培养和训练。
","
四、课程目标和毕业要求的对应关系
五、本课程中的复杂工程问题定义
七、教学内容、基本要求与学时分配
十、考核与评价方式及标准
李春
2020/06/14
针对工程认证问题点修改如下
三、课程目标
四、课程目标和毕业要求的对应关系
十、考核与评价方式及标准
李春
2020/06/14
针对工程认证问题点修改如下
三、课程目标
四、课程目标和毕业要求的对应关系

一、课程基本信息
课程代码：2180111
课程名称：毕业设计（论文）
课程类别：集中实践类
课程性质：必修
学时/学分：16周 / 12
学时分配：	授课： 			上机：
				实验:				实践：
				实践（周数）：16
    适用专业：软件工程专业
授课学院：软件学院
先修课程：软件工程专业培养方案中规定的课程
同修课程：无
    教材及主要参考书：
（1） 指导教师在指导过程中提供的参考文献、相关书籍
（2） 天津大学关于“毕业设计（论文）”的有关管理规定
（3） 天津大学本科生毕业设计（论文）撰写规范及模板
二、课程简介
“毕业设计（论文）”是软件工程专业本科生一门集中实践类必修课程，是本科教学过程的重要实践教学环节,对培养学生综合运用所学的软件工程基础理论、基本知识和基本技能解决实际软件工程复杂问题的能力有重要作用。通过这一教学环节，学生可以得到工程实践能力、科学研究素养和创新意识的培养和训练。
三、课程目标
1、使学生能够按照毕业设计课题文献综述的要求，通过使用文献检索、资料查询的基本方法，并运用所学过的各种数学、自然科学和其它工程知识尤其是信息科学相关的网络、数据库等信息技术工具查询分析解决复杂软件工程问题。 (对应毕业要求3.3)
2、能够针对毕业设计课题的特定软件系统需求，按照软件工程领域的专业理论知识和方法，通过运用建立软件系统的设计模型分析系统内在机制或者建立实验模型，通过数据的收集、处理、分析、检验和综合对复杂工程问题加以研究并能够得到合理有效的结论。(对应毕业要求6.2) 
3、能够针对软件工程复杂工程问题，选择或自主研发恰当的技术手段和现代工程工具进行预测、模拟和建模，对预测模拟产生的现象、数据加以归纳、分析及进一步深入研究，在研究基础上设计或改进对复杂工程问题的解决方案，并能够在实践过程中领会面临的各种制约因素及相关工具的局限性。(对应毕业要求7.2)
4、在应用各种方式、方法设计和开发复杂软件系统的过程中体会软件工程对人类社会可持续发展的影响，不断深入认识环境问题对社会发展的影响，树立全流程绿色的理念，理解个人与社会的关系，树立服务于社会和大众的意识。 (对应毕业要求9.2)
5、针对毕业设计课题，能够在多学科背景下，了解和掌握软件项目中软件工程的周期及成本特性与工程管理原理和经济决策的基本方法。(对应毕业要求13.1)
6、理解软件工程复杂工程问题中工程管理和经济决策的制约因素和相互作用。并能够灵活运用这些因素和管理决策方法解决项目中出现的问题。 (对应毕业要求13.2)
7、在解决复杂软件工程问题的过程中体会到全面知识和能力的重要性，体会到学习的重要性，养成自主学习终身学习的意识，培养自己成为具有能够掌握和跟随社会与技术不断发展能力的有用人才。(对应毕业要求14.2)
"
2180182,"
虚拟化技术与云计算是软件工程专业的一门重要的专业选修课。本门课程主要讲述虚拟化技术、云计算技术的理论基础及开发，数据中心系统技术。通过该课程的学习，学生不仅要掌握虚拟化和云计算技术的基础原理，还要掌握在Hadoop等云计算系统上的开发能力。
","
1. 了解虚拟化技术与云计算的发展历史和主要分类，能够选择适当的云计算技术解决实际需求。（支撑毕业要求8）
2. 能够理解掌握虚拟化技术原理，并应用虚拟化技术实现对物理计算资源的弹性管理。（支撑毕业要求3）
3能够应用虚拟化及云计算技术，编写云平台下的数据处理应用程序。（支撑毕业要求3）
4. 能够掌握云计算数据中心的网络基础设计架构的建设原理，根据实际规模需求设计云端网络拓扑结构。（支撑毕业要求3）
5. 能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1







√




课程目标2


√









课程目标3


√









课程目标4


√









课程目标5








√
√


四、基本要求
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
五、教学内容
1、授课与自学
1. 云计算概念
1.1 计算系统的历史，网格和云
1.2 云计算的服务模型和部署模型
本章重点：云计算概念，云服务模型，云部署模型
难点：云计算特征
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：集群计算，网格计算，云计算，基础设施即服务，平台即服务，软件即服务，公有云，私有云，混合云。
能力要求：理解云服务的概念，掌握云计算特征，掌握三种云服务模型和四种云部署模型。
2. 云计算基础
2.1 通信
2.2 时间
2.3 一致性
本章重点：多播，时间戳，合意一致性 
难点：通信消息排序，向量时间戳，Paxos协议
教学模式：课堂授课、课后复习。
知识点：多播消息排序，Gossip协议，时间差，时钟同步，逻辑时间戳，选举，异步系统同步
能力要求：根据需求能够正确的云计算环境下的通信方法、时钟同步及一致性保障。
3. 虚拟化技术
3.1 IaaS及虚拟化
3.2 抽象
3.3 虚拟化分类
3.4 服务器虚拟化
本章重点：抽象层次，服务器虚拟化，桌面虚拟化
难点：CPU虚拟化
教学模式：课堂授课、课后复习，上机练习。
知识点：硬件级虚拟化，系统虚拟化，寄宿虚拟化，原声虚拟化
能力要求：能够根据需求选择正确的虚拟化技术，实现物理机资源的多虚拟机管理。
4 云计算应用开发
4.1.Hadoop系统
4.2.YARN
4.3 资源调度
本章重点：Hadoop数据处理编程方法
难点：Map函数，Reduce函数，YARN架构，调度算法
教学模式：课堂授课、课后复习，上机练习。
知识点：Hadoop集群架构，Hadoop系统管理，故障处理，任务调度算法。
能力要求：根据需求编写数据处理程序。
  2、实验
   实验教学内容：
实验一、虚拟机使用
实验二、Hadoop部署
实验三、文本计数编程实现
实验"
2180182,"
虚拟化技术与云计算是软件工程专业的一门重要的专业选修课。本门课程主要讲述虚拟化技术、云计算技术的理论基础及开发，数据中心系统技术。通过该课程的学习，学生不仅要掌握虚拟化和云计算技术的基础原理，还要掌握在Hadoop等云计算系统上的开发能力。
","
1. 了解虚拟化技术与云计算的发展历史和主要分类，能够选择适当的云计算技术解决实际需求。（支撑毕业要求8）
2. 能够理解掌握虚拟化技术原理，并应用虚拟化技术实现对物理计算资源的弹性管理。（支撑毕业要求3）
3能够应用虚拟化及云计算技术，编写云平台下的数据处理应用程序。（支撑毕业要求3）
4. 能够掌握云计算数据中心的网络基础设计架构的建设原理，根据实际规模需求设计云端网络拓扑结构。（支撑毕业要求3）
5. 能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1







√




课程目标2


√









课程目标3


√









课程目标4


√









课程目标5








√
√


四、基本要求
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
五、教学内容
1、授课与自学
1. 云计算概念
1.1 计算系统的历史，网格和云
1.2 云计算的服务模型和部署模型
本章重点：云计算概念，云服务模型，云部署模型
难点：云计算特征
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：集群计算，网格计算，云计算，基础设施即服务，平台即服务，软件即服务，公有云，私有云，混合云。
能力要求：理解云服务的概念，掌握云计算特征，掌握三种云服务模型和四种云部署模型。
2. 云计算基础
2.1 通信
2.2 时间
2.3 一致性
本章重点：多播，时间戳，合意一致性 
难点：通信消息排序，向量时间戳，Paxos协议
教学模式：课堂授课、课后复习。
知识点：多播消息排序，Gossip协议，时间差，时钟同步，逻辑时间戳，选举，异步系统同步
能力要求：根据需求能够正确的云计算环境下的通信方法、时钟同步及一致性保障。
3. 虚拟化技术
3.1 IaaS及虚拟化
3.2 抽象
3.3 虚拟化分类
3.4 服务器虚拟化
本章重点：抽象层次，服务器虚拟化，桌面虚拟化
难点：CPU虚拟化
教学模式：课堂授课、课后复习，上机练习。
知识点：硬件级虚拟化，系统虚拟化，寄宿虚拟化，原声虚拟化
能力要求：能够根据需求选择正确的虚拟化技术，实现物理机资源的多虚拟机管理。
4 云计算应用开发
4.1.Hadoop系统
4.2.YARN
4.3 资源调度
本章重点：Hadoop数据处理编程方法
难点：Map函数，Reduce函数，YARN架构，调度算法
教学模式：课堂授课、课后复习，上机练习。
知识点：Hadoop集群架构，Hadoop系统管理，故障处理，任务调度算法。
能力要求：根据需求编写数据处理程序。
  2、实验
   实验教学内容：
实验一、虚拟机使用
实验二、Hadoop部署
实验三、文本计数编程实现
实验"
2180182,"
虚拟化技术与云计算是软件工程专业的一门重要的专业选修课。本门课程主要讲述虚拟化技术、云计算技术的理论基础及开发，数据中心系统技术。通过该课程的学习，学生不仅要掌握虚拟化和云计算技术的基础原理，还要掌握在Hadoop等云计算系统上的开发能力。
","
1. 了解虚拟化技术与云计算的发展历史和主要分类，能够选择适当的云计算技术解决实际需求。（支撑毕业要求8）
2. 能够理解掌握虚拟化技术原理，并应用虚拟化技术实现对物理计算资源的弹性管理。（支撑毕业要求3）
3能够应用虚拟化及云计算技术，编写云平台下的数据处理应用程序。（支撑毕业要求3）
4. 能够掌握云计算数据中心的网络基础设计架构的建设原理，根据实际规模需求设计云端网络拓扑结构。（支撑毕业要求3）
5. 能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1







√




课程目标2


√









课程目标3


√









课程目标4


√









课程目标5








√
√


四、基本要求
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
五、教学内容
1、授课与自学
1. 云计算概念
1.1 计算系统的历史，网格和云
1.2 云计算的服务模型和部署模型
本章重点：云计算概念，云服务模型，云部署模型
难点：云计算特征
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：集群计算，网格计算，云计算，基础设施即服务，平台即服务，软件即服务，公有云，私有云，混合云。
能力要求：理解云服务的概念，掌握云计算特征，掌握三种云服务模型和四种云部署模型。
2. 云计算基础
2.1 通信
2.2 时间
2.3 一致性
本章重点：多播，时间戳，合意一致性 
难点：通信消息排序，向量时间戳，Paxos协议
教学模式：课堂授课、课后复习。
知识点：多播消息排序，Gossip协议，时间差，时钟同步，逻辑时间戳，选举，异步系统同步
能力要求：根据需求能够正确的云计算环境下的通信方法、时钟同步及一致性保障。
3. 虚拟化技术
3.1 IaaS及虚拟化
3.2 抽象
3.3 虚拟化分类
3.4 服务器虚拟化
本章重点：抽象层次，服务器虚拟化，桌面虚拟化
难点：CPU虚拟化
教学模式：课堂授课、课后复习，上机练习。
知识点：硬件级虚拟化，系统虚拟化，寄宿虚拟化，原声虚拟化
能力要求：能够根据需求选择正确的虚拟化技术，实现物理机资源的多虚拟机管理。
4 云计算应用开发
4.1.Hadoop系统
4.2.YARN
4.3 资源调度
本章重点：Hadoop数据处理编程方法
难点：Map函数，Reduce函数，YARN架构，调度算法
教学模式：课堂授课、课后复习，上机练习。
知识点：Hadoop集群架构，Hadoop系统管理，故障处理，任务调度算法。
能力要求：根据需求编写数据处理程序。
  2、实验
   实验教学内容：
实验一、虚拟机使用
实验二、Hadoop部署
实验三、文本计数编程实现
实验"
2180250,"
自然语言处理是计算机科学领域与人工智能领域中的一个重要方向。它研究能实现人与计算机之间用自然语言进行有效通信的各种理论和方法。自然语言处理是一门融语言学、计算机科学、数学于一体的科学。因此，这一领域的研究将涉及自然语言，即人们日常使用的语言，所以它与语言学的研究有着密切的联系，但又有重要的区别。自然语言处理并不是一般地研究自然语言，而在于研制能有效地实现自然语言通信的计算机系统，特别是其中的软件系统。自然语言处理是计算机科学、人工智能、语言学关注计算机和自然语言之间的相互作用的研究领域。
本课程属于软件工程专业本科生的专业选修课程，旨在使学生掌握自然语言处理的基础内容，掌握对设计、使用和理解自然语言处理所需要的基本理论和主流方法。
","
1. 了解自然语言处理的发展历史和主流方法，能够选择适当的方法解决实际需求。（支撑毕业要求1）
2. 能够应用自然语言处理理论对该领域相关问题进行分析，并获得有效的解决方案。（支撑毕业要求2）
3. 能够针对自然语言处理中的科学问题，理解不同层次方法之间区别和联系，掌握分析实际问题并提出解决方案的能力，在实验环节中体现创新意识，综合考虑各类因素。（支撑毕业要求4）
4. 能够针对计算机工程问题，选择与使用计算机绘图、文献检索等现代化工具，进行系统的方案设计。（支撑毕业要求5）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3



√








课程目标4




√







四、基本要求
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业等。
五、教学内容
分章节说明教学内容，并说明教学重点与难点、主要的教学模式（包括授课、自学、实验、大作业等）以及对应的知识、能力要求。 
1、授课与自学
1 绪论
1.1问题的提出
1.2基本概念
1.3历史和现状
1.4研究内容
1.5当前问题和困难
1.6基本研究方法
1.7 数学基础
本章重点：自然语言处理的基本研究方法
难点：相关数学知识 
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：自然语言处理的研究现状，研究内容，基本研究方法。
能力要求：能够理解自然语言处理学科的研究内容和基本研究方法。
2 形式语言与自动机及其在NLP中的应用
2.1 基本概念：树、字符串、闭包
2.2 形式语言：正则文法，上下文无关文法，无约束文法
2.3 自动机：有限自动机与正则文法，CFG与下推自动机
2.4 有限自动机在NLP中应用
本章重点：CFG、句法树、编辑距离计算
难点：编辑距离计算
教学模式：课堂授课、课后复习，指导学生查阅相关文献，完成基本原理的习题。
知识点：形式语言（正则文法，上下文无关文法，无约束文法）；自动机（有限自动机与正则文法，CFG与下推自动机）；有限自动机与状态转移机的应用（英文单词拼写检查，词性标注）
能力要求：能够理解正则表达式、有限状态图等基本概念，理解4种形式文法的定义和相互关系，掌握文法与自动机的关系，及有限自动机在NLP中应用。
3 语料库与语言知识库
3.1语料库/语料库语言学的基本概念
3.2研究内容和发展历程
3.3语料库类型
3.4语料库建设中的基本问题
3.5典型语料库
3.6 词汇知识库
本章重点：语料库类型；典型语料库；词汇知识库
难点：wordnet应用
教学模式：课堂授课、课后复习，指导学生查阅相关文献，完成基本原理的习题。
知识点：语料库/语料库语言学的基本概念；语料库类型；典型语料库；wordnet应用
能力要求：能够理解语料库/语料库语言学的基本概念，理解语料库类型，典型语料库和词汇知识库。
4 语言模型
u4.1 n元语法的基本概念
u4.2 数据平滑方法
u4.3语言模型的自适应方法
u4.4语言模型的应用
本章重点：n元语法的基本概念，语言模型的自适应方法
难点：Cache-based方法
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：n元语法的基本概念（uni-gram, bi-gram, tri-gram）；数据平滑方法（减值法，删除减值法）；语言模型的自适应方法（Cache-based，Hybrid，ME-based）；语言模型的应用。
能力要求：能够理解n元语法的基本概念；能够掌握语言模型的自适应方法用于解决复杂问题。
5 隐马尔科夫模型
5.1 马尔可夫模型
5.2隐马尔可夫模型
5.3 前向算法
5.4 后向算法
5.5 Viterbi搜索算法
5.6 参数学习
5.7 应用举例
本章重点：前向与后向算法
难点：隐马尔可夫模型实现中小数溢出的问题
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：马尔可夫模型；隐马尔可夫模型；前向算法；后向算法；Viterbi搜索算法； 参数学习。
能力要求：能够掌握模型与算法，理解隐马尔可夫模型的三个基本问题，以及模型实现中需要注意的问题：小数溢出。
6、词法分析与词性标注
6.1 概述
6.2 英语的形态分析
6.3 汉语自动分词 
6.4 未登录词识别 
6.5 词性标注
本章重点：分词与词性标注结果评测 （正确率、找回率、F-测度值 ），汉语自动分词的方法（MM,最少分词法，统计法）
难点：规则和统计方法相结合的词性标注方法 
 教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：英语形态分析，汉语自动分词方法，未登录词识别，词性标注问题和方法，分词与词性标注结果评测。
能力要求：能够掌握汉语自动分词方法，词性标注方法，分词与词性标注结果评测；能够将词法分析与词性标注的知识用于解决实际问题。
7、语法理论
7.1 概述
7.2 GB理论
7.3 功能合一语法 (FUG) 
7.4 词汇功能语法 (LFG) 
7.5 树连接语法 (TAG) 
7.6 广义的短语结构语法 (GPSG) 
   本章重点：FUG,LFG,TAG 
难点：TAG的操作 
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：功能合一语法 (FUG) ，词汇功能语法 (LFG) ，树连接语法 (TAG)，广义的短语结构语法 (GPSG)。
能力要求：能够掌握功能合一语法 (FUG) ，词汇功能语法 (LFG) ，树连接语法 (TAG)，广义的短语结构语法 (GPSG)，能够将语法理论知识用于解决复杂工程问题。
8、句法分析
8.1 概述
8.2 短语结构分析
8.3 线图分析法
8.4 CYK分析算法  
8.5 概率上下文无关文法
8.6 PCFG的三个问题
8.7基于PCFG的句法分析实例
8.8 短语结构分析 方法评估
8.9基于PCFG分析方法的改进
本章重点：线图分析法 、CYK分析算法、概率上下文无关文法、PCFG句法分析 
难点：概率上下文无关文法、基于PCFG分析方法的改进
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：线图分析法 、CYK分析算法、概率上下文无关文法、PCFG句法分析、基于PCFG分析方法的改进
能力要求：能够掌握线图分析法 、CYK分析算法、概率上下文无关文法、PCFG，能够将句法分析知识用于解决复杂工程问题。
9、语义分析
9.1 概述
9.2 语义理论简介
9.3 格语法
9.4 语义网络  
9.5 概率依存理论
9.6 词义消岐
9.7 语义角色标注
本章重点：有监督的词义消歧方法、无监督的词义消歧方法 
难点： 概念依存理论
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：语义理论、格语法、语义网络、有监督的词义消歧方法 、无监督的词义消歧方法
能力要求：能够理解语义理论、掌握格语法、有监督和无监督的词义消歧方法能够将语法分析知识用于解决实际问题。
2、实验教学
实验教学内容：
实验一、文本处理基础。环境搭建，利用布朗语料库，对news类型问题计数。
实验二、分词和词性标注。在brown语料库中训练一个UnigramTagger一元标注器，用它标注一个句子，并进行评估。
实验三、句法分析实现。重现基于正则表达式的名词短语分块器例子。
实验"
2180256,"
本课程为软件工程专业高年级必修课。这门课程介绍软件工程人员在日常工作、沟通、交流中使用的英语。该课程的目的是让学生练习英语听、说，通过实践培训，提高个人的理解和英语表达。本课程让学生实践、组织和参加小组讨论。通过直接和间接培训的方式让学院为出国留学的英语水平考试、研究生入学考试英语考试做好准备。通过大量的实践练习的课程，提高学生作为专业技术人员的英语交流能力。
","
课程目标1：掌握英语语言沟通技巧的软件和IT行业的使用。（10.2， 12.1）
课程目标2：了解软件行业可接受的商业行为的规范和IT产业在西方的框架。（2.2， 12.2）
课程目标3：掌握组织一个专业英语讨论需要的各种技巧。（10.2， 12.1）
课程目标4：掌握在一个国际化开发环境中需要的基本语言技巧。（10.2， 12.1）
课程目标5：能够在软件开发规范流程中使用标准文体的写作方法。（12.1， 12.2）
课程目标6：掌握软件工程领域英语的演讲、辩论、作报告、汇报工作、面试、与主持会议的能力。（2.2，10.2，12.2）


毕业要求

2.2
10.2
12.1
12.2
课程目标1

√
√

课程目标2
√


√
课程目标3

√
√

课程目标4

√
√

课程目标5


√
√
课程目标6
√
√

√


"
2180265,"
软件工程是软件学院本科生的专业核心课程。该课程具有抽象性、理论性、实践性兼备的特点。本课程围绕软件开发相关的成本、质量、工期和服务相关的核心问题，主要讲授软件开发过程和软件项目管理相关的理论性概念以及实践框架、度量标准和工程方法。通过学习课程，学生了解软件工程的主要开发过程，并围绕开发过程掌握包括软件度量、成本估算、进度计划指定和风险管理等相关的理论、技术、方法和工具，并初步能够依据项目特点、团队实力和资源情况选择合适的软件开发过程，并利用所学理论、技术、工具和方法开展软件项目管理。
","
通过本课程的学习，学生应达到的目标如下：
1. 能够准确理解软件的特性，了解软件工程的基本概念和基本原理，对主流软件过程有较为深入的理解，能针对复杂的软件领域复杂工程问题，根据团队所掌握的资源、技术和工具，综合考虑考虑社会、健康、安全、法律及文化的影响，选择恰当的软件过程并遵循相应的流程、准则、标准和规范来开发软件产品。（支撑毕业要求13.1）
2. 能够正确运用软件工程过程和软件项目管理的理论、方法、工具个规范开展项目沟通和技术交流，同同行和社会工众进行有效的沟通。（支撑毕业要求13.1）
3. 能够根据软件需求、设计以及开发团队资源，正确估计软件开发的精度和成本，掌握开发高质量软件的方法，以及有效地策划和管理软件开发活动，为学生参加大型软件开发项目打下坚实的理论基础。（支撑毕业要求13.2）
4. 理解软件工程的概念体系，了解软件工程的工程化思维基本原理和方法，合理评估软件开发中的各类风险，有效控制开发进度和成本，能够面对国内外在软件工程过程及管理方面新的问题和挑战.（支撑毕业要求13.2）
"
2180266,,
2180267,"
 “形式化方法”是软件工程专业的一门专业基础必修课程，是ACM/IEEE共同规定的软件工程专业核心课程之一，其目的是为软件开发的工业化提供必要的数学工具及应用方法，其任务是培养学生作为软件工程专业人才在形式化方法论方面的基本素养，训练学生能够使用形式化方法来描述和验证软件系统的规范。

","
通过本课程的学习，使学生了解形式化方法的基本理论和基本原理，掌握软件形式规格，能应用基本形式化方法验证程序正确性。学会用“数学思维”去思考和用“形式化方法”去处理软件和系统开发过程的程序验证问题。具体目标如下：
1、能够借助文献查阅分析复杂计算机工程问题的影响因素，从现代软件工程角度清晰理解形式化方法的背景、目的、效果，对软件工程问题进行抽象，掌握形式化方法规格描述的数学及逻辑基础。（支撑毕业要求2.2）
2、能够应用数学及逻辑的基本原理以及计算机工程专业知识对软件系统工程问题的数学模型进行求解，全面地掌握Z规格，包括Z的类型系统，Z的数学及逻辑基础，模式的描述功能，模式类型，模式运算，Z规格的关系、函数、序列、包等基本概念。对系统开发需求分析过程中遇到的问题，能够清晰明确地表达与陈述，对自然语言和程序设计语言描述规格说明的缺陷通过Z规格描述进行有效解决。（支撑毕业要求2.3）
3、能够借助文献查阅了解B方法，及Z规格和B方法之间关系和常见模型检测方法。对复杂计算机工程问题进行有效抽象，选择正确的基于数学或形式语义的规格说明语言描述所开发的软件功能，对模型的合理性进行分析与评估，并验证结果的有效性。（支撑毕业要求2.2、2.3）

"
2180267,"
 “形式化方法”是软件工程专业的一门专业基础必修课程，是ACM/IEEE共同规定的软件工程专业核心课程之一，其目的是为软件开发的工业化提供必要的数学工具及应用方法，其任务是培养学生作为软件工程专业人才在形式化方法论方面的基本素养，训练学生能够使用形式化方法来描述和验证软件系统的规范。

","
通过本课程的学习，使学生了解形式化方法的基本理论和基本原理，掌握软件形式规格，能应用基本形式化方法验证程序正确性。学会用“数学思维”去思考和用“形式化方法”去处理软件和系统开发过程的程序验证问题。具体目标如下：
1、能够借助文献查阅分析复杂计算机工程问题的影响因素，从现代软件工程角度清晰理解形式化方法的背景、目的、效果，对软件工程问题进行抽象，掌握形式化方法规格描述的数学及逻辑基础。（支撑毕业要求2.2）
2、能够应用数学及逻辑的基本原理以及计算机工程专业知识对软件系统工程问题的数学模型进行求解，全面地掌握Z规格，包括Z的类型系统，Z的数学及逻辑基础，模式的描述功能，模式类型，模式运算，Z规格的关系、函数、序列、包等基本概念。对系统开发需求分析过程中遇到的问题，能够清晰明确地表达与陈述，对自然语言和程序设计语言描述规格说明的缺陷通过Z规格描述进行有效解决。（支撑毕业要求2.3）
3、能够借助文献查阅了解B方法，及Z规格和B方法之间关系和常见模型检测方法。对复杂计算机工程问题进行有效抽象，选择正确的基于数学或形式语义的规格说明语言描述所开发的软件功能，对模型的合理性进行分析与评估，并验证结果的有效性。（支撑毕业要求2.2、2.3）

"
2180277,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学导论课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。通过课程的学习，不但可以掌握处理离散结构的描述工具和方法，为后续课程的学习创造条件，而且可以提高抽象思维和严格的逻辑推理能力，为将来参与创新性的研究和开发工作打下坚实的基础。
","
1. 了解离散数学各部分（包括数理逻辑、集合论、代数系统、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题（例如“苏格拉底三段论”等推理问题、旅行商等优化问题），并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求2.1）
2. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。判断具体的应用问题是否能够使用离散数学课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。（支撑毕业要求3.2）
3. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求3.2）
"
2180277,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学导论课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。通过课程的学习，不但可以掌握处理离散结构的描述工具和方法，为后续课程的学习创造条件，而且可以提高抽象思维和严格的逻辑推理能力，为将来参与创新性的研究和开发工作打下坚实的基础。
","
1. 了解离散数学各部分（包括数理逻辑、集合论、代数系统、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题（例如“苏格拉底三段论”等推理问题、旅行商等优化问题），并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求2.1）
2. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。判断具体的应用问题是否能够使用离散数学课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。（支撑毕业要求3.2）
3. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求3.2）
"
2180277,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学导论课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。通过课程的学习，不但可以掌握处理离散结构的描述工具和方法，为后续课程的学习创造条件，而且可以提高抽象思维和严格的逻辑推理能力，为将来参与创新性的研究和开发工作打下坚实的基础。
","
1. 了解离散数学各部分（包括数理逻辑、集合论、代数系统、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题（例如“苏格拉底三段论”等推理问题、旅行商等优化问题），并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求2.1）
2. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。判断具体的应用问题是否能够使用离散数学课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。（支撑毕业要求3.2）
3. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求3.2）
"
2180277,"
离散数学是研究离散量的结构及其相互关系的数学学科，是现代数学的一个重要分支，在计算机科学与技术领域有着广泛的应用。离散数学导论课程是计算机专业的基础课程，是许多专业课程（如离散数学、程序设计语言、数据结构、操作系统、编译技术、人工智能、数据库、算法设计与分析等）必不可少的先行课程。通过课程的学习，不但可以掌握处理离散结构的描述工具和方法，为后续课程的学习创造条件，而且可以提高抽象思维和严格的逻辑推理能力，为将来参与创新性的研究和开发工作打下坚实的基础。
","
1. 了解离散数学各部分（包括数理逻辑、集合论、代数系统、图论）的基本定义和定理，理解上述定义定理与计算机科学中离散性问题的内在联系，掌握使用数学抽象模型解决特定计算问题的基本方法。熟悉离散数学各部分内容的主要特点，以及它们在计算机科学中的主要用途，掌握其解决计算问题的基本理论和方法。能够应用这些理论和方法解决一些经典问题（例如“苏格拉底三段论”等推理问题、旅行商等优化问题），并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。（支撑毕业要求2.1）
2. 学会分析计算机科学中不同问题的离散特性，结合离散数学各部分内容的特点，对于不同的具体问题，合理选择抽象模型，并使用正确的离散数学理论和方法进行分析。判断具体的应用问题是否能够使用离散数学课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。（支撑毕业要求3.2）
3. 面对复杂工程问题，能够利用离散数学的数学思维方法，对具体问题进行抽象建模和分析，包括将复杂问题分解为若干具有离散性质的子问题；基于不同子问题的特点，结合离散数学中各部分内容，寻找适当的抽象模型；利用离散数学的定义和定理，对各抽象模型进行分析；与计算机其他理论和技术（包括数据结构、算法分析等）相结合，进一步完善各子问题的抽象模型。（支撑毕业要求3.2）
"
2180278,"
计算机系统导论是智能与计算学部面向所有专业的大类基础课。计算机学科是一个复杂的综合性学科，该课程设计的目的是为计算机类专业的学生学习计算机知识提供入门和引导，教学内容包括计算机系统发展史、计算机软硬件组成、计算机系统理论和实践基础，以及计算机前沿技术。
该课程针对当前计算机类专业的新生学科知识匮乏但是计算机学科分支众多的情况，通过提供对计算学科的总体概览以及结合新兴技术进行领域知识介绍，帮助学生理清学习方向和目标，初步建立起学生的计算机思维。
","
1. 了解计算机系统的发展历史，包括四代计算机系统结构的变化历程等，熟练掌握计算机的基本组成原理；理解计算机产生和发展的现实条件以及计算机的产生对人类社会产生的巨大影响。（支撑毕业要求5.3）
2. 熟悉数据库、计算机网络等传统计算机技术的基本原理，并理解计算机技术的发展带来的网络安全、伦理道德等问题。（支撑毕业要求8.1）
3. 了解人工智能、大数据分析、云计算等技术的基本原理和发展趋势，理解计算机技术为社会管理和环境治理提供的支撑作用。（支撑毕业要求9.1）
4. 了解计算机行业前沿技术以及行业动态，了解国家和社会发展亟需突破的技术壁垒，培养学生与计算学科日新月异的发展需求相称的学习思维和能力。（支撑毕业要求14.2）

"
2180278,"
计算机系统导论是智能与计算学部面向所有专业的大类基础课。计算机学科是一个复杂的综合性学科，该课程设计的目的是为计算机类专业的学生学习计算机知识提供入门和引导，教学内容包括计算机系统发展史、计算机软硬件组成、计算机系统理论和实践基础，以及计算机前沿技术。
该课程针对当前计算机类专业的新生学科知识匮乏但是计算机学科分支众多的情况，通过提供对计算学科的总体概览以及结合新兴技术进行领域知识介绍，帮助学生理清学习方向和目标，初步建立起学生的计算机思维。
","
1. 了解计算机系统的发展历史，包括四代计算机系统结构的变化历程等，熟练掌握计算机的基本组成原理；理解计算机产生和发展的现实条件以及计算机的产生对人类社会产生的巨大影响。（支撑毕业要求5.3）
2. 熟悉数据库、计算机网络等传统计算机技术的基本原理，并理解计算机技术的发展带来的网络安全、伦理道德等问题。（支撑毕业要求8.1）
3. 了解人工智能、大数据分析、云计算等技术的基本原理和发展趋势，理解计算机技术为社会管理和环境治理提供的支撑作用。（支撑毕业要求9.1）
4. 了解计算机行业前沿技术以及行业动态，了解国家和社会发展亟需突破的技术壁垒，培养学生与计算学科日新月异的发展需求相称的学习思维和能力。（支撑毕业要求14.2）

"
2180278,"
计算机系统导论是智能与计算学部面向所有专业的大类基础课。计算机学科是一个复杂的综合性学科，该课程设计的目的是为计算机类专业的学生学习计算机知识提供入门和引导，教学内容包括计算机系统发展史、计算机软硬件组成、计算机系统理论和实践基础，以及计算机前沿技术。
该课程针对当前计算机类专业的新生学科知识匮乏但是计算机学科分支众多的情况，通过提供对计算学科的总体概览以及结合新兴技术进行领域知识介绍，帮助学生理清学习方向和目标，初步建立起学生的计算机思维。
","
1. 了解计算机系统的发展历史，包括四代计算机系统结构的变化历程等，熟练掌握计算机的基本组成原理；理解计算机产生和发展的现实条件以及计算机的产生对人类社会产生的巨大影响。（支撑毕业要求5.3）
2. 熟悉数据库、计算机网络等传统计算机技术的基本原理，并理解计算机技术的发展带来的网络安全、伦理道德等问题。（支撑毕业要求8.1）
3. 了解人工智能、大数据分析、云计算等技术的基本原理和发展趋势，理解计算机技术为社会管理和环境治理提供的支撑作用。（支撑毕业要求9.1）
4. 了解计算机行业前沿技术以及行业动态，了解国家和社会发展亟需突破的技术壁垒，培养学生与计算学科日新月异的发展需求相称的学习思维和能力。（支撑毕业要求14.2）

"
2180278,"
计算机系统导论是智能与计算学部面向所有专业的大类基础课。计算机学科是一个复杂的综合性学科，该课程设计的目的是为计算机类专业的学生学习计算机知识提供入门和引导，教学内容包括计算机系统发展史、计算机软硬件组成、计算机系统理论和实践基础，以及计算机前沿技术。
该课程针对当前计算机类专业的新生学科知识匮乏但是计算机学科分支众多的情况，通过提供对计算学科的总体概览以及结合新兴技术进行领域知识介绍，帮助学生理清学习方向和目标，初步建立起学生的计算机思维。
","
1. 了解计算机系统的发展历史，包括四代计算机系统结构的变化历程等，熟练掌握计算机的基本组成原理；理解计算机产生和发展的现实条件以及计算机的产生对人类社会产生的巨大影响。（支撑毕业要求5.3）
2. 熟悉数据库、计算机网络等传统计算机技术的基本原理，并理解计算机技术的发展带来的网络安全、伦理道德等问题。（支撑毕业要求8.1）
3. 了解人工智能、大数据分析、云计算等技术的基本原理和发展趋势，理解计算机技术为社会管理和环境治理提供的支撑作用。（支撑毕业要求9.1）
4. 了解计算机行业前沿技术以及行业动态，了解国家和社会发展亟需突破的技术壁垒，培养学生与计算学科日新月异的发展需求相称的学习思维和能力。（支撑毕业要求14.2）

"
2180279,"
《程序设计原理》是关于计算机程序设计语言、程序设计方法的一门基础课程。本课程以C/C++程序设计语言为载体，在介绍C/C++程序语言的基础上，注重介绍程序设计方法、规范、算法。课程的主要内容为讲解C/C++语言中的数据类型，运算，语句结构及其程序设计的基本方法，使学生掌握一门高级程序设计语言，熟悉程序设计的基本概念与方法，能够利用C/C++语言解决简单的算法问题，并为后续的专业课程奠定程序设计基础。

","
1. 了解程序设计语言的类型，了解C/C++语言的特点, 掌握C/C++语言的基本语法和程序构成，掌握C/C++程序运行的步骤；能够掌握基本数据类型和运算，熟练使用标准输入输出、熟分支结构和循环结构等，能够熟练使用C/C++语言进行基础的程序设计。（支撑毕业要求5.1）
2. 通过学习C/C++语言，掌握程序设计的基本方法，能够熟练使用数组、字符串、函数、指针等，并能通过这些技巧解决一些经典算法问题，如选择排序、二分检索、汉诺塔等。（支撑毕业要求5.1）
3. 能够熟练的使用C/C++语言的编程工具，掌握编程工具的基本使用技巧如调试、环境变量设置等。能够掌握类的定义和实现，可以合理设计类结构并编程实现，如整数栈等；会使用对象和函数库。利用已学习的C/C++语言编程知识和规范，针对简化的实际应用问题进行分析和建模，合理分析问题，逐步分解问题，训练程序设计能力。（支撑毕业要求5.2）

"
2180279,"
《程序设计原理》是关于计算机程序设计语言、程序设计方法的一门基础课程。本课程以C/C++程序设计语言为载体，在介绍C/C++程序语言的基础上，注重介绍程序设计方法、规范、算法。课程的主要内容为讲解C/C++语言中的数据类型，运算，语句结构及其程序设计的基本方法，使学生掌握一门高级程序设计语言，熟悉程序设计的基本概念与方法，能够利用C/C++语言解决简单的算法问题，并为后续的专业课程奠定程序设计基础。

","
1. 了解程序设计语言的类型，了解C/C++语言的特点, 掌握C/C++语言的基本语法和程序构成，掌握C/C++程序运行的步骤；能够掌握基本数据类型和运算，熟练使用标准输入输出、熟分支结构和循环结构等，能够熟练使用C/C++语言进行基础的程序设计。（支撑毕业要求5.1）
2. 通过学习C/C++语言，掌握程序设计的基本方法，能够熟练使用数组、字符串、函数、指针等，并能通过这些技巧解决一些经典算法问题，如选择排序、二分检索、汉诺塔等。（支撑毕业要求5.1）
3. 能够熟练的使用C/C++语言的编程工具，掌握编程工具的基本使用技巧如调试、环境变量设置等。能够掌握类的定义和实现，可以合理设计类结构并编程实现，如整数栈等；会使用对象和函数库。利用已学习的C/C++语言编程知识和规范，针对简化的实际应用问题进行分析和建模，合理分析问题，逐步分解问题，训练程序设计能力。（支撑毕业要求5.2）

"
2180279,"
《程序设计原理》是关于计算机程序设计语言、程序设计方法的一门基础课程。本课程以C/C++程序设计语言为载体，在介绍C/C++程序语言的基础上，注重介绍程序设计方法、规范、算法。课程的主要内容为讲解C/C++语言中的数据类型，运算，语句结构及其程序设计的基本方法，使学生掌握一门高级程序设计语言，熟悉程序设计的基本概念与方法，能够利用C/C++语言解决简单的算法问题，并为后续的专业课程奠定程序设计基础。

","
1. 了解程序设计语言的类型，了解C/C++语言的特点, 掌握C/C++语言的基本语法和程序构成，掌握C/C++程序运行的步骤；能够掌握基本数据类型和运算，熟练使用标准输入输出、熟分支结构和循环结构等，能够熟练使用C/C++语言进行基础的程序设计。（支撑毕业要求5.1）
2. 通过学习C/C++语言，掌握程序设计的基本方法，能够熟练使用数组、字符串、函数、指针等，并能通过这些技巧解决一些经典算法问题，如选择排序、二分检索、汉诺塔等。（支撑毕业要求5.1）
3. 能够熟练的使用C/C++语言的编程工具，掌握编程工具的基本使用技巧如调试、环境变量设置等。能够掌握类的定义和实现，可以合理设计类结构并编程实现，如整数栈等；会使用对象和函数库。利用已学习的C/C++语言编程知识和规范，针对简化的实际应用问题进行分析和建模，合理分析问题，逐步分解问题，训练程序设计能力。（支撑毕业要求5.2）

"
2180279,"
《程序设计原理》是关于计算机程序设计语言、程序设计方法的一门基础课程。本课程以C/C++程序设计语言为载体，在介绍C/C++程序语言的基础上，注重介绍程序设计方法、规范、算法。课程的主要内容为讲解C/C++语言中的数据类型，运算，语句结构及其程序设计的基本方法，使学生掌握一门高级程序设计语言，熟悉程序设计的基本概念与方法，能够利用C/C++语言解决简单的算法问题，并为后续的专业课程奠定程序设计基础。

","
1. 了解程序设计语言的类型，了解C/C++语言的特点, 掌握C/C++语言的基本语法和程序构成，掌握C/C++程序运行的步骤；能够掌握基本数据类型和运算，熟练使用标准输入输出、熟分支结构和循环结构等，能够熟练使用C/C++语言进行基础的程序设计。（支撑毕业要求5.1）
2. 通过学习C/C++语言，掌握程序设计的基本方法，能够熟练使用数组、字符串、函数、指针等，并能通过这些技巧解决一些经典算法问题，如选择排序、二分检索、汉诺塔等。（支撑毕业要求5.1）
3. 能够熟练的使用C/C++语言的编程工具，掌握编程工具的基本使用技巧如调试、环境变量设置等。能够掌握类的定义和实现，可以合理设计类结构并编程实现，如整数栈等；会使用对象和函数库。利用已学习的C/C++语言编程知识和规范，针对简化的实际应用问题进行分析和建模，合理分析问题，逐步分解问题，训练程序设计能力。（支撑毕业要求5.2）

"
2440002,"
形式语言与自动机是理论计算机科学的重要分支，集中体现了计算机科学的核心思想。形式语言与自动机是计算机科学家解决问题的理论工具，例如，其所涉及的正则表达式、上下文无关文法和计算模型等内容，在计算机软件中有着广泛的应用。同时，形式语言与自动机浓缩了形式化描述和推理的精华，学习本课程有助于形式化思维能力的提高。通过本课程的学习可以感受到计算机科学之美。
","
1. 理解串、语言、文法等基本定义；理解定理证明方法；能够使用常见证明方法对定理进行证明。
2. 掌握正则语言和正则文法；理解有限自动机；理解不确定性；掌握正则表达式；理解正则语言、DFA、NFA和正则表达式之间的等价变换。能够从正则语言的一种等价形式变换为另一种等价形式；能够使用正则语言的泵引理判断一个语言不是正则语言。
3. 理解上下文无关语言和上下文文法；理解下推自动机；理解上下文无关语言和PDA之间的等价变换。能够将上下文无关语言和PDA进行相互等价变换；能够使用上下文无关语言的泵引理判断一个语言不是上下文无关语言。
4. 理解图灵机的基本定义和基本概念；理解图灵机的几种等价变体；理解基于图灵机的算法定义。能够根据给定的图灵机写出某个输入串的识别过程；能够设计图灵机使其识别某个语言。
5.掌握乔姆斯基体系中4类形式文法的概念；了解上下文有关文法和线性有界自动机的等价性；理解4类形式文法与4类自动机的等价体系；了解不可判定性。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√
√
√








课程目标2
√
√
√
√








课程目标3
√
√
√
√








课程目标4
√
√
√
√








课程目标5
√
√
√
√








"
2440002,"
形式语言与自动机是理论计算机科学的重要分支，集中体现了计算机科学的核心思想。形式语言与自动机是计算机科学家解决问题的理论工具，例如，其所涉及的正则表达式、上下文无关文法和计算模型等内容，在计算机软件中有着广泛的应用。同时，形式语言与自动机浓缩了形式化描述和推理的精华，学习本课程有助于形式化思维能力的提高。通过本课程的学习可以感受到计算机科学之美。
","
1. 理解串、语言、文法等基本定义；理解定理证明方法；能够使用常见证明方法对定理进行证明。
2. 掌握正则语言和正则文法；理解有限自动机；理解不确定性；掌握正则表达式；理解正则语言、DFA、NFA和正则表达式之间的等价变换。能够从正则语言的一种等价形式变换为另一种等价形式；能够使用正则语言的泵引理判断一个语言不是正则语言。
3. 理解上下文无关语言和上下文文法；理解下推自动机；理解上下文无关语言和PDA之间的等价变换。能够将上下文无关语言和PDA进行相互等价变换；能够使用上下文无关语言的泵引理判断一个语言不是上下文无关语言。
4. 理解图灵机的基本定义和基本概念；理解图灵机的几种等价变体；理解基于图灵机的算法定义。能够根据给定的图灵机写出某个输入串的识别过程；能够设计图灵机使其识别某个语言。
5.掌握乔姆斯基体系中4类形式文法的概念；了解上下文有关文法和线性有界自动机的等价性；理解4类形式文法与4类自动机的等价体系；了解不可判定性。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√
√
√








课程目标2
√
√
√
√








课程目标3
√
√
√
√








课程目标4
√
√
√
√








课程目标5
√
√
√
√








"
2440002,"
形式语言与自动机是理论计算机科学的重要分支，集中体现了计算机科学的核心思想。形式语言与自动机是计算机科学家解决问题的理论工具，例如，其所涉及的正则表达式、上下文无关文法和计算模型等内容，在计算机软件中有着广泛的应用。同时，形式语言与自动机浓缩了形式化描述和推理的精华，学习本课程有助于形式化思维能力的提高。通过本课程的学习可以感受到计算机科学之美。
","
1. 理解串、语言、文法等基本定义；理解定理证明方法；能够使用常见证明方法对定理进行证明。
2. 掌握正则语言和正则文法；理解有限自动机；理解不确定性；掌握正则表达式；理解正则语言、DFA、NFA和正则表达式之间的等价变换。能够从正则语言的一种等价形式变换为另一种等价形式；能够使用正则语言的泵引理判断一个语言不是正则语言。
3. 理解上下文无关语言和上下文文法；理解下推自动机；理解上下文无关语言和PDA之间的等价变换。能够将上下文无关语言和PDA进行相互等价变换；能够使用上下文无关语言的泵引理判断一个语言不是上下文无关语言。
4. 理解图灵机的基本定义和基本概念；理解图灵机的几种等价变体；理解基于图灵机的算法定义。能够根据给定的图灵机写出某个输入串的识别过程；能够设计图灵机使其识别某个语言。
5.掌握乔姆斯基体系中4类形式文法的概念；了解上下文有关文法和线性有界自动机的等价性；理解4类形式文法与4类自动机的等价体系；了解不可判定性。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√
√
√








课程目标2
√
√
√
√








课程目标3
√
√
√
√








课程目标4
√
√
√
√








课程目标5
√
√
√
√








"
2440002,"
形式语言与自动机是理论计算机科学的重要分支，集中体现了计算机科学的核心思想。形式语言与自动机是计算机科学家解决问题的理论工具，例如，其所涉及的正则表达式、上下文无关文法和计算模型等内容，在计算机软件中有着广泛的应用。同时，形式语言与自动机浓缩了形式化描述和推理的精华，学习本课程有助于形式化思维能力的提高。通过本课程的学习可以感受到计算机科学之美。
","
1. 理解串、语言、文法等基本定义；理解定理证明方法；能够使用常见证明方法对定理进行证明。
2. 掌握正则语言和正则文法；理解有限自动机；理解不确定性；掌握正则表达式；理解正则语言、DFA、NFA和正则表达式之间的等价变换。能够从正则语言的一种等价形式变换为另一种等价形式；能够使用正则语言的泵引理判断一个语言不是正则语言。
3. 理解上下文无关语言和上下文文法；理解下推自动机；理解上下文无关语言和PDA之间的等价变换。能够将上下文无关语言和PDA进行相互等价变换；能够使用上下文无关语言的泵引理判断一个语言不是上下文无关语言。
4. 理解图灵机的基本定义和基本概念；理解图灵机的几种等价变体；理解基于图灵机的算法定义。能够根据给定的图灵机写出某个输入串的识别过程；能够设计图灵机使其识别某个语言。
5.掌握乔姆斯基体系中4类形式文法的概念；了解上下文有关文法和线性有界自动机的等价性；理解4类形式文法与4类自动机的等价体系；了解不可判定性。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√
√
√








课程目标2
√
√
√
√








课程目标3
√
√
√
√








课程目标4
√
√
√
√








课程目标5
√
√
√
√








"
2440003,"
本课程是一门涉及概率统计学、数据库及可视化等多个领域的交叉学科，属于专业选修课。课程主要介绍机器学习的基本概念、主要任务、基本原理、评价体系及典型应用，包括监督学习、非监督学习及强化学习。
通过教学和实践，培养学生综合运用所学知识解决实际问题的能力，掌握理论联系实际，进行严谨归纳和合理演绎的科学发现方法，训练学生逻辑思维能力和想象力，从而使他们能够根据实际需求，运用、改进甚至提出新的机器学习算法，探索应用领域的共性模式发现。
","
1. 理解机器学习的基本概念、核心任务及分类体系，掌握机器学习的基本推理类型及相应的理论基础；熟练掌握监督学习、非监督学习的主要任务、典型算法、评价标准及典型应用；了解强化学习的基本原理及该理论与其它模型相结合提升学习性能的工作机理。（支撑毕业要求1）
2. 能够结合待分析数据的分布特点，选择合适的监督学习算法（包括贝叶斯网络分类器、支持向量机分类器及神经网络分类器）构建判别模型，并通过合适的测试集构建评价模型的性能。能够通过性能评价结果，解释模型的判别能力与实际应用价值，调整模型参数或改进算法以提高性能。（支撑毕业要求2）
3. 能够综合运用聚类技术、维约简技术、潜在变量模型及时间序列模型对数据进行探索性分析，归纳数据的模式特点、维度统计重要性、潜在关联性及时间效应。能够可视化或评价这些发现的统计重要性，从而调整算法参数或改进算法以获取更加有效的发现。
4. 能够运用强化学习的思想，改进典型机器学习算法的性能，包括马尔科夫决策过程，前馈神经网络等。了解强化学习在深度学习中应用的基本原理和典型案例。
5. 能够根据复杂问题实际需求，进行团队合作，设计求解方案，能够清晰表述自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9和11 ）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√
 



 





课程目标3

√

 
 







课程目标4


√
 
 
 





 
课程目标5







 
√
 
√

"
2440003,"
本课程是一门涉及概率统计学、数据库及可视化等多个领域的交叉学科，属于专业选修课。课程主要介绍机器学习的基本概念、主要任务、基本原理、评价体系及典型应用，包括监督学习、非监督学习及强化学习。
通过教学和实践，培养学生综合运用所学知识解决实际问题的能力，掌握理论联系实际，进行严谨归纳和合理演绎的科学发现方法，训练学生逻辑思维能力和想象力，从而使他们能够根据实际需求，运用、改进甚至提出新的机器学习算法，探索应用领域的共性模式发现。
","
1. 理解机器学习的基本概念、核心任务及分类体系，掌握机器学习的基本推理类型及相应的理论基础；熟练掌握监督学习、非监督学习的主要任务、典型算法、评价标准及典型应用；了解强化学习的基本原理及该理论与其它模型相结合提升学习性能的工作机理。（支撑毕业要求1）
2. 能够结合待分析数据的分布特点，选择合适的监督学习算法（包括贝叶斯网络分类器、支持向量机分类器及神经网络分类器）构建判别模型，并通过合适的测试集构建评价模型的性能。能够通过性能评价结果，解释模型的判别能力与实际应用价值，调整模型参数或改进算法以提高性能。（支撑毕业要求2）
3. 能够综合运用聚类技术、维约简技术、潜在变量模型及时间序列模型对数据进行探索性分析，归纳数据的模式特点、维度统计重要性、潜在关联性及时间效应。能够可视化或评价这些发现的统计重要性，从而调整算法参数或改进算法以获取更加有效的发现。
4. 能够运用强化学习的思想，改进典型机器学习算法的性能，包括马尔科夫决策过程，前馈神经网络等。了解强化学习在深度学习中应用的基本原理和典型案例。
5. 能够根据复杂问题实际需求，进行团队合作，设计求解方案，能够清晰表述自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9和11 ）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√
 



 





课程目标3

√

 
 







课程目标4


√
 
 
 





 
课程目标5







 
√
 
√

"
2440003,"
本课程是一门涉及概率统计学、数据库及可视化等多个领域的交叉学科，属于专业选修课。课程主要介绍机器学习的基本概念、主要任务、基本原理、评价体系及典型应用，包括监督学习、非监督学习及强化学习。
通过教学和实践，培养学生综合运用所学知识解决实际问题的能力，掌握理论联系实际，进行严谨归纳和合理演绎的科学发现方法，训练学生逻辑思维能力和想象力，从而使他们能够根据实际需求，运用、改进甚至提出新的机器学习算法，探索应用领域的共性模式发现。
","
1. 理解机器学习的基本概念、核心任务及分类体系，掌握机器学习的基本推理类型及相应的理论基础；熟练掌握监督学习、非监督学习的主要任务、典型算法、评价标准及典型应用；了解强化学习的基本原理及该理论与其它模型相结合提升学习性能的工作机理。（支撑毕业要求1）
2. 能够结合待分析数据的分布特点，选择合适的监督学习算法（包括贝叶斯网络分类器、支持向量机分类器及神经网络分类器）构建判别模型，并通过合适的测试集构建评价模型的性能。能够通过性能评价结果，解释模型的判别能力与实际应用价值，调整模型参数或改进算法以提高性能。（支撑毕业要求2）
3. 能够综合运用聚类技术、维约简技术、潜在变量模型及时间序列模型对数据进行探索性分析，归纳数据的模式特点、维度统计重要性、潜在关联性及时间效应。能够可视化或评价这些发现的统计重要性，从而调整算法参数或改进算法以获取更加有效的发现。
4. 能够运用强化学习的思想，改进典型机器学习算法的性能，包括马尔科夫决策过程，前馈神经网络等。了解强化学习在深度学习中应用的基本原理和典型案例。
5. 能够根据复杂问题实际需求，进行团队合作，设计求解方案，能够清晰表述自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9和11 ）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√
 



 





课程目标3

√

 
 







课程目标4


√
 
 
 





 
课程目标5







 
√
 
√

"
2440004,"
形式化方法是一种基于数学的软件和系统开发方法，研究如何把（具有清晰的数学基础的）严格性（描述形式、技术和过程等）融入软件开发的各个阶段：规范、设计、验证与演化等。该方法日益受到计算机界和工业界的高调重视。形式化方法是计算机专业一门重要的专业基础课，特别是计算机科学专业必修课，也是软件工程专业和信息管理专业一门重要的基础课。
","
通过本课程的学习，使学生了解形式化方法的基本理论和基本原理，掌握软件形式规格，能应用基本形式化方法验证程序正确性。学会用“数学思维”去思考和用“形式化方法”去处理软件和系统开发过程的程序验证问题。
目标如下：
（一）系统全面地理解Z语言，包括Z的类型系统，扩充表示法，模式的描述功能，模式的修饰和包含，模式运算，模式类型，规格说明，序列，包等基本概念。
（二）能熟练使用Z语言书写形式规格说明，并基于规格说明进行简单的形式推理。
（三）掌握常见的模型检测方法，了解Z语言和模型检测之间的关系。


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√








课程目标2
√
√

√








课程目标3

√

√












"
2440006,"
语言是人类最伟大的发明，它不仅仅是大脑与世界交流的工具，它还重塑了大脑。让机器学会理解和使用语言就显得至关重要。自然语言处理是人工智能中重要的基础技术之一，属于其顶层的认知智能，是通向智能的必经之路。自然语言处理的应用无处不在，包括互联网搜索，人机交互及机器翻译等。随着互联网的不断发展，从传统的新闻等正规文本到社会媒体等碎片化文本，不同使用情景下的语言理解面临着越来越多的挑战。本课程主要讲述自然语言处理的基本概念、语料库、统计语言模型、主要的语言分析任务（包括语料库的多级加工分析：词法、语法、语义）、常用的模型与算法及重要的应用等。同时，由于深度学习采用端到端的神经网络模型对自然语言的很多任务产生了较大的性能提升。本课程也将结合深度学习扩展地介绍自然语言处理技术和应用的最新进展，特别是将最新的文本表示学习引入，并在文本生成（诗歌写作）及话系统（聊天机器人）等典型任务上进行实验训练。
","
1. 掌握自然语言处理的基本概念和理论。（支撑毕业要求1.3）
2. 能够应用自然语言处理基本理论与技术对人工智能领域的复杂问题进行分析。（支撑毕业要求4.1）
3. 能够根据自然语言处理的具体实现理论，结合实际问题，提出相关任务系统的设计方案，并能在设计环节中体现创新意识，考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求4.2）
4. 能够针对现实生活中的复杂自然语言处理与智能系统问题，选择合理的设计方案，并能够初步实现。（支撑毕业要求4.3）
5. 能够针对具体的复杂自然语言处理工程问题，能够开发或选用恰当的现代工具进行解决，并分析其局限性。（支撑毕业要求5.2）
6. 对本专业当前国际研究前沿与产业发展状况有基本了解，理解和尊重不同文化背景下的差异性和多样性。能够根据复杂问题实际需求，设计求解方案，并通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑。（支撑毕业要求10.1）
四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
1. 工程知识
1.3 能够在课程实验、集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决复杂计算机/人工智能/网安相关工程问题。
H（0.2）
1
4. 研究
4.1 具有对复杂计算机/人工智能/网安相关工程问题的研究与判断能力，能够基于科学原理和科学方法来调研、分析复杂计算机/人工智能/网安相关工程问题的具体解决方案。能面向工程需求进行科学探索和创新性思考。
H（0.2）
2
4.2 能够根据专业知识为复杂计算机/人工智能/网安相关工程问题设计并构建实验方案，包括数据收集和处理、实验流程的设计、实验参数的分析、实验结果的检验和综合等等。
M（0.2）
3
4.3 能够对实验现象、数据进行归纳、分析及深入研究，并得出有效结论。
M（0.2）
4
5. 使用现代工具
5.2 能够开发或选用恰当的现代工具对复杂计算机/人工智能/网安相关工程问题进行预测和模拟，并分析其局限性。
H (0.4)
5
10. 沟通
10.1 能够通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑。对本专业当前国际研究前沿与产业发展状况有基本了解，理解和尊重不同文化背景下的差异性和多样性。
M (0.4)
6

五、基本要求
结合课程目标，对课程的教学内容、教学过程（环节）、教学模式、知识与能力目标的达成提出要求。
1．学习自然语言处理的基本概念和理论知识，掌握自然语言处理的多级语料加工，包括基础的语言分析（词法、语法及语义），基础的文本表示方法（word2vec）、seq2seq模型及典型的文本生成和对话系统等高级自然语言处理应用模型。理解自然语言处理的理念：基于规则、符号主义与基于经验、连接主义的路线和基本原理。具有简单自然语言处理与智能系统建模、设计与实现的能力；
2．能够基于自然语言处理和深度学习文本表示的基本原理，对人工智能中相关等问题进行研究，包括系统的设计与实现，通过实验和测试得到合理有效的结论；
3．了解自然语言处理领域的最新进展与发展动态，培养初步的跟踪学科发展前沿的意识以及就自然语言处理相关问题撰写研究、分析或实验报告的能力。
六、本课程中的复杂工程问题定义
1.	一个复杂自然语言处理系统的设计与诸多因素相关，如系统需求、问题规模、算法设计、计算性能、设计成本以及实现工具等。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的算法。
2.	对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能 力，如计算机编程语言、数据结构、算法分析与设计及软件工程等；以及需要掌握多学科知识的综合运用能力，如语言学、数学、统计学及深度学习等。
七、课程教学方法
本课程采取课程教学与实验教学相结合的方式。
课程教学采用线上/线下混合教学模式。在教学过程中采用传统课堂教学、学生线上自学和翻转课堂相结合的方法。学生根据教师布置的预习任务，在“智慧树”网站上学习教师提前布置的相关材料，并完成相应的预习作业。教师根据学生的预习反馈情况，组织课堂教学，即翻转课堂。翻转课堂的形式包括研讨式、案例式等。通过多种教学手段加深学生对自然语言处理相关知识的理解，提升学生主动学习的能力，形成自主学习的意识。
实验教学包括平时的基本训练和期末的具有一定难度和系统性的课程设计，减少验证性实验，增加挑战性、创新性实验和综合性实验。学生根据教师发布的自然语言处理相关比赛评测任务及自主设计任务完成实验。在提高学生动手能力的同时，也进一步培养了学生养成独立思考习惯以及解决复杂工程问题的能力。
八、教学内容
分章节说明教学内容，并说明教学重点与难点、主要的教学模式（包括授课、自学、实验、课程设计、大作业等）以及对应的知识、能力要求。 
第1章  绪论
1.1自然语言处理的研究意义
1.2难点与奥秘所在
1.3 经典的技术思路
1.4自然语言处理的发展趋势与应用前景
重点：理解自然语言处理的困难之处
教学模式：由于自然语言处理是一个多学科交叉的课程，因此要通过一些例子的讲解使学生易于理解。
知识点：自然语言处理的内涵及与其他学科的交叉关联。
能力：学会通过查阅资料、调研学习自然语言处理的内涵和前沿发展。
第2章  数学基础
2.1概率论
2.2信息论
重点：理解自然语言处理中用到到重要概率论和信息论知识点。
教学模式：由于知识点的抽象性，因此要通过一些例子讲解使学生易于理解
知识点：相应数学知识点对应的自然语言建模原理。
能力：能进行概率论和信息论方面的公式书写与推导。
第3章 词法与语法
3.1分词 
3.2词性标注
3.3 句法分析 
重点：理解词法与语法的研究内容，掌握词法与语法的研究技术。
教学模式：可通过一些例子讲解和课程作业设计使学生易于理解。
知识点：具有语言学特性词法与语法分析的工作原理。
能力：能进行浅层的词法和句法语言分析。
第4章 序列标注
4.1马尔科夫模型
4.2信息抽取
重点：理解序列标注计算模型和方法。
教学模式：由于该部分知识点的抽象性，因此要通过一些例子讲解和模型设计作业使学生易于理解。
知识点：马尔科夫模型、序列标注模型。
能力：能理解和重构基本的序列标注模型。
第5章 语言模型
5.1基本原理
5.2平滑技术
重点：理解语言模型的基本原理和统计方法。
教学模式：由于该部分知识点具有抽象性，因此要通过一些例子讲解和模型设计作业使学生易于理解。
知识点：语言模型的本质及实际应用。
能力：掌握语言模型的基本原理。
第6章 文本表示学习
6.1 Word2vec神经语言模型
6.2基于循环神经网络的表示
6.3基于卷积神经网络的表示
6.4 seq2seq模型
重点：理解底层神经语言模型的基本原理和计算方法。
教学模式：由于该部分知识点具有很强的抽象性，因此除了课堂讲授，还要设置问题与讨论环节，通过老师和同学们的思辨以深刻理解相关理论内涵。
知识点：文本表示相关的深度神经网络模型及模式识别算法。
能力：理解并掌握基本的文本表示学习模型。
第7章 高级应用
7.1 文本生成 
7.2 对话系统
重点：理解文本生成和对话系统的原理、实验目的和实现方法。
教学模式：通过实验设计，使学生掌握文本生成和对话系统的基本理论、模型和可能的应用。
知识点：文本生成和对话系统。
能力：理解文本生成、对话系统的基本原理，并会搭建原型系统。
九、学时分配
教学内容
授课
实验
自学
课程设计
大作业
其他
　        绪论
　2
　
　
　


　      数学基础
　2
　
　
　


　      词法与语法
　4
　4
　
　


　   序列标注
　4
　4
　
　


     语言模型
  2





    文本表示学习
8


  4


 高级应用
  2


4


总计：
　24
　8
　
　8


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例的简要说明。
平时成绩占40%：包括：研究报告 (10%)，大作业实验 (30%)。
课程设计占60%：学生可自拟题目或根据自然语言处理方向任务评测比赛及教师提出的题目分组进行实验设计，撰写课程设计报告，并公开演讲、答辩，根据实验系统、报告质量和演讲答辩结果最后评定课程设计成绩。

考核与评价方式（成绩比例%）
平时表现
课程实验
课程设计
大作业
课程考试
成绩比例合计
课程目标1
5


15

20
课程目标2
5


15

20
课程目标3


20


20
课程目标4


20


20
课程目标5


10


10
课程目标6


10


10
合计
10

60
30

100
2. 课程目标达成考核与评价方式及成绩评定
平时表现考核与评价标准：


作业(包括上机)
课程目标
基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
掌握自然语言处理的基本概念和理论。（课程目标1）
掌握自然语言处理的基本概念和理论知识，掌握自然语言处理的多级语料加工。（支撑毕业要求1.3）
按时交作业；基本概念正确、论述逻辑清楚；层次分明，语言规范。


按时交作业；基本概念正确、论述基本清楚；语言较规范。
按时交作业；基本概念基本正确、论述基本清楚；语言较规范。
不能按时交作业；有抄袭现象；或者基本概念不清楚、论述不清楚。
100
注：该表格中比例为平时成绩比例。
课程设计考核与评价标准

课程目标
基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
能够应用自然语言处理基本理论与技术对人工智能领域的复杂问题进行分析。（课程目标2）
掌握常用的文本表示学习算法，能够基于科学原理和科学方法来调研、分析复杂自然语言处理相关工程问题的具体解决方案。（支撑毕业要求4.1）
熟练掌握文本表示学习算法，结合具体的实际工程问题，能够充分调研并给出明确且合理的解决方案。
掌握文本表示学习算法，结合具体的实际工程问题，能够调研并给出合理的决方案。
基本掌握文本表示学习算法，结合具体的实际工程问题，能够调研并给出较为合理的决方案。
文本表示学习算法流程不清楚，结合具体的实际工程问题，不能给出较为合理的决方案。
20
根据专业知识设计并构建实验方案，从而调整算法参数或改进算法以获取更有效的发现。（课程目标3）
能够根据实验要求独立完成实验。
（支撑毕业要求4.2）
能够正确实现相关算法；算法条理非常清晰；书写规范。
能够正确实现相关算法；算法条理清晰。
能够实现相关算法；算法条理基本清晰。
算法有明显错误。
20
能够选择合适的自然语言处理算法，通过性能评价结果，解释模型的拟合能力与实际应用价值。（课程目标4）
能够对实验现象、数据进行归纳、分析及深入研究，并得出有效结论。（支撑毕业要求4.3）
实验程序正确运行，并且可以深入分析实验结果，有自己的思考和创新。
独立完成实验，程序可以得出正确结果，并且可以分析实验结果。
独立完成了实验，结果基本正确，对实验结果可以进行简单的分析。
没有独立完成实验或实验有重大错误
20
能够开发或选用恰当的现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并分析其局限性。（课程目标5）
能够开发或选用恰当的现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并分析其局限性。（支撑毕业要求5.1）
能够选用恰当的现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并充分分析其局限性。
能够选用现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并分析其局限性。
能够选用现代工具对复杂自然语言处理相关工程问题进行简单的预测和模拟。
工具选用不合理，不能对复杂自然语言处理相关工程问题进行预测和模拟。
20
根据复杂问题实际需求，设计求解方案，能够通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑。 （课程目标6）
答辩及撰写实验报告
（支撑毕业要求10.1）
答辩思路非常清晰，方案合理；按时提交报告，报告内容十分详实，格式规范，结果正确。
答辩思路教清晰，方案合理；按时提交报告，报告内容详实，格式规范，结果正确。
答辩思路比较清晰，方案基本合理；按时提交报告，格式基本规范，结果基本正确。
答辩思路比较混乱，没有合理的解决方案；没有按时提交报告或报告格式和结果不正确。
20
注：该表格中比例为期末考试成绩比例。











《自然语言处理》课设实验报告


课设队名
课设题目




学    院   智能与计算学部  
专    业                   
年    级                   
姓    名   （所有成员）    
学    号   （所有成员）    
任课教师                   
年    月    日
分工协作情况：
成员
任务分工（抓住要点、概括描述）
贡献度




一、 实验目的
正文宋体，小四，注意段落缩进；
若涉及公式，需要对其编号；
若有图、表，需要定义图题和标题（字号比正文小，宋体，五号），并编号；
避免错别字。
如上，适用于通篇表达。
二级标题依据具体情况自拟。
二、 实验原理
三、 实验过程
"
2440006,"
语言是人类最伟大的发明，它不仅仅是大脑与世界交流的工具，它还重塑了大脑。让机器学会理解和使用语言就显得至关重要。自然语言处理是人工智能中重要的基础技术之一，属于其顶层的认知智能，是通向智能的必经之路。自然语言处理的应用无处不在，包括互联网搜索，人机交互及机器翻译等。随着互联网的不断发展，从传统的新闻等正规文本到社会媒体等碎片化文本，不同使用情景下的语言理解面临着越来越多的挑战。本课程主要讲述自然语言处理的基本概念、语料库、统计语言模型、主要的语言分析任务（包括语料库的多级加工分析：词法、语法、语义）、常用的模型与算法及重要的应用等。同时，由于深度学习采用端到端的神经网络模型对自然语言的很多任务产生了较大的性能提升。本课程也将结合深度学习扩展地介绍自然语言处理技术和应用的最新进展，特别是将最新的文本表示学习引入，并在文本生成（诗歌写作）及话系统（聊天机器人）等典型任务上进行实验训练。
","
1. 掌握自然语言处理的基本概念和理论。（支撑毕业要求1.3）
2. 能够应用自然语言处理基本理论与技术对人工智能领域的复杂问题进行分析。（支撑毕业要求4.1）
3. 能够根据自然语言处理的具体实现理论，结合实际问题，提出相关任务系统的设计方案，并能在设计环节中体现创新意识，考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求4.2）
4. 能够针对现实生活中的复杂自然语言处理与智能系统问题，选择合理的设计方案，并能够初步实现。（支撑毕业要求4.3）
5. 能够针对具体的复杂自然语言处理工程问题，能够开发或选用恰当的现代工具进行解决，并分析其局限性。（支撑毕业要求5.2）
6. 对本专业当前国际研究前沿与产业发展状况有基本了解，理解和尊重不同文化背景下的差异性和多样性。能够根据复杂问题实际需求，设计求解方案，并通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑。（支撑毕业要求10.1）
四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
1. 工程知识
1.3 能够在课程实验、集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决复杂计算机/人工智能/网安相关工程问题。
H（0.2）
1
4. 研究
4.1 具有对复杂计算机/人工智能/网安相关工程问题的研究与判断能力，能够基于科学原理和科学方法来调研、分析复杂计算机/人工智能/网安相关工程问题的具体解决方案。能面向工程需求进行科学探索和创新性思考。
H（0.2）
2
4.2 能够根据专业知识为复杂计算机/人工智能/网安相关工程问题设计并构建实验方案，包括数据收集和处理、实验流程的设计、实验参数的分析、实验结果的检验和综合等等。
M（0.2）
3
4.3 能够对实验现象、数据进行归纳、分析及深入研究，并得出有效结论。
M（0.2）
4
5. 使用现代工具
5.2 能够开发或选用恰当的现代工具对复杂计算机/人工智能/网安相关工程问题进行预测和模拟，并分析其局限性。
H (0.4)
5
10. 沟通
10.1 能够通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑。对本专业当前国际研究前沿与产业发展状况有基本了解，理解和尊重不同文化背景下的差异性和多样性。
M (0.4)
6

五、基本要求
结合课程目标，对课程的教学内容、教学过程（环节）、教学模式、知识与能力目标的达成提出要求。
1．学习自然语言处理的基本概念和理论知识，掌握自然语言处理的多级语料加工，包括基础的语言分析（词法、语法及语义），基础的文本表示方法（word2vec）、seq2seq模型及典型的文本生成和对话系统等高级自然语言处理应用模型。理解自然语言处理的理念：基于规则、符号主义与基于经验、连接主义的路线和基本原理。具有简单自然语言处理与智能系统建模、设计与实现的能力；
2．能够基于自然语言处理和深度学习文本表示的基本原理，对人工智能中相关等问题进行研究，包括系统的设计与实现，通过实验和测试得到合理有效的结论；
3．了解自然语言处理领域的最新进展与发展动态，培养初步的跟踪学科发展前沿的意识以及就自然语言处理相关问题撰写研究、分析或实验报告的能力。
六、本课程中的复杂工程问题定义
1.	一个复杂自然语言处理系统的设计与诸多因素相关，如系统需求、问题规模、算法设计、计算性能、设计成本以及实现工具等。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的算法。
2.	对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能 力，如计算机编程语言、数据结构、算法分析与设计及软件工程等；以及需要掌握多学科知识的综合运用能力，如语言学、数学、统计学及深度学习等。
七、课程教学方法
本课程采取课程教学与实验教学相结合的方式。
课程教学采用线上/线下混合教学模式。在教学过程中采用传统课堂教学、学生线上自学和翻转课堂相结合的方法。学生根据教师布置的预习任务，在“智慧树”网站上学习教师提前布置的相关材料，并完成相应的预习作业。教师根据学生的预习反馈情况，组织课堂教学，即翻转课堂。翻转课堂的形式包括研讨式、案例式等。通过多种教学手段加深学生对自然语言处理相关知识的理解，提升学生主动学习的能力，形成自主学习的意识。
实验教学包括平时的基本训练和期末的具有一定难度和系统性的课程设计，减少验证性实验，增加挑战性、创新性实验和综合性实验。学生根据教师发布的自然语言处理相关比赛评测任务及自主设计任务完成实验。在提高学生动手能力的同时，也进一步培养了学生养成独立思考习惯以及解决复杂工程问题的能力。
八、教学内容
分章节说明教学内容，并说明教学重点与难点、主要的教学模式（包括授课、自学、实验、课程设计、大作业等）以及对应的知识、能力要求。 
第1章  绪论
1.1自然语言处理的研究意义
1.2难点与奥秘所在
1.3 经典的技术思路
1.4自然语言处理的发展趋势与应用前景
重点：理解自然语言处理的困难之处
教学模式：由于自然语言处理是一个多学科交叉的课程，因此要通过一些例子的讲解使学生易于理解。
知识点：自然语言处理的内涵及与其他学科的交叉关联。
能力：学会通过查阅资料、调研学习自然语言处理的内涵和前沿发展。
第2章  数学基础
2.1概率论
2.2信息论
重点：理解自然语言处理中用到到重要概率论和信息论知识点。
教学模式：由于知识点的抽象性，因此要通过一些例子讲解使学生易于理解
知识点：相应数学知识点对应的自然语言建模原理。
能力：能进行概率论和信息论方面的公式书写与推导。
第3章 词法与语法
3.1分词 
3.2词性标注
3.3 句法分析 
重点：理解词法与语法的研究内容，掌握词法与语法的研究技术。
教学模式：可通过一些例子讲解和课程作业设计使学生易于理解。
知识点：具有语言学特性词法与语法分析的工作原理。
能力：能进行浅层的词法和句法语言分析。
第4章 序列标注
4.1马尔科夫模型
4.2信息抽取
重点：理解序列标注计算模型和方法。
教学模式：由于该部分知识点的抽象性，因此要通过一些例子讲解和模型设计作业使学生易于理解。
知识点：马尔科夫模型、序列标注模型。
能力：能理解和重构基本的序列标注模型。
第5章 语言模型
5.1基本原理
5.2平滑技术
重点：理解语言模型的基本原理和统计方法。
教学模式：由于该部分知识点具有抽象性，因此要通过一些例子讲解和模型设计作业使学生易于理解。
知识点：语言模型的本质及实际应用。
能力：掌握语言模型的基本原理。
第6章 文本表示学习
6.1 Word2vec神经语言模型
6.2基于循环神经网络的表示
6.3基于卷积神经网络的表示
6.4 seq2seq模型
重点：理解底层神经语言模型的基本原理和计算方法。
教学模式：由于该部分知识点具有很强的抽象性，因此除了课堂讲授，还要设置问题与讨论环节，通过老师和同学们的思辨以深刻理解相关理论内涵。
知识点：文本表示相关的深度神经网络模型及模式识别算法。
能力：理解并掌握基本的文本表示学习模型。
第7章 高级应用
7.1 文本生成 
7.2 对话系统
重点：理解文本生成和对话系统的原理、实验目的和实现方法。
教学模式：通过实验设计，使学生掌握文本生成和对话系统的基本理论、模型和可能的应用。
知识点：文本生成和对话系统。
能力：理解文本生成、对话系统的基本原理，并会搭建原型系统。
九、学时分配
教学内容
授课
实验
自学
课程设计
大作业
其他
　        绪论
　2
　
　
　


　      数学基础
　2
　
　
　


　      词法与语法
　4
　4
　
　


　   序列标注
　4
　4
　
　


     语言模型
  2





    文本表示学习
8


  4


 高级应用
  2


4


总计：
　24
　8
　
　8


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例的简要说明。
平时成绩占40%：包括：研究报告 (10%)，大作业实验 (30%)。
课程设计占60%：学生可自拟题目或根据自然语言处理方向任务评测比赛及教师提出的题目分组进行实验设计，撰写课程设计报告，并公开演讲、答辩，根据实验系统、报告质量和演讲答辩结果最后评定课程设计成绩。

考核与评价方式（成绩比例%）
平时表现
课程实验
课程设计
大作业
课程考试
成绩比例合计
课程目标1
5


15

20
课程目标2
5


15

20
课程目标3


20


20
课程目标4


20


20
课程目标5


10


10
课程目标6


10


10
合计
10

60
30

100
2. 课程目标达成考核与评价方式及成绩评定
平时表现考核与评价标准：


作业(包括上机)
课程目标
基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
掌握自然语言处理的基本概念和理论。（课程目标1）
掌握自然语言处理的基本概念和理论知识，掌握自然语言处理的多级语料加工。（支撑毕业要求1.3）
按时交作业；基本概念正确、论述逻辑清楚；层次分明，语言规范。


按时交作业；基本概念正确、论述基本清楚；语言较规范。
按时交作业；基本概念基本正确、论述基本清楚；语言较规范。
不能按时交作业；有抄袭现象；或者基本概念不清楚、论述不清楚。
100
注：该表格中比例为平时成绩比例。
课程设计考核与评价标准

课程目标
基本要求
评价标准
成绩比例（%）
优秀
良好
合格
不合格
能够应用自然语言处理基本理论与技术对人工智能领域的复杂问题进行分析。（课程目标2）
掌握常用的文本表示学习算法，能够基于科学原理和科学方法来调研、分析复杂自然语言处理相关工程问题的具体解决方案。（支撑毕业要求4.1）
熟练掌握文本表示学习算法，结合具体的实际工程问题，能够充分调研并给出明确且合理的解决方案。
掌握文本表示学习算法，结合具体的实际工程问题，能够调研并给出合理的决方案。
基本掌握文本表示学习算法，结合具体的实际工程问题，能够调研并给出较为合理的决方案。
文本表示学习算法流程不清楚，结合具体的实际工程问题，不能给出较为合理的决方案。
20
根据专业知识设计并构建实验方案，从而调整算法参数或改进算法以获取更有效的发现。（课程目标3）
能够根据实验要求独立完成实验。
（支撑毕业要求4.2）
能够正确实现相关算法；算法条理非常清晰；书写规范。
能够正确实现相关算法；算法条理清晰。
能够实现相关算法；算法条理基本清晰。
算法有明显错误。
20
能够选择合适的自然语言处理算法，通过性能评价结果，解释模型的拟合能力与实际应用价值。（课程目标4）
能够对实验现象、数据进行归纳、分析及深入研究，并得出有效结论。（支撑毕业要求4.3）
实验程序正确运行，并且可以深入分析实验结果，有自己的思考和创新。
独立完成实验，程序可以得出正确结果，并且可以分析实验结果。
独立完成了实验，结果基本正确，对实验结果可以进行简单的分析。
没有独立完成实验或实验有重大错误
20
能够开发或选用恰当的现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并分析其局限性。（课程目标5）
能够开发或选用恰当的现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并分析其局限性。（支撑毕业要求5.1）
能够选用恰当的现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并充分分析其局限性。
能够选用现代工具对复杂自然语言处理相关工程问题进行预测和模拟，并分析其局限性。
能够选用现代工具对复杂自然语言处理相关工程问题进行简单的预测和模拟。
工具选用不合理，不能对复杂自然语言处理相关工程问题进行预测和模拟。
20
根据复杂问题实际需求，设计求解方案，能够通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑。 （课程目标6）
答辩及撰写实验报告
（支撑毕业要求10.1）
答辩思路非常清晰，方案合理；按时提交报告，报告内容十分详实，格式规范，结果正确。
答辩思路教清晰，方案合理；按时提交报告，报告内容详实，格式规范，结果正确。
答辩思路比较清晰，方案基本合理；按时提交报告，格式基本规范，结果基本正确。
答辩思路比较混乱，没有合理的解决方案；没有按时提交报告或报告格式和结果不正确。
20
注：该表格中比例为期末考试成绩比例。











《自然语言处理》课设实验报告


课设队名
课设题目




学    院   智能与计算学部  
专    业                   
年    级                   
姓    名   （所有成员）    
学    号   （所有成员）    
任课教师                   
年    月    日
分工协作情况：
成员
任务分工（抓住要点、概括描述）
贡献度




一、 实验目的
正文宋体，小四，注意段落缩进；
若涉及公式，需要对其编号；
若有图、表，需要定义图题和标题（字号比正文小，宋体，五号），并编号；
避免错别字。
如上，适用于通篇表达。
二级标题依据具体情况自拟。
二、 实验原理
三、 实验过程
"
2440007 ,"
《安全软件工程》课程是在传统软件开发生命周期各阶段添加了一系列关注安全性的活动和交付结果，与可信计算的理念一致，致力于开发安全性和可靠性更高的软件。设计可扩展的安全软件开发环境的整体架构，融入安全软件需求、安全设计、安全编码、安全测试等思想完成软件全生命周期的一系列安全活动，并实现威胁建模工具和代码安全性检测工具，基于该安全软件开发环境，设计安全软件开发案例。相关内容的制定，可以让学生了解安全软件工程的概念，基于安全思想构建安全软件架构，运用安全相关技术进行安全软件开发，为开发安全软件打下坚实的基础。 
","
通过本课程的学习，学生应达到基本了解安全软件开发过程的目标，包括构建安全软件架构、进行安全需求分析、会运用安全设计方法、掌握安全编码的技术和技巧，能运用所学的方法和技术完成安全软件的设计。能够支撑并达到与计算机相关专业的毕业要求。
1. 了解安全软件工程的基本概念，安全软件开发的基本思想、方法、技术，了解安全开发过程中应遵循的标准和规范等。（支撑毕业要求1）
2. 了解软件安全需求的基本概念，掌握安全需求过程、获取技术；理解安全软件设计的基本思想，熟悉相关技术，学会相关工具的使用。（支撑毕业要求2，4）
3. 熟悉安全编码和安全测试的基本技术和方法，以及基于模型检测和基于用例的安全软件测试方法。（支撑毕业要求4）
4. 熟悉安全检测技术的基本内容，以便更好地完成安全代码的编写工作。（支撑毕业要求4）
5. 学生应能掌握开发高质量软件的方法，以及有效地策划和管理安全软件开发过程，为学生能参加相关学科的竞赛打下坚实基础。（支撑毕业要求5）
专业基础课、专业课给出课程目标与毕业要求的关系矩阵

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√

√








课程目标3



√








课程目标4



√








课程目标5




√







（注意：课程目标不一定与毕业要求一一对应）
"
2440031,"
算法课是非常重要的一门专业基础课，课程内容涵盖了基本的算法分析概念和方法，以及五大类的经典算法设计分析方法。使学生掌握算法分析的原理和方法，数量掌握基本的算法设计方法，具有对算法的时间和空间复杂度进行分析的能力。
","
1. 了解算法的历史和定义
2. 掌握算法空间和时间复杂度分析的基本方法
3. 掌握贪心、分治、动态规划、回溯、分支限界算法设计和解题方法
4. 具有用算法分析和解决实际问题的能力




毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√









课程目标3


√









课程目标4


√









"
2440031,"
算法课是非常重要的一门专业基础课，课程内容涵盖了基本的算法分析概念和方法，以及五大类的经典算法设计分析方法。使学生掌握算法分析的原理和方法，数量掌握基本的算法设计方法，具有对算法的时间和空间复杂度进行分析的能力。
","
1. 了解算法的历史和定义
2. 掌握算法空间和时间复杂度分析的基本方法
3. 掌握贪心、分治、动态规划、回溯、分支限界算法设计和解题方法
4. 具有用算法分析和解决实际问题的能力




毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√









课程目标3


√









课程目标4


√









"
2440031,"
算法课是非常重要的一门专业基础课，课程内容涵盖了基本的算法分析概念和方法，以及五大类的经典算法设计分析方法。使学生掌握算法分析的原理和方法，数量掌握基本的算法设计方法，具有对算法的时间和空间复杂度进行分析的能力。
","
1. 了解算法的历史和定义
2. 掌握算法空间和时间复杂度分析的基本方法
3. 掌握贪心、分治、动态规划、回溯、分支限界算法设计和解题方法
4. 具有用算法分析和解决实际问题的能力




毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√









课程目标3


√









课程目标4


√









"
2440031,"
算法课是非常重要的一门专业基础课，课程内容涵盖了基本的算法分析概念和方法，以及五大类的经典算法设计分析方法。使学生掌握算法分析的原理和方法，数量掌握基本的算法设计方法，具有对算法的时间和空间复杂度进行分析的能力。
","
1. 了解算法的历史和定义
2. 掌握算法空间和时间复杂度分析的基本方法
3. 掌握贪心、分治、动态规划、回溯、分支限界算法设计和解题方法
4. 具有用算法分析和解决实际问题的能力




毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√









课程目标3


√









课程目标4


√









"
2440031,"
算法课是非常重要的一门专业基础课，课程内容涵盖了基本的算法分析概念和方法，以及五大类的经典算法设计分析方法。使学生掌握算法分析的原理和方法，数量掌握基本的算法设计方法，具有对算法的时间和空间复杂度进行分析的能力。
","
1. 了解算法的历史和定义
2. 掌握算法空间和时间复杂度分析的基本方法
3. 掌握贪心、分治、动态规划、回溯、分支限界算法设计和解题方法
4. 具有用算法分析和解决实际问题的能力




毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√









课程目标3


√









课程目标4


√









"
2440044,"
随着计算机网络与通讯技术的发展，Internet在人们的生活、学习和工作中的位置越来越重要，网络信息的安全已经成为各行各业中非常重要的环节。因此，能够掌握一定的网络信息安全知识已成为网络管理中的一种必须技能。
同时随着服务器管理技术的不断发展，现在国内的各行各业的网络大多只是处于组建内部网或接入公网，根本谈不上真正意义的网络管理，要想管理好网络就必须具备一定的网络信息安全知识，所以网络信息安全的管理人员将大量需要，网络信息安全将会成为网络管理的发展趋势。而网络管理人员所必须掌握的是一些必要的实践技能。本课程在引导学生掌握网络安全基础知识的前提下进行必要的实践，从理性认识进阶到感谢认识。
","
本实验课程引导学生熟悉使用端口扫描进行漏洞检测；掌握基于认证的攻击方法；掌握留后门和清脚印的方法。（支持毕业要求1-7）
"
2440045,"
人工智能基础，亦称人工智能（Artificial Intelligence，AI）或智能系统（Intelligent System，IS），是CC2015的14个知识领域之一，也是我国CCC的16门核心课程之一，是计算机科学方向的必修课。
课程采用原本式教学方法，内容基础，讲授清晰。同时培养并要求学生的主动学习能力，并在课外自主补习课程相关内容。
教学内容参照CC2015，反应学科动态，在对核心知识单元进行综合概述的基础上，专业地讲解其中经典的和重要的基本概念、基本技术和基本原理，进而建树人工智能学科知识体系的基本框架，并为人工智能学科及其分支的深入学习和研究探索奠定初步基础。本课程也为人工智能相关课程的学习打下基础。
","
(1)  掌握人工智能基本概念、基本原理，包括经典问题求解、知识表示和逻辑推理的基本方法和成型技术，了解现代人工智能发展趋势。（支撑毕业要求2）
(2)  能够应用人工智能基本理论、方法和技术对工程领域问题进行表示、分析和处理，了解方案的计算代价和复杂性分析。（支撑毕业要求4）
(3)  能够根据人工智能原理、方法与工程领域问题需要，设计实际求解方案，在设计环节体现团队协作和创新意识，遵守学术规范，并考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求6）
(4)  能够应用人工智能基本原理来快速熟悉开源人工智能系统的架构，并根据需求，撰写设计方案，书面且口头清晰表述方案可行性，有效进行人际沟通和交流。（支撑毕业要求9、10）

课程目标与毕业要求的关系矩阵

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√










课程目标2



√








课程目标3





√






课程目标4








√
√



"
2440045,"
人工智能基础，亦称人工智能（Artificial Intelligence，AI）或智能系统（Intelligent System，IS），是CC2015的14个知识领域之一，也是我国CCC的16门核心课程之一，是计算机科学方向的必修课。
课程采用原本式教学方法，内容基础，讲授清晰。同时培养并要求学生的主动学习能力，并在课外自主补习课程相关内容。
教学内容参照CC2015，反应学科动态，在对核心知识单元进行综合概述的基础上，专业地讲解其中经典的和重要的基本概念、基本技术和基本原理，进而建树人工智能学科知识体系的基本框架，并为人工智能学科及其分支的深入学习和研究探索奠定初步基础。本课程也为人工智能相关课程的学习打下基础。
","
(1)  掌握人工智能基本概念、基本原理，包括经典问题求解、知识表示和逻辑推理的基本方法和成型技术，了解现代人工智能发展趋势。（支撑毕业要求2）
(2)  能够应用人工智能基本理论、方法和技术对工程领域问题进行表示、分析和处理，了解方案的计算代价和复杂性分析。（支撑毕业要求4）
(3)  能够根据人工智能原理、方法与工程领域问题需要，设计实际求解方案，在设计环节体现团队协作和创新意识，遵守学术规范，并考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求6）
(4)  能够应用人工智能基本原理来快速熟悉开源人工智能系统的架构，并根据需求，撰写设计方案，书面且口头清晰表述方案可行性，有效进行人际沟通和交流。（支撑毕业要求9、10）

课程目标与毕业要求的关系矩阵

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√










课程目标2



√








课程目标3





√






课程目标4








√
√



"
2440045,"
人工智能基础，亦称人工智能（Artificial Intelligence，AI）或智能系统（Intelligent System，IS），是计算机科学基本的知识领域之一，也是计算机科学课程大纲中的核心课程之一，是计算机科学方向的必修课。
课程采用原本式教学方法，内容简明，讲授清晰。同时培养学生的主动学习能力，并在课外自主补习课程相关内容，建立人工智能学科的知识体系。
教学内容强调基本概念、原理和方法，同时反应学科动态。每章在对核心知识单元进行综合概述的基础上，专业地讲解其中经典的和重要的基本概念、基本原理和基本技术，进而建树人工智能学科知识体系的基本框架，并为人工智能学科及其分支的深入学习和研究奠定坚实基础。
","
(1)  掌握并界定人工智能基本概念、基本原理，包括经典问题求解、知识表示和逻辑推理的基本方法和成型技术，了解现代人工智能发展趋势，在此基础上，能够了解并使用现代智能系统开源工具和成型技术，分析并比较方案的可行性，创新性地给出解决复杂智能系统与工程项目的合理方案。(支持毕业要求2.1)
(2)  能够应用人工智能基本理论、方法和技术对智能系统及工程领域问题进行表示、分析和处理，了解方案的计算代价和复杂性分析，如搜索的时间/空间复杂度、剪枝的完备性和效率、约束满足问题、知识表示的可表示性、原理与方法、合一、反演、逻辑程序设计、承诺程序设计、推理方法与策略等。进一步了解机器学习的界定、分类和基本问题、贝叶斯学习、多智能主体系统、博弈论基础等，并可从理论基础、可行性、复杂性、完备性、显著性等方面设计并分析人工智能求解方案。（支撑毕业要求2.1和3.3）
(3)  能够根据课堂讲授的基本原理与方法，实验并熟悉现有的搜索、表示、推理、学习和联盟等工具或开源包，比较并分析不同工具或开源包的特点。在设计和应用环节体现团队协作和创新意识，遵守学术规范，并考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求3.3）

"
2440046,"
《数据结构》课程是计算机科学与技术专业以及软件工程专业的专业基础课程。通过学习本课程,使学生掌握各种基本数据结构及基于数据结构的基本运算和算法,能应用高级程序设计语言C/C++编写算法,为今后实际工程中软件算法的研究奠定基础。

","
1. 了解基础数据结构和算法分析的基本概念，掌握常用的数据表示法和数据处理方法，掌握不同类型数据结构在实际应用中的主要用途和使用方法。熟悉常用数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉常用数据结构的主要用途，掌握常用算法的原理。能够应用这些结构和算法解决一些已知的实际问题（例如“工程中拓扑排序问题”、“机器调度问题”等）并在解决问题过程中锻炼计算思维能力、系统能力和编程能力。（支撑毕业要求3.2）
2. 理解和记忆线性表、栈和队列等数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉树、图等数据结构的主要用途，掌握查找、排序等算法的原理和应用。并可以在相应问题上完成基础知识的扩展使用。（支撑毕业要求4.1）
3. 在牢固掌握课本知识的前提上，具有分析数据结构空间时间复杂性能力，对于特定的问题，可以熟练地选择适合的数据结构方法进行建模，并可以对自己的建模结果进行时间空间分析，同时可以验证建模结果的可行性以及正确性。对于不可解或者解空间复杂的问题，可以选择出一些近似最优解并对多种解决方案做出比较分析。（支撑毕业要求4.2）
4. 对于复杂的工程问题具有分析求解能力。可以利用已学知识，在符合工程规范的情况下对问题进行建模。使用一定的辅助方法对复杂工程问题进行分治求解。并在保证可行性以及工程规范的前提下设计开发出问题的可行解法。（支撑毕业要求4.2）
5. 在掌握基础原理的基础上，对于计算机领域及相关领域的复杂工程问题，可以设计实验进行验证，可以进行科学的实验研究并可以对实验结果进行分析。（支撑毕业要求6.1）
"
2440046,"
《数据结构》课程是计算机科学与技术专业以及软件工程专业的专业基础课程。通过学习本课程,使学生掌握各种基本数据结构及基于数据结构的基本运算和算法,能应用高级程序设计语言C/C++编写算法,为今后实际工程中软件算法的研究奠定基础。

","
1. 了解基础数据结构和算法分析的基本概念，掌握常用的数据表示法和数据处理方法，掌握不同类型数据结构在实际应用中的主要用途和使用方法。熟悉常用数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉常用数据结构的主要用途，掌握常用算法的原理。能够应用这些结构和算法解决一些已知的实际问题（例如“工程中拓扑排序问题”、“机器调度问题”等）并在解决问题过程中锻炼计算思维能力、系统能力和编程能力。（支撑毕业要求3.2）
2. 理解和记忆线性表、栈和队列等数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉树、图等数据结构的主要用途，掌握查找、排序等算法的原理和应用。并可以在相应问题上完成基础知识的扩展使用。（支撑毕业要求4.1）
3. 在牢固掌握课本知识的前提上，具有分析数据结构空间时间复杂性能力，对于特定的问题，可以熟练地选择适合的数据结构方法进行建模，并可以对自己的建模结果进行时间空间分析，同时可以验证建模结果的可行性以及正确性。对于不可解或者解空间复杂的问题，可以选择出一些近似最优解并对多种解决方案做出比较分析。（支撑毕业要求4.2）
4. 对于复杂的工程问题具有分析求解能力。可以利用已学知识，在符合工程规范的情况下对问题进行建模。使用一定的辅助方法对复杂工程问题进行分治求解。并在保证可行性以及工程规范的前提下设计开发出问题的可行解法。（支撑毕业要求4.2）
5. 在掌握基础原理的基础上，对于计算机领域及相关领域的复杂工程问题，可以设计实验进行验证，可以进行科学的实验研究并可以对实验结果进行分析。（支撑毕业要求6.1）
"
2440046,"
《数据结构》课程是计算机科学与技术专业以及软件工程专业的专业基础课程。通过学习本课程,使学生掌握各种基本数据结构及基于数据结构的基本运算和算法,能应用高级程序设计语言C/C++编写算法,为今后实际工程中软件算法的研究奠定基础。

","
1. 了解基础数据结构和算法分析的基本概念，掌握常用的数据表示法和数据处理方法，掌握不同类型数据结构在实际应用中的主要用途和使用方法。熟悉常用数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉常用数据结构的主要用途，掌握常用算法的原理。能够应用这些结构和算法解决一些已知的实际问题（例如“工程中拓扑排序问题”、“机器调度问题”等）并在解决问题过程中锻炼计算思维能力、系统能力和编程能力。（支撑毕业要求3.2）
2. 理解和记忆线性表、栈和队列等数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉树、图等数据结构的主要用途，掌握查找、排序等算法的原理和应用。并可以在相应问题上完成基础知识的扩展使用。（支撑毕业要求4.1）
3. 在牢固掌握课本知识的前提上，具有分析数据结构空间时间复杂性能力，对于特定的问题，可以熟练地选择适合的数据结构方法进行建模，并可以对自己的建模结果进行时间空间分析，同时可以验证建模结果的可行性以及正确性。对于不可解或者解空间复杂的问题，可以选择出一些近似最优解并对多种解决方案做出比较分析。（支撑毕业要求4.2）
4. 对于复杂的工程问题具有分析求解能力。可以利用已学知识，在符合工程规范的情况下对问题进行建模。使用一定的辅助方法对复杂工程问题进行分治求解。并在保证可行性以及工程规范的前提下设计开发出问题的可行解法。（支撑毕业要求4.2）
5. 在掌握基础原理的基础上，对于计算机领域及相关领域的复杂工程问题，可以设计实验进行验证，可以进行科学的实验研究并可以对实验结果进行分析。（支撑毕业要求6.1）
"
2440046,"
《数据结构》课程是计算机科学与技术专业以及软件工程专业的专业基础课程。通过学习本课程,使学生掌握各种基本数据结构及基于数据结构的基本运算和算法,能应用高级程序设计语言C/C++编写算法,为今后实际工程中软件算法的研究奠定基础。

","
1. 了解基础数据结构和算法分析的基本概念，掌握常用的数据表示法和数据处理方法，掌握不同类型数据结构在实际应用中的主要用途和使用方法。熟悉常用数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉常用数据结构的主要用途，掌握常用算法的原理。能够应用这些结构和算法解决一些已知的实际问题（例如“工程中拓扑排序问题”、“机器调度问题”等）并在解决问题过程中锻炼计算思维能力、系统能力和编程能力。（支撑毕业要求3.2）
2. 理解和记忆线性表、栈和队列等数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉树、图等数据结构的主要用途，掌握查找、排序等算法的原理和应用。并可以在相应问题上完成基础知识的扩展使用。（支撑毕业要求4.1）
3. 在牢固掌握课本知识的前提上，具有分析数据结构空间时间复杂性能力，对于特定的问题，可以熟练地选择适合的数据结构方法进行建模，并可以对自己的建模结果进行时间空间分析，同时可以验证建模结果的可行性以及正确性。对于不可解或者解空间复杂的问题，可以选择出一些近似最优解并对多种解决方案做出比较分析。（支撑毕业要求4.2）
4. 对于复杂的工程问题具有分析求解能力。可以利用已学知识，在符合工程规范的情况下对问题进行建模。使用一定的辅助方法对复杂工程问题进行分治求解。并在保证可行性以及工程规范的前提下设计开发出问题的可行解法。（支撑毕业要求4.2）
5. 在掌握基础原理的基础上，对于计算机领域及相关领域的复杂工程问题，可以设计实验进行验证，可以进行科学的实验研究并可以对实验结果进行分析。（支撑毕业要求6.1）
"
2440046,"
《数据结构》课程是计算机科学与技术专业以及软件工程专业的专业基础课程。通过学习本课程,使学生掌握各种基本数据结构及基于数据结构的基本运算和算法,能应用高级程序设计语言C/C++编写算法,为今后实际工程中软件算法的研究奠定基础。

","
1. 了解基础数据结构和算法分析的基本概念，掌握常用的数据表示法和数据处理方法，掌握不同类型数据结构在实际应用中的主要用途和使用方法。熟悉常用数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉常用数据结构的主要用途，掌握常用算法的原理。能够应用这些结构和算法解决一些已知的实际问题（例如“工程中拓扑排序问题”、“机器调度问题”等）并在解决问题过程中锻炼计算思维能力、系统能力和编程能力。（支撑毕业要求3.2）
2. 理解和记忆线性表、栈和队列等数据结构的主要特点，能够使用常见的编程语言实现这些数据结构。熟悉树、图等数据结构的主要用途，掌握查找、排序等算法的原理和应用。并可以在相应问题上完成基础知识的扩展使用。（支撑毕业要求4.1）
3. 在牢固掌握课本知识的前提上，具有分析数据结构空间时间复杂性能力，对于特定的问题，可以熟练地选择适合的数据结构方法进行建模，并可以对自己的建模结果进行时间空间分析，同时可以验证建模结果的可行性以及正确性。对于不可解或者解空间复杂的问题，可以选择出一些近似最优解并对多种解决方案做出比较分析。（支撑毕业要求4.2）
4. 对于复杂的工程问题具有分析求解能力。可以利用已学知识，在符合工程规范的情况下对问题进行建模。使用一定的辅助方法对复杂工程问题进行分治求解。并在保证可行性以及工程规范的前提下设计开发出问题的可行解法。（支撑毕业要求4.2）
5. 在掌握基础原理的基础上，对于计算机领域及相关领域的复杂工程问题，可以设计实验进行验证，可以进行科学的实验研究并可以对实验结果进行分析。（支撑毕业要求6.1）
"
2440047,,
2440048,"
信息安全数学基础是网络安全专业的核心必修课。
信息安全与国家的军事、外交、政治、金融乃至每个人的日常生活息息相关，已成为信息科学与技术领域的重要组成部分。信息安全涉及计算机、通信、电子、数学、物理、法律、管理等多方向的交叉学科，所涉及的数学内容较为宽泛。实践表明，数学基础支撑着信息安全学科的理论创新与技术进步。本课程系统地介绍信息安全学科所涉及的主要数学理论知识。
本课程是其他信息安全课程的先导数学基础理论课程，为计划从事信息安全工程实践或理论研究的学生理解和掌握信息安全理论和技术提供数学理论方面的支持。
","
1. 掌握初等数论的基础知识，能够应用辗转相除法、孙子定理、勒让德符号、雅可比符号等数论工具分析解决信息安全理论与技术问题。（支撑毕业要求1.1）
2. 掌握代数系统的基础知识，了解群、环、域等代数系统的基本结构，利用有限代数系统解决和分析信息安全理论的基本问题。（支撑毕业要求1.2）
3. 掌握组合数学方法，利用组合数学方法，如递推关系、区组设计等解决信息安全理论的理论与技术问题。（支撑毕业要求1.1）
4. 了解通信系统的数学模型，掌握信息论意义下的度量、离散信源。利用信息论解决密码学中的应用问题。（支撑毕业要求4.1）
5. 初步理解确定图灵机、非确定图灵机、随机存取机器模型等计算复杂理论中的基础问题。掌握一些典型的NP问题，如大整数分解问题、离散对数问题、背包问题，及其在公钥密码学中的应用。（支撑毕业要求2.1）
"
2440049,"
程序设计综合实践是一门专业基础实践课程，承接程序设计原理，涉及到数据结构、算法设计与分析的基础知识，属于专业必修课。计算机程序设计能力是计算机相关专业学生应该具备的最基本的能力，是其他专业能力培养的基础。计算机程序设计教学的最终目的是培养学生逻辑思维、抽象思维能力，培养学生创新意识,让学生掌握软件设计及软件开发的过程，培养学生的实际动手能力和探究能力。该实践课程以提高学生程序设计能力为宗旨，以问题求解为主要方式和途径，进行学生编程实践能力的训练，增强学生程序设计的核心素养。
程序设计综合从程序设计原理入手，以解决实际问题为主要形式，结合实践进行编码风格的规范化培养、程序调试的一般方法学习、问题求解的一般方法学习，通过该课程，使学生认识到程序设计能力的重要性，掌握使用程序设计方法进行问题求解和编码、调试的一般步骤，进一步掌握基础算法和基础数据结构在问题求解中的应用。

","
1. 了解程序编译的基本流程，了解GCC编译器，能够使用Visual Studio、Codeblocks、Dev C++等IDE工具进行程序设计和调试，能够使用在线评测平台进行代码提交，了解在线评测平台的基本原理和返回结果的含义，能够针对不同的问题进行分析，能够定位具体问题位置。（支撑毕业要求7.1）
2. 能够认识到程序设计风格的重要性，能够以良好的程序设计风格进行编码。了解单行注释、多行注释、调试注释、变量命名等程序设计风格的一般规定，掌握编写具有良好可读性代码的一般方法。能够根据程序设计思路画出规范的程序流程图；掌握文档撰写的一般方法，能够根据自己的设计编写规范的设计文档。（支撑毕业要求12.1）
3. 掌握使用程序设计方法解决现实问题的一般方法，能够熟练运用程序设计的顺序、分支、循环结构解决简单问题；掌握模拟、枚举、贪心、二分、搜索、排序、动态规划等基础算法的基本原理和应用，能够使用基础算法进行问题求解和编码。掌握基础数据结构的实现和适用范围，能够使用基础数据结构进行问题求解。(支撑毕业要求3.3和6.2)
4. 掌握面向对象程序设计的一般方法，理解面向过程与面向对象两种设计模式的异同，能够进行对象抽象，能够进行类的设计和编码，能够使用面向对象方法进行简单业务系统的设计与实现。(支撑毕业要求3.3和6.2)

"
2440049,"
程序设计综合实践是一门专业基础实践课程，承接程序设计原理，涉及到数据结构、算法设计与分析的基础知识，属于专业必修课。计算机程序设计能力是计算机相关专业学生应该具备的最基本的能力，是其他专业能力培养的基础。计算机程序设计教学的最终目的是培养学生逻辑思维、抽象思维能力，培养学生创新意识,让学生掌握软件设计及软件开发的过程，培养学生的实际动手能力和探究能力。该实践课程以提高学生程序设计能力为宗旨，以问题求解为主要方式和途径，进行学生编程实践能力的训练，增强学生程序设计的核心素养。
程序设计综合从程序设计原理入手，以解决实际问题为主要形式，结合实践进行编码风格的规范化培养、程序调试的一般方法学习、问题求解的一般方法学习，通过该课程，使学生认识到程序设计能力的重要性，掌握使用程序设计方法进行问题求解和编码、调试的一般步骤，进一步掌握基础算法和基础数据结构在问题求解中的应用。

","
1. 了解程序编译的基本流程，了解GCC编译器，能够使用Visual Studio、Codeblocks、Dev C++等IDE工具进行程序设计和调试，能够使用在线评测平台进行代码提交，了解在线评测平台的基本原理和返回结果的含义，能够针对不同的问题进行分析，能够定位具体问题位置。（支撑毕业要求7.1）
2. 能够认识到程序设计风格的重要性，能够以良好的程序设计风格进行编码。了解单行注释、多行注释、调试注释、变量命名等程序设计风格的一般规定，掌握编写具有良好可读性代码的一般方法。能够根据程序设计思路画出规范的程序流程图；掌握文档撰写的一般方法，能够根据自己的设计编写规范的设计文档。（支撑毕业要求12.1）
3. 掌握使用程序设计方法解决现实问题的一般方法，能够熟练运用程序设计的顺序、分支、循环结构解决简单问题；掌握模拟、枚举、贪心、二分、搜索、排序、动态规划等基础算法的基本原理和应用，能够使用基础算法进行问题求解和编码。掌握基础数据结构的实现和适用范围，能够使用基础数据结构进行问题求解。(支撑毕业要求3.3和6.2)
4. 掌握面向对象程序设计的一般方法，理解面向过程与面向对象两种设计模式的异同，能够进行对象抽象，能够进行类的设计和编码，能够使用面向对象方法进行简单业务系统的设计与实现。(支撑毕业要求3.3和6.2)

"
2440049,"
程序设计综合实践是一门专业基础实践课程，承接程序设计原理，涉及到数据结构、算法设计与分析的基础知识，属于专业必修课。计算机程序设计能力是计算机相关专业学生应该具备的最基本的能力，是其他专业能力培养的基础。计算机程序设计教学的最终目的是培养学生逻辑思维、抽象思维能力，培养学生创新意识,让学生掌握软件设计及软件开发的过程，培养学生的实际动手能力和探究能力。该实践课程以提高学生程序设计能力为宗旨，以问题求解为主要方式和途径，进行学生编程实践能力的训练，增强学生程序设计的核心素养。
程序设计综合从程序设计原理入手，以解决实际问题为主要形式，结合实践进行编码风格的规范化培养、程序调试的一般方法学习、问题求解的一般方法学习，通过该课程，使学生认识到程序设计能力的重要性，掌握使用程序设计方法进行问题求解和编码、调试的一般步骤，进一步掌握基础算法和基础数据结构在问题求解中的应用。

","
1. 了解程序编译的基本流程，了解GCC编译器，能够使用Visual Studio、Codeblocks、Dev C++等IDE工具进行程序设计和调试，能够使用在线评测平台进行代码提交，了解在线评测平台的基本原理和返回结果的含义，能够针对不同的问题进行分析，能够定位具体问题位置。（支撑毕业要求7.1）
2. 能够认识到程序设计风格的重要性，能够以良好的程序设计风格进行编码。了解单行注释、多行注释、调试注释、变量命名等程序设计风格的一般规定，掌握编写具有良好可读性代码的一般方法。能够根据程序设计思路画出规范的程序流程图；掌握文档撰写的一般方法，能够根据自己的设计编写规范的设计文档。（支撑毕业要求12.1）
3. 掌握使用程序设计方法解决现实问题的一般方法，能够熟练运用程序设计的顺序、分支、循环结构解决简单问题；掌握模拟、枚举、贪心、二分、搜索、排序、动态规划等基础算法的基本原理和应用，能够使用基础算法进行问题求解和编码。掌握基础数据结构的实现和适用范围，能够使用基础数据结构进行问题求解。(支撑毕业要求3.3和6.2)
4. 掌握面向对象程序设计的一般方法，理解面向过程与面向对象两种设计模式的异同，能够进行对象抽象，能够进行类的设计和编码，能够使用面向对象方法进行简单业务系统的设计与实现。(支撑毕业要求3.3和6.2)

"
2440049,"
程序设计综合实践是一门专业基础实践课程，承接程序设计原理，涉及到数据结构、算法设计与分析的基础知识，属于专业必修课。计算机程序设计能力是计算机相关专业学生应该具备的最基本的能力，是其他专业能力培养的基础。计算机程序设计教学的最终目的是培养学生逻辑思维、抽象思维能力，培养学生创新意识,让学生掌握软件设计及软件开发的过程，培养学生的实际动手能力和探究能力。该实践课程以提高学生程序设计能力为宗旨，以问题求解为主要方式和途径，进行学生编程实践能力的训练，增强学生程序设计的核心素养。
程序设计综合从程序设计原理入手，以解决实际问题为主要形式，结合实践进行编码风格的规范化培养、程序调试的一般方法学习、问题求解的一般方法学习，通过该课程，使学生认识到程序设计能力的重要性，掌握使用程序设计方法进行问题求解和编码、调试的一般步骤，进一步掌握基础算法和基础数据结构在问题求解中的应用。

","
1. 了解程序编译的基本流程，了解GCC编译器，能够使用Visual Studio、Codeblocks、Dev C++等IDE工具进行程序设计和调试，能够使用在线评测平台进行代码提交，了解在线评测平台的基本原理和返回结果的含义，能够针对不同的问题进行分析，能够定位具体问题位置。（支撑毕业要求7.1）
2. 能够认识到程序设计风格的重要性，能够以良好的程序设计风格进行编码。了解单行注释、多行注释、调试注释、变量命名等程序设计风格的一般规定，掌握编写具有良好可读性代码的一般方法。能够根据程序设计思路画出规范的程序流程图；掌握文档撰写的一般方法，能够根据自己的设计编写规范的设计文档。（支撑毕业要求12.1）
3. 掌握使用程序设计方法解决现实问题的一般方法，能够熟练运用程序设计的顺序、分支、循环结构解决简单问题；掌握模拟、枚举、贪心、二分、搜索、排序、动态规划等基础算法的基本原理和应用，能够使用基础算法进行问题求解和编码。掌握基础数据结构的实现和适用范围，能够使用基础数据结构进行问题求解。(支撑毕业要求3.3和6.2)
4. 掌握面向对象程序设计的一般方法，理解面向过程与面向对象两种设计模式的异同，能够进行对象抽象，能够进行类的设计和编码，能够使用面向对象方法进行简单业务系统的设计与实现。(支撑毕业要求3.3和6.2)

"
2440049,"
程序设计综合实践是一门专业基础实践课程，承接程序设计原理，涉及到数据结构、算法设计与分析的基础知识，属于专业必修课。计算机程序设计能力是计算机相关专业学生应该具备的最基本的能力，是其他专业能力培养的基础。计算机程序设计教学的最终目的是培养学生逻辑思维、抽象思维能力，培养学生创新意识,让学生掌握软件设计及软件开发的过程，培养学生的实际动手能力和探究能力。该实践课程以提高学生程序设计能力为宗旨，以问题求解为主要方式和途径，进行学生编程实践能力的训练，增强学生程序设计的核心素养。
程序设计综合从程序设计原理入手，以解决实际问题为主要形式，结合实践进行编码风格的规范化培养、程序调试的一般方法学习、问题求解的一般方法学习，通过该课程，使学生认识到程序设计能力的重要性，掌握使用程序设计方法进行问题求解和编码、调试的一般步骤，进一步掌握基础算法和基础数据结构在问题求解中的应用。

","
1. 了解程序编译的基本流程，了解GCC编译器，能够使用Visual Studio、Codeblocks、Dev C++等IDE工具进行程序设计和调试，能够使用在线评测平台进行代码提交，了解在线评测平台的基本原理和返回结果的含义，能够针对不同的问题进行分析，能够定位具体问题位置。（支撑毕业要求7.1）
2. 能够认识到程序设计风格的重要性，能够以良好的程序设计风格进行编码。了解单行注释、多行注释、调试注释、变量命名等程序设计风格的一般规定，掌握编写具有良好可读性代码的一般方法。能够根据程序设计思路画出规范的程序流程图；掌握文档撰写的一般方法，能够根据自己的设计编写规范的设计文档。（支撑毕业要求12.1）
3. 掌握使用程序设计方法解决现实问题的一般方法，能够熟练运用程序设计的顺序、分支、循环结构解决简单问题；掌握模拟、枚举、贪心、二分、搜索、排序、动态规划等基础算法的基本原理和应用，能够使用基础算法进行问题求解和编码。掌握基础数据结构的实现和适用范围，能够使用基础数据结构进行问题求解。(支撑毕业要求3.3和6.2)
4. 掌握面向对象程序设计的一般方法，理解面向过程与面向对象两种设计模式的异同，能够进行对象抽象，能够进行类的设计和编码，能够使用面向对象方法进行简单业务系统的设计与实现。(支撑毕业要求3.3和6.2)

"
2440050,"
《计算机系统基础》是软件工程专业计算机体系结构类课程中的核心的课程。这门课程主要面向学生讲解计算机系统的内部构造，各部件之间的协同工作原理，同时以程序员的视角深入介绍了程序在计算机中存储、表达、编译、链接、运行的基本原理和计算机工作机制。
通过以上内容的学习，使学生掌握并深刻理解计算机的组织与工作的原理，加快形成和巩固学生的“系统观”，为计算机体系结构类的方向研究和工程提供理论储备。
","
1. 准确理解计算机组成的基本原理，掌握处理器、存储器以及外部设备间的协同工作的机制。能够理解并分析程序的表示、程序的编译、链接以及在计算机中工作过程。（支撑毕业要求3.2）
2. 掌握计算机系统中各种数据类型的存储和表示方法，掌握计算机程序在机器指令水平上的表达方法和工作模式。能够独立分析C语言程序在执行时，处理器和存储器的工作状态。（支撑毕业要求4.2）
3. 能够运用所学知识有效解决程序设计中一些不易排查的逻辑错误，加深学生对于程序设计中细节易错部分的认知，培养在程序编译时、链接时和运行时的错误解决能力。（支撑毕业要求4.3）
4. 能够利用本课程中所学习的理论，对程序的性能给出定量的评价。能够提出程序性能的改进方案，培养学生编写高性能和高可靠性程序的能力。（支撑毕业要求6.2）

"
2440050,"
《计算机系统基础》是软件工程专业计算机体系结构类课程中的核心的课程。这门课程主要面向学生讲解计算机系统的内部构造，各部件之间的协同工作原理，同时以程序员的视角深入介绍了程序在计算机中存储、表达、编译、链接、运行的基本原理和计算机工作机制。
通过以上内容的学习，使学生掌握并深刻理解计算机的组织与工作的原理，加快形成和巩固学生的“系统观”，为计算机体系结构类的方向研究和工程提供理论储备。
","
1. 准确理解计算机组成的基本原理，掌握处理器、存储器以及外部设备间的协同工作的机制。能够理解并分析程序的表示、程序的编译、链接以及在计算机中工作过程。（支撑毕业要求3.2）
2. 掌握计算机系统中各种数据类型的存储和表示方法，掌握计算机程序在机器指令水平上的表达方法和工作模式。能够独立分析C语言程序在执行时，处理器和存储器的工作状态。（支撑毕业要求4.2）
3. 能够运用所学知识有效解决程序设计中一些不易排查的逻辑错误，加深学生对于程序设计中细节易错部分的认知，培养在程序编译时、链接时和运行时的错误解决能力。（支撑毕业要求4.3）
4. 能够利用本课程中所学习的理论，对程序的性能给出定量的评价。能够提出程序性能的改进方案，培养学生编写高性能和高可靠性程序的能力。（支撑毕业要求6.2）

"
2440050,"
《计算机系统基础》是软件工程专业计算机体系结构类课程中的核心的课程。这门课程主要面向学生讲解计算机系统的内部构造，各部件之间的协同工作原理，同时以程序员的视角深入介绍了程序在计算机中存储、表达、编译、链接、运行的基本原理和计算机工作机制。
通过以上内容的学习，使学生掌握并深刻理解计算机的组织与工作的原理，加快形成和巩固学生的“系统观”，为计算机体系结构类的方向研究和工程提供理论储备。
","
1. 准确理解计算机组成的基本原理，掌握处理器、存储器以及外部设备间的协同工作的机制。能够理解并分析程序的表示、程序的编译、链接以及在计算机中工作过程。（支撑毕业要求3.2）
2. 掌握计算机系统中各种数据类型的存储和表示方法，掌握计算机程序在机器指令水平上的表达方法和工作模式。能够独立分析C语言程序在执行时，处理器和存储器的工作状态。（支撑毕业要求4.2）
3. 能够运用所学知识有效解决程序设计中一些不易排查的逻辑错误，加深学生对于程序设计中细节易错部分的认知，培养在程序编译时、链接时和运行时的错误解决能力。（支撑毕业要求4.3）
4. 能够利用本课程中所学习的理论，对程序的性能给出定量的评价。能够提出程序性能的改进方案，培养学生编写高性能和高可靠性程序的能力。（支撑毕业要求6.2）

"
2440050,"
《计算机系统基础》是软件工程专业计算机体系结构类课程中的核心的课程。这门课程主要面向学生讲解计算机系统的内部构造，各部件之间的协同工作原理，同时以程序员的视角深入介绍了程序在计算机中存储、表达、编译、链接、运行的基本原理和计算机工作机制。
通过以上内容的学习，使学生掌握并深刻理解计算机的组织与工作的原理，加快形成和巩固学生的“系统观”，为计算机体系结构类的方向研究和工程提供理论储备。
","
1. 准确理解计算机组成的基本原理，掌握处理器、存储器以及外部设备间的协同工作的机制。能够理解并分析程序的表示、程序的编译、链接以及在计算机中工作过程。（支撑毕业要求3.2）
2. 掌握计算机系统中各种数据类型的存储和表示方法，掌握计算机程序在机器指令水平上的表达方法和工作模式。能够独立分析C语言程序在执行时，处理器和存储器的工作状态。（支撑毕业要求4.2）
3. 能够运用所学知识有效解决程序设计中一些不易排查的逻辑错误，加深学生对于程序设计中细节易错部分的认知，培养在程序编译时、链接时和运行时的错误解决能力。（支撑毕业要求4.3）
4. 能够利用本课程中所学习的理论，对程序的性能给出定量的评价。能够提出程序性能的改进方案，培养学生编写高性能和高可靠性程序的能力。（支撑毕业要求6.2）

"
2440050,"
《计算机系统基础》是软件工程专业计算机体系结构类课程中的核心的课程。这门课程主要面向学生讲解计算机系统的内部构造，各部件之间的协同工作原理，同时以程序员的视角深入介绍了程序在计算机中存储、表达、编译、链接、运行的基本原理和计算机工作机制。
通过以上内容的学习，使学生掌握并深刻理解计算机的组织与工作的原理，加快形成和巩固学生的“系统观”，为计算机体系结构类的方向研究和工程提供理论储备。
","
1. 准确理解计算机组成的基本原理，掌握处理器、存储器以及外部设备间的协同工作的机制。能够理解并分析程序的表示、程序的编译、链接以及在计算机中工作过程。（支撑毕业要求3.2）
2. 掌握计算机系统中各种数据类型的存储和表示方法，掌握计算机程序在机器指令水平上的表达方法和工作模式。能够独立分析C语言程序在执行时，处理器和存储器的工作状态。（支撑毕业要求4.2）
3. 能够运用所学知识有效解决程序设计中一些不易排查的逻辑错误，加深学生对于程序设计中细节易错部分的认知，培养在程序编译时、链接时和运行时的错误解决能力。（支撑毕业要求4.3）
4. 能够利用本课程中所学习的理论，对程序的性能给出定量的评价。能够提出程序性能的改进方案，培养学生编写高性能和高可靠性程序的能力。（支撑毕业要求6.2）

"
2440051,"
知识工程（Knowledge Science and Engineering）是一门新兴的科学与工程技术学科。它产生于社会科学与自然科学的相互交叉和科学技术与工程技术的相互渗透。近年来，知识科学与工程随着大数据和人工智能迅猛发展，知识获取方式多样化、自动化、简易化，以及对知识应用的需求前所未有地增大，促进了知识工程的发展。知识工程前沿课题讲授知识科学原理、知识工程的方法以及工具。通过知识表示，知识推理，知识存储，知识管理，知识工程，知识图谱等7个主要方面讲授，让学生了解并掌握知识科学与工程基本概念，最新方法以及最新工具。
","
1. 了解知识工程的基本概念与发展现状，掌握知识表示与建模、知识表示学习、知识融合、知识存储与查询、知识推理、通用和领域知识图谱等相关理论知识与研究前沿动态，建立知识工程技术框架。（支撑毕业要求5.1）
2. 熟练掌握应用知识工程方法对实际问题进行实验和分析，理解相关算法原理，掌握相关工具的使用方法，可以面向复杂计算机工程问题，熟练利用相关技术实现解决具体问题的知识工程系统。（支撑毕业要求5.1）
3. 掌握知识工程方法中的具体实现方法，结合实际问题，提出合理的解决方案，并能在设计环节中体现创新意识，考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求3.1）
4. 能够针对知识工程方法现实生活中的问题，选择合理的应用工具，进行方案设计。（支撑毕业要求3.1）

"
2440051,"
知识工程（Knowledge Science and Engineering）是一门新兴的科学与工程技术学科。它产生于社会科学与自然科学的相互交叉和科学技术与工程技术的相互渗透。近年来，知识科学与工程随着大数据和人工智能迅猛发展，知识获取方式多样化、自动化、简易化，以及对知识应用的需求前所未有地增大，促进了知识工程的发展。知识工程前沿课题讲授知识科学原理、知识工程的方法以及工具。通过知识表示，知识推理，知识存储，知识管理，知识工程，知识图谱等7个主要方面讲授，让学生了解并掌握知识科学与工程基本概念，最新方法以及最新工具。
","
1. 了解知识工程的基本概念与发展现状，掌握知识表示与建模、知识表示学习、知识融合、知识存储与查询、知识推理、通用和领域知识图谱等相关理论知识与研究前沿动态，建立知识工程技术框架。（支撑毕业要求5.1）
2. 熟练掌握应用知识工程方法对实际问题进行实验和分析，理解相关算法原理，掌握相关工具的使用方法，可以面向复杂计算机工程问题，熟练利用相关技术实现解决具体问题的知识工程系统。（支撑毕业要求5.1）
3. 掌握知识工程方法中的具体实现方法，结合实际问题，提出合理的解决方案，并能在设计环节中体现创新意识，考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求3.1）
4. 能够针对知识工程方法现实生活中的问题，选择合理的应用工具，进行方案设计。（支撑毕业要求3.1）

"
2440052,"
随着计算机网络与通讯技术的发展，Internet在人们的生活、学习和工作中的位置越来越重要，网络信息的安全已经成为各行各业中非常重要的环节。因此，能够掌握一定的网络信息安全知识已成为网络管理中的一种必须技能。
同时随着服务器管理技术的不断发展，现在国内的各行各业的网络大多只是处于组建内部网或接入公网，根本谈不上真正意义的网络管理，要想管理好网络就必须具备一定的网络信息安全知识，所以网络信息安全的管理人员将大量需要，网络信息安全将会成为网络管理的发展趋势。
","
1. 本课程将介绍一定的网络安全中常用黑客攻击技术和搭建一个企业网络安全体系，同时使学习者能够熟练的使用常用的黑客攻击和系统防御工具，了解信息安全的整个过程，以适应现代网络管理的需要。（支撑毕业要求4.1）
2. 网络体系结构、网络协议、互联网和网络漏洞的分类；第二部分讨论低层网络安全，包括物理网络层概述、网络层协议和传输层协议；第三部分讨论应用层安全，包括应用层概述、邮件、Web安全和远程访问安全；第四部分基于网络防范，介绍了常用的网络安全设备。（支撑毕业要求5.1,5.2）
3. 对本专业当前国际研究前沿与产业发展状况有基本了解，理解和尊重不同文化背景下的差异性和多样性。能够根据复杂问题实际需求，设计求解方案，能够通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑，培养学生的表达能力和沟通能力。（支撑毕业要求10.1）


"
2440052,"
随着计算机网络与通讯技术的发展，Internet在人们的生活、学习和工作中的位置越来越重要，网络信息的安全已经成为各行各业中非常重要的环节。因此，能够掌握一定的网络信息安全知识已成为网络管理中的一种必须技能。
同时随着服务器管理技术的不断发展，现在国内的各行各业的网络大多只是处于组建内部网或接入公网，根本谈不上真正意义的网络管理，要想管理好网络就必须具备一定的网络信息安全知识，所以网络信息安全的管理人员将大量需要，网络信息安全将会成为网络管理的发展趋势。
","
1. 本课程将介绍一定的网络安全中常用黑客攻击技术和搭建一个企业网络安全体系，同时使学习者能够熟练的使用常用的黑客攻击和系统防御工具，了解信息安全的整个过程，以适应现代网络管理的需要。（支撑毕业要求4.1）
2. 网络体系结构、网络协议、互联网和网络漏洞的分类；第二部分讨论低层网络安全，包括物理网络层概述、网络层协议和传输层协议；第三部分讨论应用层安全，包括应用层概述、邮件、Web安全和远程访问安全；第四部分基于网络防范，介绍了常用的网络安全设备。（支撑毕业要求5.1,5.2）
3. 对本专业当前国际研究前沿与产业发展状况有基本了解，理解和尊重不同文化背景下的差异性和多样性。能够根据复杂问题实际需求，设计求解方案，能够通过口头、书面等形式与业界同行及社会公众进行有效沟通和交流，能够准确表达自己的观点并回应质疑，培养学生的表达能力和沟通能力。（支撑毕业要求10.1）


"
2440052,"
随着计算机网络与通讯技术的发展，Internet在人们的生活、学习和工作中的位置越来越重要，网络信息的安全已经成为各行各业中非常重要的环节。因此，能够掌握一定的网络信息安全知识已成为网络管理中的一种必须技能。
同时随着服务器管理技术的不断发展，现在国内的各行各业的网络大多只是处于组建内部网或接入公网，根本谈不上真正意义的网络管理，要想管理好网络就必须具备一定的网络信息安全知识，所以网络信息安全的管理人员将大量需要，网络信息安全将会成为网络管理的发展趋势。
","
本课程将介绍一定的网络安全中常用黑客攻击技术和搭建一个企业网络安全体系，同时使学习者能够熟练的使用常用的黑客攻击和系统防御工具，了解信息安全的整个过程，以适应现代网络管理的需要。（支持毕业要求1-7）
"
2440052,"
随着计算机网络与通讯技术的发展，Internet在人们的生活、学习和工作中的位置越来越重要，网络信息的安全已经成为各行各业中非常重要的环节。因此，能够掌握一定的网络信息安全知识已成为网络管理中的一种必须技能。
同时随着服务器管理技术的不断发展，现在国内的各行各业的网络大多只是处于组建内部网或接入公网，根本谈不上真正意义的网络管理，要想管理好网络就必须具备一定的网络信息安全知识，所以网络信息安全的管理人员将大量需要，网络信息安全将会成为网络管理的发展趋势。
","
本课程将介绍一定的网络安全中常用黑客攻击技术和搭建一个企业网络安全体系，同时使学习者能够熟练的使用常用的黑客攻击和系统防御工具，了解信息安全的整个过程，以适应现代网络管理的需要。（支持毕业要求1-7）
"
2440053,,
2440053,,
2440053,,
2440053,,
2440003,"
本课程是一门涉及概率统计学、数据库及可视化等多个领域的交叉学科，属于专业必修课。数据挖掘技术发展极为迅速，应用非常广泛。该实践课程结合数据挖掘的基础理论课程，设计实践案例，主要内容包括数据预处理、关联规则、监督学习、无监督学习。在教学过程中采用探索式教学，注意理论与实践的结合。同学们可以了解数据挖掘所采用的主要研究方法和技术手段，掌握使用数据挖掘平台、工具或算法库求解实际问题的方法。该课程可以培养学生综合运用所学知识解决实际问题的能力，训练学生逻辑思维能力和想象力。它可以使学生掌握理论联系实际的方法，从而使他们能够根据实际需求，运用、改进甚至提出新的数据挖掘算法，探索应用领域的共性模式发现。通过团队合作的形式，使得同学们的实践能力、表达能力以及团队合作精神得到一定的锻炼。

","
1．通过本课程的学习，使学生掌握数据预处理技术（包括数据清理、数据集成和转换、数据归约等方法）和数据挖掘技术（包括分类、预测、关联和聚类的概念与技术），并且熟悉数据挖掘的基本原理和发展方向，能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。（支撑毕业要求2.1）
2．通过将理论与实践相结合，要求学生能够把所学知识与技术用于实际问题。在此基础上进行归纳和总结，逐步形成科学的学习观和方法论。针对复杂的分类、识别等工程问题，能够综合运用关联规则、监督学习和无监督学习的方法来调研、分析复杂工程问题的具体解决方案。（支撑毕业要求4.1）
四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
问题分析
2.1 能够运用数学、自然科学和计算机科学与技术的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。
M(0.2)
1
研究
4.1 具有对复杂计算机/人工智能/网安相关工程问题的研究与判断能力，能够基于科学原理和科学方法来调研、分析复杂计算机/人工智能/网安相关工程问题的具体解决方案。能面向工程需求进行科学探索和创新性思考。
H(0.3)
2
五、基本要求
本课程通过介绍数据挖掘的概念方法等来帮助学生更好地发现潜在知识。通过本课程的学习，了解什么是数据挖掘以及如何用数据挖掘来解决实际问题，掌握数据挖掘的联机分析处理(OLAP)、分类、聚类、预测等相关算法，识别几种数据挖掘策略，了解每种策略的适用场景，全面了解如何通过几种数据挖掘技术建立模型来解决实际问题。
六、本课程中的复杂工程问题定义
1.一个复杂数据挖掘系统的设计与诸多因素相关，如系统需求、问题规模、算法设计、计算性能、设计成本以及实现工具等。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的算法。
2.	对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能 力，如数据库原理、数据结构等；以及需要掌握多学科知识的综合运用能力，如数学、物理学、生物学、统计学等。
七、课程教学方法
课程教学采用线上/线下混合教学模式。在教学过程中采用传统课堂教学、学生线上自学和翻转课堂相结合的方法。学生根据教师布置的预习任务，在“智慧树”网站上学习教师提前布置的相关材料，并完成相应的预习作业。教师根据学生的预习反馈情况，组织课堂教学，即翻转课堂。翻转课堂的形式包括研讨式、案例式等。通过多种教学手段加深学生对数据挖掘相关知识的理解，提升学生主动学习的能力，形成自主学习的意识。
实验教学强调实验难度和系统性，减少验证性实验，增加设计性实验和综合性实验。学生根据教师发布的实验指导书中的设计任务完成实验。在提高学生动手能力的同时，也进一步培养了学生养成独立思考习惯以及解决复杂工程问题的能力。
八、教学内容
1、授课与自学
第一章 数据挖掘概述          
1.1数据挖掘简介
1.2数据挖掘的功能
1.3数据挖掘的发展前沿  
教学模式：课堂授课、课后自学、查阅相关资料
能力：了解数据挖掘的基本概念
第二章 认识数据               
2.1 数据对象与属性类型
2.2 数据的基本统计描述
2.3 数据可视化
2.4 度量数据的相似性和相异性
教学模式：课堂授课、案例教学、课后练习
知识点：统计描述、相似度、距离
能力：能够理解数据的基本统计方法。
第三章 数据预处理                   
3.1 数据预处理: 概述
3.2 数据抽取
3.3 数据清洗
3.4 数据集成
3.5 数据归约
3.6 数据变换与数据离散化
教学模式：课堂授课、案例教学、课后练习
知识点：数据预处理的步骤及方法
能力：了解数据预处理常用方法。
第四章  数据仓库与联机分析处理
4.1 数据仓库
4.2 联机分析处理
4.3 数据仓库的体系结构
知识点：上卷、下钻
能力：能够理解OLAP的基本概念和方法。
第五章  关联规则              
5.1概述
5.2基本概念
5.3经典算法
5.4评估
5.5应用
应用案例分析：运营商客户购物分析
知识点：关联规则的方法、Apriori算法、FP增长算法
能力：能够掌握基本的关联方法
第六章 分类
6.1 分类、回归与聚类
6.2 分类的应用案例
6.3 分类概念
6.4 分类过程
6.5 评估
6.6 常用的分类方法
教学模式：课堂授课、案例教学、课后练习
知识点：支持向量机、k近邻、决策树、神经网络
能力：能够掌握各类分类算法的基本原理和使用方法
第七章 聚类
7.1聚类概述
7.2典型应用
7.3划分方法
7.4层次方法
7.5密度方法
7.6评估
教学模式：课堂授课、案例教学、课后练习
知识点：K-means和 AGNES、DIANA层次聚类方法
能力：能够掌握各类算法的基本原理和使用方法
第八章 回归分析
8.1 回归概述
8.2 线性回归
8.3 多项式回归
8.4 非线性回归
8.5 Logistic回归
8.6 评估
教学模式：课堂授课、案例教学、课后练习
知识点：线性和非线性回归方法
能力：能够掌握各类回归算法的基本原理和使用方法
2、实验
实验一：Weka平台
实验目的：
（1） 掌握数据挖掘算法的基本流程。
（2） 掌握Weka的主要功能模块。
（3） 掌握基于Weka环境的数据挖掘算法的实现，包括数据集的使用、算法的预处理、算法实现过程、结果分析及可视化等内容。
实验内容：
（1） 采用Weka的数据处理功能，将不同格式的数据导入，并对数据进行离散化、规范化等预处理。
（2） 基于Weka的分类、聚类以及寻找关联规则等功能，选择已有的分类算法、聚类算法以及关联规则算法对预处理的数据进行实验，实验效果通过可视化工具展示，并通过调整算法参数，观察实验效果。
（3） 对比不同数据挖掘算法对具体问题的结果，找到解决当前问题的最佳方案。
实验二：关联规则
实验目的：
（1） 了解相关的挖掘数据关联规则的算法。
（2） 掌握常用的挖掘数据关联规则的算法，包括：算法的原理，具体的操作过程以及相关代码的编写。
（3） 掌握使用关联规则算法解决实际问题，找出实际数据集中的有效规则。
实验内容：
（1） 基于实际问题，采用预处理的数据集或者用爬虫等方式获得原始数据并对其进行预处理。
（2） 设计合适的关联规则挖掘算法，用熟悉的语言，如python、matlab等，实现具体的算法。
（3） 通过调整参数，或者对比不同关联规则挖掘算法效果，讨论具体算法中参数的影响以及不同算法的优缺点。
实验三：分类
实验目的：
（1） 了解已有的分类算法。
（2） 掌握常用的分类算法（如SVM等），包括：算法的原理，具体的操作过程以及相关代码的编写。
（3） 掌握使用具体的分类算法解决实际问题，包括：实际问题的阐述、数据的获得以及预处理、算法的设计、代码的实现和实验效果的分析。
实验内容：
（1） 提出具体的实验问题和相应的分类方法，并阐述此分类方法的原理以及操作流程。
（2） 基于实际问题，采用预处理的数据集或者用爬虫等方式获得原始数据并对其进行预处理。
（3） 使用熟悉的语言，如python、matlab等，实现具体的分类算法。
（4） 根据实验效果，对实现的分类算法的效果进行分析，并通过调参等方法对分类算法进一步学习。
实验四：聚类
实验目的：
（1） 了解已有的聚类算法。
（2） 掌握常用的聚类算法（如k-means等），包括：算法的原理，具体的操作过程以及相关代码的编写。
（3） 掌握使用具体的聚类算法解决实际问题，包括：实际问题的阐述、数据的获得以及预处理、算法的设计、代码的实现和实验效果的分析。
实验内容：
（1） 提出具体的实验问题和相应的聚类方法，并阐述此聚类方法的原理以及操作流程。
（2） 基于实际问题，采用预处理的数据集或者用爬虫等方式获得原始数据并对其进行预处理。
（3） 使用熟悉的语言，如python、matlab等，实现具体的聚类算法。
（4） 根据实验效果，对实现的聚类算法的效果进行分析，并通过调参等方法对聚类算法进一步学习。

六、学时分配
教学内容
授课
上机
实验
实践
实践(周)
数据挖掘概述     
2

　
　
　
认识数据
4




数据预处理
4
4



在线分析处理OLAP
2




关联规则挖掘
4
4
　
　
　
分类和预测
4
4

　
　
聚类分析
2
4

　
　
回归分析
2




总计
24
16




七、评价与考核方式
平时成绩占30%：包括：签到、上课回答问题、平时作业
实验成绩占20%
结课大作业50% 
1、课程目标达成考核与评价方式及成绩评定

考核与评价方式
平时表现
课程实验
课程设计
大作业
课程考试
成绩比例
课程目标1
15
8

17

40
课程目标2
15
12

33

60
合计
30
20

50

100
2、考核与评价标准

课程目标
基本要求
评价标准
成绩
比例
（%）
优秀
良好
合格
不合格
作业
使学生掌握数据预处理技术和数据挖掘技术，并且熟悉数据挖掘的基本原理和发展方向
能够熟练掌握数据挖掘的基本知识，并进行清晰的描述与表示。（支撑毕业要求2.1）
按时交作业；基本概念正确、论述逻辑清楚；层次分明，语言规范。
按时交作业；基本概念正确、论述基本清楚；语言较规范。
按时交作业；基本概念基本正确、论述基本清楚；语言较规范。
不能按时交作业；有抄袭现象；或者基本概念不清楚、论述不清楚。
50
针对复杂的数据挖掘等工程问题，能够面向具体的数据挖掘工程需求进行科学探索和创新性思考。
掌握常用的数据预处理、关联规则、监督学习、非监督学习算法，能够基于科学原理和科学方法来调研、分析复杂数据挖掘相关工程问题的具体解决方案。（支撑毕业要求4.1）
按时交作业；基本概念正确、论述逻辑清楚；层次分明，语言规范。
按时交作业；基本概念正确、论述基本清楚；语言较规范。
按时交作业；基本概念基本正确、论述基本清楚；语言较规范。
不能按时交作业；有抄袭现象；或者基本概念不清楚、论述不清楚。
50
注：该表格中比例为平时成绩比例。
实验评价标准：

课程目标
基本要求
评价标准
成绩
比例
（%）
优秀
良好
合格
不合格
实验
使学生掌握数据预处理技术和数据挖掘技术（包括分类、预测、关联和聚类的概念与技术），并且熟悉数据挖掘的基本原理和发展方向
能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。（支撑毕业要求2.1）
能够熟练运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。
能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行描述与表示。
基本能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别。
数据挖掘的基本知识掌握不是很清晰，不能对复杂工程问题及其中关键环节进行识别。
40
针对复杂的数据挖掘等工程问题，能够面向具体的数据挖掘工程需求进行科学探索和创新性思考。
掌握常用的数据预处理、关联规则、监督学习、非监督学习算法，能够基于科学原理和科学方法来调研、分析复杂数据挖掘相关工程问题的具体解决方案。（支撑毕业要求4.1）
熟练掌握数据挖掘算法，结合具体的实际工程问题，能够充分调研并给出明确且合理的解决方案。
掌握数据挖掘算法，结合具体的实际工程问题，能够调研并给出合理的决方案。
基本掌握数据挖掘算法，结合具体的实际工程问题，能够调研并给出较为合理的决方案。
数据挖掘算法流程不清楚，结合具体的实际工程问题，不能给出较为合理的决方案。
60
注：该表格中比例为实验考核成绩比例。








《数据挖掘》课程报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告题目与摘要
描述需要解决的复杂数据挖掘挖掘问题，并对具体解决方案及实验结果进行概要介绍。
二、 任务分析
详细介绍需要解决的复杂数据挖掘问题。
三、 相关工作
结合自己的研究领域及专业，调研数据挖掘相关技术及解决方案，并分析其存在的问题及不足。
"
2440003,"
本课程是一门涉及概率统计学、数据库及可视化等多个领域的交叉学科，属于专业必修课。数据挖掘技术发展极为迅速，应用非常广泛。该实践课程结合数据挖掘的基础理论课程，设计实践案例，主要内容包括数据预处理、关联规则、监督学习、无监督学习。在教学过程中采用探索式教学，注意理论与实践的结合。同学们可以了解数据挖掘所采用的主要研究方法和技术手段，掌握使用数据挖掘平台、工具或算法库求解实际问题的方法。该课程可以培养学生综合运用所学知识解决实际问题的能力，训练学生逻辑思维能力和想象力。它可以使学生掌握理论联系实际的方法，从而使他们能够根据实际需求，运用、改进甚至提出新的数据挖掘算法，探索应用领域的共性模式发现。通过团队合作的形式，使得同学们的实践能力、表达能力以及团队合作精神得到一定的锻炼。

","
1．通过本课程的学习，使学生掌握数据预处理技术（包括数据清理、数据集成和转换、数据归约等方法）和数据挖掘技术（包括分类、预测、关联和聚类的概念与技术），并且熟悉数据挖掘的基本原理和发展方向，能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。（支撑毕业要求2.1）
2．通过将理论与实践相结合，要求学生能够把所学知识与技术用于实际问题。在此基础上进行归纳和总结，逐步形成科学的学习观和方法论。针对复杂的分类、识别等工程问题，能够综合运用关联规则、监督学习和无监督学习的方法来调研、分析复杂工程问题的具体解决方案。（支撑毕业要求4.1）
四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
问题分析
2.1 能够运用数学、自然科学和计算机科学与技术的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。
M(0.2)
1
研究
4.1 具有对复杂计算机/人工智能/网安相关工程问题的研究与判断能力，能够基于科学原理和科学方法来调研、分析复杂计算机/人工智能/网安相关工程问题的具体解决方案。能面向工程需求进行科学探索和创新性思考。
H(0.3)
2
五、基本要求
本课程通过介绍数据挖掘的概念方法等来帮助学生更好地发现潜在知识。通过本课程的学习，了解什么是数据挖掘以及如何用数据挖掘来解决实际问题，掌握数据挖掘的联机分析处理(OLAP)、分类、聚类、预测等相关算法，识别几种数据挖掘策略，了解每种策略的适用场景，全面了解如何通过几种数据挖掘技术建立模型来解决实际问题。
六、本课程中的复杂工程问题定义
1.一个复杂数据挖掘系统的设计与诸多因素相关，如系统需求、问题规模、算法设计、计算性能、设计成本以及实现工具等。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的算法。
2.	对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能 力，如数据库原理、数据结构等；以及需要掌握多学科知识的综合运用能力，如数学、物理学、生物学、统计学等。
七、课程教学方法
课程教学采用线上/线下混合教学模式。在教学过程中采用传统课堂教学、学生线上自学和翻转课堂相结合的方法。学生根据教师布置的预习任务，在“智慧树”网站上学习教师提前布置的相关材料，并完成相应的预习作业。教师根据学生的预习反馈情况，组织课堂教学，即翻转课堂。翻转课堂的形式包括研讨式、案例式等。通过多种教学手段加深学生对数据挖掘相关知识的理解，提升学生主动学习的能力，形成自主学习的意识。
实验教学强调实验难度和系统性，减少验证性实验，增加设计性实验和综合性实验。学生根据教师发布的实验指导书中的设计任务完成实验。在提高学生动手能力的同时，也进一步培养了学生养成独立思考习惯以及解决复杂工程问题的能力。
八、教学内容
1、授课与自学
第一章 数据挖掘概述          
1.1数据挖掘简介
1.2数据挖掘的功能
1.3数据挖掘的发展前沿  
教学模式：课堂授课、课后自学、查阅相关资料
能力：了解数据挖掘的基本概念
第二章 认识数据               
2.1 数据对象与属性类型
2.2 数据的基本统计描述
2.3 数据可视化
2.4 度量数据的相似性和相异性
教学模式：课堂授课、案例教学、课后练习
知识点：统计描述、相似度、距离
能力：能够理解数据的基本统计方法。
第三章 数据预处理                   
3.1 数据预处理: 概述
3.2 数据抽取
3.3 数据清洗
3.4 数据集成
3.5 数据归约
3.6 数据变换与数据离散化
教学模式：课堂授课、案例教学、课后练习
知识点：数据预处理的步骤及方法
能力：了解数据预处理常用方法。
第四章  数据仓库与联机分析处理
4.1 数据仓库
4.2 联机分析处理
4.3 数据仓库的体系结构
知识点：上卷、下钻
能力：能够理解OLAP的基本概念和方法。
第五章  关联规则              
5.1概述
5.2基本概念
5.3经典算法
5.4评估
5.5应用
应用案例分析：运营商客户购物分析
知识点：关联规则的方法、Apriori算法、FP增长算法
能力：能够掌握基本的关联方法
第六章 分类
6.1 分类、回归与聚类
6.2 分类的应用案例
6.3 分类概念
6.4 分类过程
6.5 评估
6.6 常用的分类方法
教学模式：课堂授课、案例教学、课后练习
知识点：支持向量机、k近邻、决策树、神经网络
能力：能够掌握各类分类算法的基本原理和使用方法
第七章 聚类
7.1聚类概述
7.2典型应用
7.3划分方法
7.4层次方法
7.5密度方法
7.6评估
教学模式：课堂授课、案例教学、课后练习
知识点：K-means和 AGNES、DIANA层次聚类方法
能力：能够掌握各类算法的基本原理和使用方法
第八章 回归分析
8.1 回归概述
8.2 线性回归
8.3 多项式回归
8.4 非线性回归
8.5 Logistic回归
8.6 评估
教学模式：课堂授课、案例教学、课后练习
知识点：线性和非线性回归方法
能力：能够掌握各类回归算法的基本原理和使用方法
2、实验
实验一：Weka平台
实验目的：
（1） 掌握数据挖掘算法的基本流程。
（2） 掌握Weka的主要功能模块。
（3） 掌握基于Weka环境的数据挖掘算法的实现，包括数据集的使用、算法的预处理、算法实现过程、结果分析及可视化等内容。
实验内容：
（1） 采用Weka的数据处理功能，将不同格式的数据导入，并对数据进行离散化、规范化等预处理。
（2） 基于Weka的分类、聚类以及寻找关联规则等功能，选择已有的分类算法、聚类算法以及关联规则算法对预处理的数据进行实验，实验效果通过可视化工具展示，并通过调整算法参数，观察实验效果。
（3） 对比不同数据挖掘算法对具体问题的结果，找到解决当前问题的最佳方案。
实验二：关联规则
实验目的：
（1） 了解相关的挖掘数据关联规则的算法。
（2） 掌握常用的挖掘数据关联规则的算法，包括：算法的原理，具体的操作过程以及相关代码的编写。
（3） 掌握使用关联规则算法解决实际问题，找出实际数据集中的有效规则。
实验内容：
（1） 基于实际问题，采用预处理的数据集或者用爬虫等方式获得原始数据并对其进行预处理。
（2） 设计合适的关联规则挖掘算法，用熟悉的语言，如python、matlab等，实现具体的算法。
（3） 通过调整参数，或者对比不同关联规则挖掘算法效果，讨论具体算法中参数的影响以及不同算法的优缺点。
实验三：分类
实验目的：
（1） 了解已有的分类算法。
（2） 掌握常用的分类算法（如SVM等），包括：算法的原理，具体的操作过程以及相关代码的编写。
（3） 掌握使用具体的分类算法解决实际问题，包括：实际问题的阐述、数据的获得以及预处理、算法的设计、代码的实现和实验效果的分析。
实验内容：
（1） 提出具体的实验问题和相应的分类方法，并阐述此分类方法的原理以及操作流程。
（2） 基于实际问题，采用预处理的数据集或者用爬虫等方式获得原始数据并对其进行预处理。
（3） 使用熟悉的语言，如python、matlab等，实现具体的分类算法。
（4） 根据实验效果，对实现的分类算法的效果进行分析，并通过调参等方法对分类算法进一步学习。
实验四：聚类
实验目的：
（1） 了解已有的聚类算法。
（2） 掌握常用的聚类算法（如k-means等），包括：算法的原理，具体的操作过程以及相关代码的编写。
（3） 掌握使用具体的聚类算法解决实际问题，包括：实际问题的阐述、数据的获得以及预处理、算法的设计、代码的实现和实验效果的分析。
实验内容：
（1） 提出具体的实验问题和相应的聚类方法，并阐述此聚类方法的原理以及操作流程。
（2） 基于实际问题，采用预处理的数据集或者用爬虫等方式获得原始数据并对其进行预处理。
（3） 使用熟悉的语言，如python、matlab等，实现具体的聚类算法。
（4） 根据实验效果，对实现的聚类算法的效果进行分析，并通过调参等方法对聚类算法进一步学习。

六、学时分配
教学内容
授课
上机
实验
实践
实践(周)
数据挖掘概述     
2

　
　
　
认识数据
4




数据预处理
4
4



在线分析处理OLAP
2




关联规则挖掘
4
4
　
　
　
分类和预测
4
4

　
　
聚类分析
2
4

　
　
回归分析
2




总计
24
16




七、评价与考核方式
平时成绩占30%：包括：签到、上课回答问题、平时作业
实验成绩占20%
结课大作业50% 
1、课程目标达成考核与评价方式及成绩评定

考核与评价方式
平时表现
课程实验
课程设计
大作业
课程考试
成绩比例
课程目标1
15
8

17

40
课程目标2
15
12

33

60
合计
30
20

50

100
2、考核与评价标准

课程目标
基本要求
评价标准
成绩
比例
（%）
优秀
良好
合格
不合格
作业
使学生掌握数据预处理技术和数据挖掘技术，并且熟悉数据挖掘的基本原理和发展方向
能够熟练掌握数据挖掘的基本知识，并进行清晰的描述与表示。（支撑毕业要求2.1）
按时交作业；基本概念正确、论述逻辑清楚；层次分明，语言规范。
按时交作业；基本概念正确、论述基本清楚；语言较规范。
按时交作业；基本概念基本正确、论述基本清楚；语言较规范。
不能按时交作业；有抄袭现象；或者基本概念不清楚、论述不清楚。
50
针对复杂的数据挖掘等工程问题，能够面向具体的数据挖掘工程需求进行科学探索和创新性思考。
掌握常用的数据预处理、关联规则、监督学习、非监督学习算法，能够基于科学原理和科学方法来调研、分析复杂数据挖掘相关工程问题的具体解决方案。（支撑毕业要求4.1）
按时交作业；基本概念正确、论述逻辑清楚；层次分明，语言规范。
按时交作业；基本概念正确、论述基本清楚；语言较规范。
按时交作业；基本概念基本正确、论述基本清楚；语言较规范。
不能按时交作业；有抄袭现象；或者基本概念不清楚、论述不清楚。
50
注：该表格中比例为平时成绩比例。
实验评价标准：

课程目标
基本要求
评价标准
成绩
比例
（%）
优秀
良好
合格
不合格
实验
使学生掌握数据预处理技术和数据挖掘技术（包括分类、预测、关联和聚类的概念与技术），并且熟悉数据挖掘的基本原理和发展方向
能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。（支撑毕业要求2.1）
能够熟练运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行清晰的描述与表示。
能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别，并进行描述与表示。
基本能够运用数据挖掘的基本知识对复杂工程问题及其中关键环节进行识别。
数据挖掘的基本知识掌握不是很清晰，不能对复杂工程问题及其中关键环节进行识别。
40
针对复杂的数据挖掘等工程问题，能够面向具体的数据挖掘工程需求进行科学探索和创新性思考。
掌握常用的数据预处理、关联规则、监督学习、非监督学习算法，能够基于科学原理和科学方法来调研、分析复杂数据挖掘相关工程问题的具体解决方案。（支撑毕业要求4.1）
熟练掌握数据挖掘算法，结合具体的实际工程问题，能够充分调研并给出明确且合理的解决方案。
掌握数据挖掘算法，结合具体的实际工程问题，能够调研并给出合理的决方案。
基本掌握数据挖掘算法，结合具体的实际工程问题，能够调研并给出较为合理的决方案。
数据挖掘算法流程不清楚，结合具体的实际工程问题，不能给出较为合理的决方案。
60
注：该表格中比例为实验考核成绩比例。








《数据挖掘》课程报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告题目与摘要
描述需要解决的复杂数据挖掘挖掘问题，并对具体解决方案及实验结果进行概要介绍。
二、 任务分析
详细介绍需要解决的复杂数据挖掘问题。
三、 相关工作
结合自己的研究领域及专业，调研数据挖掘相关技术及解决方案，并分析其存在的问题及不足。
"
2440061,"
《图像处理》是计算机及多媒体处理专业的一门重要课程。本课程主要介绍数字图像处理的一些基本概念、图像处理基础知识、图像增强和图像分割等基本内容。
    通过本课程学习，使学生了解数字图像处理的特点，掌握基本的图像处理方法，为后续模式识别等课程以及进一步学习打下理论基础。

","
了解图像处理的发展和特点；掌握彩色图像处理方法和相机模型特点；掌握图像的几何变换、点变换和频域变换；了解基于图像的三维建模技术；掌握图像增强与恢复方法；掌握图像分割与压缩方法。
1. 了解图像处理所涉及的学科和领域，掌握图像处理发展过程和趋势，了解图像处理技术的学科和技术特点。（支撑毕业要求1）
2. 了解彩色图像处理方法和相机模型特点，了解彩色视觉和颜色模型，掌握彩色图像的增强、平滑和锐化，理解相机投影。（支撑毕业要求2）
3. 了解图像的几何变换、点变换和频域变换，掌握二维离散傅立叶变换及其应用，离散余弦变换和小波变换。（支撑毕业要求3）
4. 了解基于图像的三维建模技术的概念与基本理论，了解3DTV中的场景表示技术。（支撑毕业要求4）
5. 掌握图像增强与恢复方法，能够实现代表性图像增强与恢复方法。（支撑毕业要求5）
6. 了解图像分割与压缩的基本理论和方法，掌握JPEG图像压缩原理和JPEG2000图像压缩原理。（支撑毕业要求6）
7. 能够根据项目需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5




√







课程目标6





√






课程目标7








√
√



"
2440061,"
《图像处理》是计算机及多媒体处理专业的一门重要课程。本课程主要介绍数字图像处理的一些基本概念、图像处理基础知识、图像增强和图像分割等基本内容。
    通过本课程学习，使学生了解数字图像处理的特点，掌握基本的图像处理方法，为后续模式识别等课程以及进一步学习打下理论基础。

","
了解图像处理的发展和特点；掌握彩色图像处理方法和相机模型特点；掌握图像的几何变换、点变换和频域变换；了解基于图像的三维建模技术；掌握图像增强与恢复方法；掌握图像分割与压缩方法。
1. 了解图像处理所涉及的学科和领域，掌握图像处理发展过程和趋势，了解图像处理技术的学科和技术特点。（支撑毕业要求1）
2. 了解彩色图像处理方法和相机模型特点，了解彩色视觉和颜色模型，掌握彩色图像的增强、平滑和锐化，理解相机投影。（支撑毕业要求2）
3. 了解图像的几何变换、点变换和频域变换，掌握二维离散傅立叶变换及其应用，离散余弦变换和小波变换。（支撑毕业要求3）
4. 了解基于图像的三维建模技术的概念与基本理论，了解3DTV中的场景表示技术。（支撑毕业要求4）
5. 掌握图像增强与恢复方法，能够实现代表性图像增强与恢复方法。（支撑毕业要求5）
6. 了解图像分割与压缩的基本理论和方法，掌握JPEG图像压缩原理和JPEG2000图像压缩原理。（支撑毕业要求6）
7. 能够根据项目需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5




√







课程目标6





√






课程目标7








√
√



"
2440061,"
《图像处理》是计算机及多媒体处理专业的一门重要课程。本课程主要介绍数字图像处理的一些基本概念、图像处理基础知识、图像增强和图像分割等基本内容。
    通过本课程学习，使学生了解数字图像处理的特点，掌握基本的图像处理方法，为后续模式识别等课程以及进一步学习打下理论基础。

","
了解图像处理的发展和特点；掌握彩色图像处理方法和相机模型特点；掌握图像的几何变换、点变换和频域变换；了解基于图像的三维建模技术；掌握图像增强与恢复方法；掌握图像分割与压缩方法。
1. 了解图像处理所涉及的学科和领域，掌握图像处理发展过程和趋势，了解图像处理技术的学科和技术特点。（支撑毕业要求1）
2. 了解彩色图像处理方法和相机模型特点，了解彩色视觉和颜色模型，掌握彩色图像的增强、平滑和锐化，理解相机投影。（支撑毕业要求2）
3. 了解图像的几何变换、点变换和频域变换，掌握二维离散傅立叶变换及其应用，离散余弦变换和小波变换。（支撑毕业要求3）
4. 了解基于图像的三维建模技术的概念与基本理论，了解3DTV中的场景表示技术。（支撑毕业要求4）
5. 掌握图像增强与恢复方法，能够实现代表性图像增强与恢复方法。（支撑毕业要求5）
6. 了解图像分割与压缩的基本理论和方法，掌握JPEG图像压缩原理和JPEG2000图像压缩原理。（支撑毕业要求6）
7. 能够根据项目需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5




√







课程目标6





√






课程目标7








√
√



"
2440062,"
生物信息学是以计算机为工具对生物信息进行储存、检索和分析的科学，是一门新兴的交叉学科。生物信息学采用计算机科学、生物数学、比较生物学等学科的方法对生命现象及其组成（核酸、蛋白质等）进行研究，主要研究生命中的本质和规律，包括物质组成、结构功能和信息交换传递等。研究重点主要体现在基因组学和蛋白学两方面，分析核酸和蛋白质的序列从而研究结构功能。课程内容主要介绍生物信息数据的管理方法和分析技术。以常用生物信息学数据库为例介绍序列数据、结构化数据及生物学知识的存储和管理方法；以现有的生物信息学分析工具为例，介绍序列数据搜索与比对技术、蛋白质/基因二级/三级结构预测技术、蛋白质/基因相互作用网络建模及网络查询技术。通过课程的学习，使得学生能够掌握基本的生物信息学知识，提高学生运用所学知识解决实际问题的能力。
","
课程目标1：掌握生物信息学的基本概念和生物学基本知识。（支撑毕业要求1）
课程目标2：掌握序列分析的基本原理和常用算法。（支撑毕业要求3、4）
课程目标3：掌握基本算法分析与设计，机器学习蛋白质二级结构预测的基本原理和常用算法。（支撑毕业要求3、4）
课程目标4：掌握生物网络模型构建与结构分析的基本原理和常用算法。（支撑毕业要求2、4、5）
课程目标5：掌握基因及蛋白组尺度上简单物种的生物信息学分析流程及结果评价与解释方法。（支撑毕业要求2、3、4、12）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2


√
√








课程目标3

算法分析与设计，机器学习
√
√








课程目标4

√

√
√







课程目标5

√
√
√







√

"
2440063,"
软件测试技术课程是软件工程专业的一门专业课。本课程主要介绍软件测试和软件质量保证的基本理论、方法、技术以及前沿的测试研究主题。使学生学习软件测试的基础理论和业界主流的通用技术。通过课堂教学，使学生掌握软件测试的步骤、方法及常见问题的处理并树立良好的软件质量观。课堂教学主要包括测试基础理论、白盒测试、黑盒测试、测试自动化、接口测试、压力测试、接收测试、测试管理等知识领域。通过上机进一步提高学生对所学软件测试知识的理解、掌握软件测试的基本技术和方法。上机要求学生利用所学知识对给定的实例其进行测试，基于Junit完成单元测试用例设计，并使用自动化测试工具Selenium和压力测试工具Jmeter执行测试工作，撰写缺陷报告，并最终完成测试计划和测试分析报告文档的编写。

","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度。
1、 掌握测试的基本概念，可以区分测试主要两个功能（Verification和Validation）的区别；掌握测试的流程以及本课程主要讲授的测试内容，包括黑盒测试、白盒测试、自动化测试、压力测试、验收测试及测试管理等，能解释每个测试领域的主要功能、目标及要解决的问题。
2、 能够应用当前的主流测试工具，如可应用Junit进行单元测试、应用Selenium执行自动化测试、应用Jmeter开展压力测试，应用Bugzilla、Jira、Redmine等工具进行软件缺陷管理。
3、 能掌握测试的基本思想，如在黑盒测试中，可以应用等价类、边界值、决策树、判定表等方法进行测试用例的设计，并根据理论分析设计出测试用例的最小集合。在白盒测试中，要掌握控制流图、数据流图的生成方法，利用图论相关知识去分析程序的控制流图和数据流图；掌握主路径覆盖、改进的条件判定覆盖等重点白盒测试覆盖方法，并可灵活应用白盒测试知识分析待测软件，进而设计出有效的白盒测试用例。在压力测试中，要了解影响系统承载能力的主要硬件因素，如IO、网络、内存、CPU等。要掌握上述关键性能指标的评价方法，并掌握如何通过虚拟用户对系统加压获取上述关键指标。根据上述关键性能指标，学生将可以分析待测系统的性能瓶颈并可对原有系统进行重构，并制定相关的策略以提高系统的抗压能力。
4、 要了解软件测试领域研究的主要热点，可基于所学知识设计错误定位的方法。





毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√










课程目标2

√










课程目标3

√

√








课程目标4



√









"
2440064,"
“计算机图形技术”是基于计算机进行图像合成、处理和显示的技术，被广泛用于虚拟现实、增强现实、游戏特效制作、仿真等应用领域，主要研究内容包括基础图像处理，几何变换、三维建模、渲染，动画制作、光线跟踪等。本课程是软件工程专业本科生的专业选修课，不仅学习计算机图形学基础知识，而且能够使学生了解所学习的高等数学、计算机算法、数据结构等知识在实际工程中的应用，掌握计算机图形初级应用的开发过程。

","
1. 掌握图形与图像的基本表达方式、图形变换管线的基本概念和数学原理、光照模拟的常用模型、纹理贴图的工作原理、光线跟踪的基本原理，了解参数曲线曲面的数学原理和基础算法。（支撑毕业要求3）
2. 能够使用层次化的模型表达方式，利用曲线曲面数学公式，进行三维虚拟场景的设计。（支撑毕业要求3、4）
3. 能够使用图形API，应用光照模拟、纹理贴图等基础理论，选择适用的技术，实现图形渲染的效果。（支撑毕业要求3、4）
4. 能够在资料检索的基础上，设计并实现兼具美感、可交互性的图形学应用，撰写图形学设计方案。（支撑毕业要求5、7）
5. 能够根据设计需求，进行团队合作，能够清晰陈述，表达其设计理念、汇报系统实现过程、以及分析实验结果，并对整个课程学习过程进行自我评价。（支撑毕业要求6、10、11、12）
6. 能够掌握一定的自学能力，面对课后作业中遇到的困难，积极查找参考资料，主动尝试解决。（支撑毕业要求1、2、14）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
13
14
课程目标1


√











课程目标2


√
√










课程目标3


√
√










课程目标4




√

√







课程目标5





√



√
√
√


课程目标6
√
√











√
（注意：课程目标不一定与毕业要求一一对应）


"
2440065,"
本课程是计算机科学与技术专业的必修课。它是在“计算机组成原理I”和“计算机组成原理II”课程的基础上，从系统分析和设计的角度，使学生建立起计算机系统的完整概念。“计算机系统结构”是从计算机用户（包括应用程序员和系统程序员）角度所看到的、或必须掌握的计算机系统的属性，包括计算机系统性能评估、指令集体系结构、处理器、存储体系、指令级并行性和超标量处理器、多核与多处理器等内容。
","
1. 能够应用计算机性能分析方法对计算机系统设计中的复杂工程问题进行建模和评估，判断不同优化技术对计算机系统性能带来的影响。能够根据计算机系统组件建模的要求，结合性能分析理论，提出典型微处理器架构和存储体系的设计方案，并能利用硬件描述语言对其进行描述，并能在设计环节中体现创新意识。（支撑毕业要求3.1）
2.能够使用硬件描述语言、仿真工具以及EDA工具实现计算机体系结构中重要部件（如处理器、Cache、分支预测单元等）；能够通过计算机体系结构相关参数的选择进行复杂工程问题的设计空间探测。能够应用性能评估的科学方法对设计和实现结果进行综合分析，找出影响所设计的计算机系统或部件性能的主要因素。（支撑毕业要求5.2）
毕业要求
毕业要求指标点
支撑强度
课程目标
3.设计/开发解决方案
3.1能够熟练应用计算机领域工程设计和产品开发的全周期全流程方法与技术，评价相关影响因素，设计针对复杂计算机工程问题的合理解决方案。
H（0.3）
1
5.使用现代工具
5.1能够开发或选用恰当的现代工具对复杂计算机/人工智能/网安相关工程问题进行预测和模拟，并分析其局限性。
M（0.1）
2

"
2440066,"
量子计算、量子信息及量子人工智能是受到广泛关注的研究领域，有望在通用计算模型和设备、人工智能基础理论和通用人工智能模型等方向上实现突破。本课程将覆盖量子力学的数学基础、量子计算、量子信息和量子人工智能基础等重要的前沿科研方面，为本科生提供在相关领域中进一步学习和研究的必要基础知识和科学视角。

","
1. 了解量子力学基本概念和性质，理解上述概念、性质与信息表示、计算和处理的内在联系，掌握使用量子力学理论解决特定信息表示、计算和处理问题的基本理论和方法。熟悉这些理论和方法的主要特点，以及它们在计算理论、人工智能等领域中的主要用途，并能够应用这些理论和方法解决一些实际问题，并在解决问题过程中培养逻辑思维能力，提高抽象建模能力。
2. 学会使用量子力学理论分析计算机科学（包括人工智能领域等）中若干问题的量子特性，结合量子力学描述客观世界的方法，对于不同的具体问题，合理选择抽象模型，并使用相应的理论和方法进行信息表示、计算和处理。学会如何判断具体的应用问题是否能够使用本课程所学的定义和定理进行形式化描述和分析。若可以，则使用所学定义和定理解决该问题。若不能，则通过参阅参考文献等方法，确定具体问题中所涉及新的数学定义和方法，基于新的理论和方法对具体问题进行进一步的抽象建模和分析。
3. 面对复杂工程问题，能够利用量子力学及相关理论的抽象思维方法，对若干具体问题进行抽象建模和分析，包括将复杂问题分解为若干的子问题；基于不同子问题的特点，结合量子信息和经典信息不同特定，寻找适当的抽象模型，即量子模型或经典模型；进而根据选择的（量子或经典）模型，利用（量子或经典）信息理论的概念和性质，对各抽象模型进行分析与处理。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√










课程目标2

√

√








课程目标3


√

√






√

"
2440067,,
2440067,,
2440068,"
《软件项目管理》课程是软件工程专业的一门专业课。本课程主要介绍软件项目管理的基本理论、方法及技术。使学生学习PMBOK的九大项目管理知识域以及五大管理阶段（初始、计划、执行、控制、结束）的基本内容，并结合敏捷开发方法对软件项目管理的当前方法进行介绍。该门课程希望能给学生打下扎实的软件项目管理理论基础，并且对实际的软件项目管理的辅助工具和文档水平有较好的提升。
","
1、 了解软件项目管理的硬实力，重点是九大管理知识域中的范围管理、时间管理、成本管理、质量管理以及集成管理，并针对每一个知识域了解其主要内容、管理方法、评价指标以及保证办法。（支撑毕业要求1、11）
2、 掌握软件项目管理的软技能，如沟通能力、团队建设能力、人力资源管理、项目采购管理等（支撑毕业要求8、9、10）
3、 理解软件项目中常见的问题和限制（支撑毕业要求2）
4、 掌握软件项目管理工具（支撑毕业要求5）
5、 熟悉了解软件项目管理过程中的各类文档（支撑毕业要求1、9、11）
6、培养合作精神，建立起与团队合作的机制，基于软件项目管理中学到的经验开发一个展示项目（支撑毕业要求9、10）。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√









√

课程目标2







√
√
√


课程目标3

√










课程目标4




√







课程目标5
√







√

√

课程目标6








√
√


"
2440069,"
架构驱动的软件开发实践是软件工程专业本科生的专业选修课程。该课程具有抽象性、理论性、系统性、实践性较强的特点。课程以系统架构驱动的软件开发为主线，讲授微服务架构理论、分布式服务框架，以此为基础讲授服务调用日志跟踪、分布式数据访问平台、消息平台与缓存平台。进一步介绍企业级微服务架构的基本理论，包括自动化软件交付、智能化系统运维、系统化业务运营等相关内容。通过学习课程，学生能运用架构驱动的软件开发方法进行建模、并通过先进的平台工具进行工程化开发，建立较好的架构意识，学会用架构化思想（包括技术、方法与环境）开发各种软件，为在实际工程中能够进行系统分析与设计奠定良好的基础。

","
通过本课程的学习，学生应达到的目标如下：
1. 掌握架构驱动软件开发的基本概念、基本原理、微服务概念和分布式服务框架在开发过程中应遵循的流程、准则、标准和规范等工程知识。（支撑毕业要求1.2, 3.1）
2. 掌握微服务架构的基础技术，掌握分布式服务框架的一般原理与实现；理解并掌握服务调用链日志跟踪、分布式数据访问平台、消息中间件平台和分布式缓存平台等。（支撑毕业要求1.2, 2.1, 3.1）
3. 了解微服务架构的高阶功能，企业级微服务架构所必须具备的系统化业务运营能力、智能化系统运维能力与自动化软件交付能力等相关技术。（支撑毕业要求1.2, 2.1）
4. 学生应学会应用架构驱动的方法开发系统软件，为学生参加大型软件开发项目打下坚实的理论基础。（支撑毕业要求1.2，11.1, 11.2）
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√

√









课程目标2
√
√
√









课程目标3
√
√










课程目标4
√









√

（注意：课程目标不一定与毕业要求一一对应）
"
2440070,"
    让学生能够掌握异构计算技术在研究与开发中的应用，能够根据自己的需要选择合适的异构计算环境与异构计算编程技术，独立完成针对本领域或所承担具体任务的异构并行化算法设计，并能够针对指定异构平台独立完成异构程序的编写、调试与部署。课程内容主要介绍高性能计算领域中异构计算基本概念以及基础的异构程序设计方法。目的是让学习本课程的同学了解异构计算硬件平台的类别，CUDA异构编程模型、OpenCL编程模型和OpenACC编程模型，为未来的工作或者科研打好基础。
","
课程目标1：掌握异构并行计算基本概念，了解异构计算硬件平台的分类。（支撑毕业要求2、3）
课程目标2：掌握基本的CUDA并行程序设计方法。（支撑毕业要求2、3、5）
课程目标3：掌握基本的OpenCL并行程序设计方法。（支撑毕业要求2、3、5）
课程目标4：掌握基本的OpenACC并行程序设计方法。（支撑毕业要求2、3、5）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√
√









课程目标2

√
√

√







课程目标3

√
√

√







课程目标4

√
√

√








"
2440072,"
本课程是集中实践类课程。学生在大一学习了“计算机系统基础”课程基础之上，将通过高级语言构建一台支持x86-32指令集架构的完整虚拟计算机系统。学生通过建立一个完整的计算机系统层次结构框架将所涉及的硬件和软件基本概念关联起来，从而实现深入理解计算机系统的全貌和相关软硬件知识体系，理解计算机系统中每一个抽象层次及相互转换关系，建立计算机软硬件协同工作的概念。最终，锻炼学生的计算机系统思维，培养学生的计算机系统能力。

","
1. 采用基于软件模拟的方式，综合利用在程序设计原理、数据结构、计算机系统基础等课程中学习到理论知识开发基于x86-32指令集的虚拟计算机系统，锻炼学生的计算思维能力和系统能力；使其掌握计算机系统各抽象层次之间的逻辑关系和转换机理，建立完整计算机系统的软件和硬件之间的关联关系和软硬件协同工作的概念。（支撑毕业要求3.3）
2. 能够针对计算机系统设计中存在的数据处理、存储等问题设计并建立合理的仿真模型，通过对仿真模拟结果进行归纳、分析等提出计算机系统软硬件设计方案，并分析其合理性和有效性。（支撑毕业要求4.3）

3. 能够将计算机系统设计这一复杂工程问题有效分解为独立功能模块，选用合适的软件及系统工具完成模块的开发、仿真和验证；熟练掌握Linux系统下对大型软件项目进行管理、开发和编译的常用方法及工具。
4. 在计算机系统人软硬件设计过程，能够熟练阅读有关指令集架构、存储管理、GNU GCC工具链等方面的官方英文使用手册或文档，并能针对手册中涉及的技术问题与同组人员展开讨论以寻求最终解决方案。

四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3. 设计/开发解决方案
3.3能够在集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题。
M（0.2）
1
4. 问题分析
4.3能够对复杂计算机工程问题的数学模型进行求解，分析结果的合理性、验证结构的有效性。
H（0.3）
2
7. 使用现代化工具
7.2能够针对复杂计算机工程问题选用或开发合适的软硬件工具，通过实验进行预测和模拟，并理解其适用范围
M（0.2）
3
12. 沟通
12.2能够使用一门外语针对专业问题和同行进行沟通和交流，具有跨语种、跨文化的交流和学习能力以及国际视野。
M（0.4）
4

五、基本要求
本课程是“计算机系统基础”的后续课程，是计算机科学与技术专业（腾讯实验班）的集中实践课程。该课程通过设计一台x86-32虚拟计算机系统（复杂工程问题）帮助学生建立计算机系统的全貌和相关软硬件知识体系，深入理解计算机系统各抽象层次之间的关联关系。
在开展课程设计的过程中，学生需要时刻注意站在系统的高度理解程序在编译、加载、执行过程中各个软硬件层次是如何协同工作的。了解程序运行的每个阶段是由硬件处理、软件处理还是软硬件协同处理。
通过该课程设计，以常见计算机系统为对象，采用高级语言进行计算机系统建模、设计、仿真和分析的训练，培养学生的文献检索、系统设计、实验数据的综合和分析报告撰写、沟通交流等多方面的能力。

六、本课程中的复杂工程问题定义
本课程围绕的复杂工程问题不是一个计算机应用问题，而是有关计算机系统基础软硬件设计的问题。学生将通过高级语言建模的方式实现一台基于x86 32位指令集的功能较完备的计算机软硬件系统。学生在实践过程中将涉及对指令集体系结构、Cache存储系统、虚拟存储系统、I/O系统、数据结构等知识的综合利用，以及熟练使用各类Linux系统工具。只有对计算机系统软硬件协同运行机理有较充分的认识，才能顺利完成3个实践任务。

七、课程教学方法
本课程将采用线上线下混合教学方法。教师凝练先修理论课程的知识点，并结合实践过程中的重点和难点提前录制若干微视频，按照任务顺序上传至“智慧树”平台。学生根据任务的进展情况，观看微视频，完成相应的实践任务。再见面课的过程中，师生主要针对实践任务实施过程中遇到的问题和困难展开讨论，教师可结合学生问题对计算机系统设计过程中的理论知识和技术要点进行进一步的拓展，加深学生对计算机内部软硬件运行机理的认识，锻炼学生的系统思维，强化其系统能力，提升其自主学习能力。

八、教学内容
本集中实践需要学生采用C语言完成一台基于x86-32指令集的虚拟计算机系统（NEMU）的建模与仿真，整个设计由3部分任务（PA1~PA3）组成。
任务一（PA1）：简易调试器的设计与实现
熟悉NEMU虚拟计算机系统的工作原理和整个代码框架；实现通用寄存器堆并完成验证；设计简易调试器为后续开发提供基本调试工具的支持，调试器具备单步、断点、检测点、表达式计算等基本功能。
任务二（PA2）：x86-32（i386）指令系统的实现
了解i386指令系统的基本概念和框架；实现对常见i386指令的支持；对程序加载功能进行建模；进一步扩展简易调试器的功能；理解ELF文件结构和对应的数据结构，实现对程序头表、符号表的解析。
任务三（PA3）：存储管理
理解NEMU的存储管理机制，完成Cache存储系统的建模；理解x86-32的段页式虚拟存储系统工作原理，实现段页式虚拟存储器的建模。
教学模式：分组进行集中实践；分组撰写实验报告，分组汇报并答辩。
能力：在系统层面上掌握程序执行过程中计算机系统的各层次软硬件协同工作与转换原理；掌握Linux下的程序开发和项目管理方法；掌握如何结合实践内容，参考技术手册，撰写一份专业的实践报告。
知识点：综合运用所学相关知识进行计算机系统设计。

九、学时分配
教学内容
授课
实验
自学
课程设计
实践（天）
其他
任务一（PA1）：简易调试器的设计与实现
　
　
　
　
2

任务二（PA2）：x86-32（i386）指令系统的实现
　
　
　
　
5

任务三（PA3）：存储管理
　
　
　
　
4

总计：
　
　
　
　
11天（1.5周）


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例
考核成绩由以下部分组成：
1) 系统设计与实现：50%
其中，任务一（10%）、任务二（20%）、任务三（20%）
2) 实践报告：      20%
3) 答辩：          30%

2. 课程目标达成考核与评价方式及成绩评定
课程目标
支撑毕业要求
考核内容
成绩比例（%）
课程目标1
支撑毕业要求3.3
系统设计与实现
20
答辩
10
课程目标2
支撑毕业要求4.3
系统设计与实现
20
实践报告
10
答辩
15
课程目标3
支撑毕业要求7.2
系统设计与实现
10
实践报告
5
课程目标4
支撑毕业要求12.2
实践报告
5
答辩
5
合计
100

3. 考核与评价标准
得分项
满分
要求
得分标准
优秀
良好
及格
不及格
系统设计与实现
50
原创，基本无抄袭，
代码无误、结果正确、描述简单清晰
45-50
40-44
30-39

30分以下
实验报告的完整性及丰富性
20
内容丰富，阐述详细，流程图清晰明了，能客观进行结果分析
18-20
14-17
12-13
12分以下
答辩情况
30
讲解清楚，有理有据，能准确流利回答问题
28-30
24-27
18-23
18分以下































《计算机系统综合实践》实践报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告摘要
概述本次实验需要完成的计算机系统设计过程中的任务，并对具体解决方案及实验结果进行概要介绍。

二、 任务分析
详细介绍需要解决的复杂机器学习工程问题。

三、 方案设计
提出自己的解决方案，以流程图、伪代码等方式描述相应的设计思路，给出具体的编程实现方案。

"
2440072,"
本课程是集中实践类课程。学生在大一学习了“计算机系统基础”课程基础之上，将通过高级语言构建一台支持x86-32指令集架构的完整虚拟计算机系统。学生通过建立一个完整的计算机系统层次结构框架将所涉及的硬件和软件基本概念关联起来，从而实现深入理解计算机系统的全貌和相关软硬件知识体系，理解计算机系统中每一个抽象层次及相互转换关系，建立计算机软硬件协同工作的概念。最终，锻炼学生的计算机系统思维，培养学生的计算机系统能力。

","
1. 采用基于软件模拟的方式，综合利用在程序设计原理、数据结构、计算机系统基础等课程中学习到理论知识开发基于x86-32指令集的虚拟计算机系统，锻炼学生的计算思维能力和系统能力；使其掌握计算机系统各抽象层次之间的逻辑关系和转换机理，建立完整计算机系统的软件和硬件之间的关联关系和软硬件协同工作的概念。（支撑毕业要求3.3）
2. 能够针对计算机系统设计中存在的数据处理、存储等问题设计并建立合理的仿真模型，通过对仿真模拟结果进行归纳、分析等提出计算机系统软硬件设计方案，并分析其合理性和有效性。（支撑毕业要求4.3）

3. 能够将计算机系统设计这一复杂工程问题有效分解为独立功能模块，选用合适的软件及系统工具完成模块的开发、仿真和验证；熟练掌握Linux系统下对大型软件项目进行管理、开发和编译的常用方法及工具。
4. 在计算机系统人软硬件设计过程，能够熟练阅读有关指令集架构、存储管理、GNU GCC工具链等方面的官方英文使用手册或文档，并能针对手册中涉及的技术问题与同组人员展开讨论以寻求最终解决方案。

四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3. 设计/开发解决方案
3.3能够在集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题。
M（0.2）
1
4. 问题分析
4.3能够对复杂计算机工程问题的数学模型进行求解，分析结果的合理性、验证结构的有效性。
H（0.3）
2
7. 使用现代化工具
7.2能够针对复杂计算机工程问题选用或开发合适的软硬件工具，通过实验进行预测和模拟，并理解其适用范围
M（0.2）
3
12. 沟通
12.2能够使用一门外语针对专业问题和同行进行沟通和交流，具有跨语种、跨文化的交流和学习能力以及国际视野。
M（0.4）
4

五、基本要求
本课程是“计算机系统基础”的后续课程，是计算机科学与技术专业（腾讯实验班）的集中实践课程。该课程通过设计一台x86-32虚拟计算机系统（复杂工程问题）帮助学生建立计算机系统的全貌和相关软硬件知识体系，深入理解计算机系统各抽象层次之间的关联关系。
在开展课程设计的过程中，学生需要时刻注意站在系统的高度理解程序在编译、加载、执行过程中各个软硬件层次是如何协同工作的。了解程序运行的每个阶段是由硬件处理、软件处理还是软硬件协同处理。
通过该课程设计，以常见计算机系统为对象，采用高级语言进行计算机系统建模、设计、仿真和分析的训练，培养学生的文献检索、系统设计、实验数据的综合和分析报告撰写、沟通交流等多方面的能力。

六、本课程中的复杂工程问题定义
本课程围绕的复杂工程问题不是一个计算机应用问题，而是有关计算机系统基础软硬件设计的问题。学生将通过高级语言建模的方式实现一台基于x86 32位指令集的功能较完备的计算机软硬件系统。学生在实践过程中将涉及对指令集体系结构、Cache存储系统、虚拟存储系统、I/O系统、数据结构等知识的综合利用，以及熟练使用各类Linux系统工具。只有对计算机系统软硬件协同运行机理有较充分的认识，才能顺利完成3个实践任务。

七、课程教学方法
本课程将采用线上线下混合教学方法。教师凝练先修理论课程的知识点，并结合实践过程中的重点和难点提前录制若干微视频，按照任务顺序上传至“智慧树”平台。学生根据任务的进展情况，观看微视频，完成相应的实践任务。再见面课的过程中，师生主要针对实践任务实施过程中遇到的问题和困难展开讨论，教师可结合学生问题对计算机系统设计过程中的理论知识和技术要点进行进一步的拓展，加深学生对计算机内部软硬件运行机理的认识，锻炼学生的系统思维，强化其系统能力，提升其自主学习能力。

八、教学内容
本集中实践需要学生采用C语言完成一台基于x86-32指令集的虚拟计算机系统（NEMU）的建模与仿真，整个设计由3部分任务（PA1~PA3）组成。
任务一（PA1）：简易调试器的设计与实现
熟悉NEMU虚拟计算机系统的工作原理和整个代码框架；实现通用寄存器堆并完成验证；设计简易调试器为后续开发提供基本调试工具的支持，调试器具备单步、断点、检测点、表达式计算等基本功能。
任务二（PA2）：x86-32（i386）指令系统的实现
了解i386指令系统的基本概念和框架；实现对常见i386指令的支持；对程序加载功能进行建模；进一步扩展简易调试器的功能；理解ELF文件结构和对应的数据结构，实现对程序头表、符号表的解析。
任务三（PA3）：存储管理
理解NEMU的存储管理机制，完成Cache存储系统的建模；理解x86-32的段页式虚拟存储系统工作原理，实现段页式虚拟存储器的建模。
教学模式：分组进行集中实践；分组撰写实验报告，分组汇报并答辩。
能力：在系统层面上掌握程序执行过程中计算机系统的各层次软硬件协同工作与转换原理；掌握Linux下的程序开发和项目管理方法；掌握如何结合实践内容，参考技术手册，撰写一份专业的实践报告。
知识点：综合运用所学相关知识进行计算机系统设计。

九、学时分配
教学内容
授课
实验
自学
课程设计
实践（天）
其他
任务一（PA1）：简易调试器的设计与实现
　
　
　
　
2

任务二（PA2）：x86-32（i386）指令系统的实现
　
　
　
　
5

任务三（PA3）：存储管理
　
　
　
　
4

总计：
　
　
　
　
11天（1.5周）


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例
考核成绩由以下部分组成：
1) 系统设计与实现：50%
其中，任务一（10%）、任务二（20%）、任务三（20%）
2) 实践报告：      20%
3) 答辩：          30%

2. 课程目标达成考核与评价方式及成绩评定
课程目标
支撑毕业要求
考核内容
成绩比例（%）
课程目标1
支撑毕业要求3.3
系统设计与实现
20
答辩
10
课程目标2
支撑毕业要求4.3
系统设计与实现
20
实践报告
10
答辩
15
课程目标3
支撑毕业要求7.2
系统设计与实现
10
实践报告
5
课程目标4
支撑毕业要求12.2
实践报告
5
答辩
5
合计
100

3. 考核与评价标准
得分项
满分
要求
得分标准
优秀
良好
及格
不及格
系统设计与实现
50
原创，基本无抄袭，
代码无误、结果正确、描述简单清晰
45-50
40-44
30-39

30分以下
实验报告的完整性及丰富性
20
内容丰富，阐述详细，流程图清晰明了，能客观进行结果分析
18-20
14-17
12-13
12分以下
答辩情况
30
讲解清楚，有理有据，能准确流利回答问题
28-30
24-27
18-23
18分以下































《计算机系统综合实践》实践报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告摘要
概述本次实验需要完成的计算机系统设计过程中的任务，并对具体解决方案及实验结果进行概要介绍。

二、 任务分析
详细介绍需要解决的复杂机器学习工程问题。

三、 方案设计
提出自己的解决方案，以流程图、伪代码等方式描述相应的设计思路，给出具体的编程实现方案。

"
2440072,"
本课程是集中实践类课程。学生在大一学习了“计算机系统基础”课程基础之上，将通过高级语言构建一台支持x86-32指令集架构的完整虚拟计算机系统。学生通过建立一个完整的计算机系统层次结构框架将所涉及的硬件和软件基本概念关联起来，从而实现深入理解计算机系统的全貌和相关软硬件知识体系，理解计算机系统中每一个抽象层次及相互转换关系，建立计算机软硬件协同工作的概念。最终，锻炼学生的计算机系统思维，培养学生的计算机系统能力。

","
1. 采用基于软件模拟的方式，综合利用在程序设计原理、数据结构、计算机系统基础等课程中学习到理论知识开发基于x86-32指令集的虚拟计算机系统，锻炼学生的计算思维能力和系统能力；使其掌握计算机系统各抽象层次之间的逻辑关系和转换机理，建立完整计算机系统的软件和硬件之间的关联关系和软硬件协同工作的概念。（支撑毕业要求3.3）
2. 能够针对计算机系统设计中存在的数据处理、存储等问题设计并建立合理的仿真模型，通过对仿真模拟结果进行归纳、分析等提出计算机系统软硬件设计方案，并分析其合理性和有效性。（支撑毕业要求4.3）

3. 能够将计算机系统设计这一复杂工程问题有效分解为独立功能模块，选用合适的软件及系统工具完成模块的开发、仿真和验证；熟练掌握Linux系统下对大型软件项目进行管理、开发和编译的常用方法及工具。
4. 在计算机系统人软硬件设计过程，能够熟练阅读有关指令集架构、存储管理、GNU GCC工具链等方面的官方英文使用手册或文档，并能针对手册中涉及的技术问题与同组人员展开讨论以寻求最终解决方案。

四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3. 设计/开发解决方案
3.3能够在集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题。
M（0.2）
1
4. 问题分析
4.3能够对复杂计算机工程问题的数学模型进行求解，分析结果的合理性、验证结构的有效性。
H（0.3）
2
7. 使用现代化工具
7.2能够针对复杂计算机工程问题选用或开发合适的软硬件工具，通过实验进行预测和模拟，并理解其适用范围
M（0.2）
3
12. 沟通
12.2能够使用一门外语针对专业问题和同行进行沟通和交流，具有跨语种、跨文化的交流和学习能力以及国际视野。
M（0.4）
4

五、基本要求
本课程是“计算机系统基础”的后续课程，是计算机科学与技术专业（腾讯实验班）的集中实践课程。该课程通过设计一台x86-32虚拟计算机系统（复杂工程问题）帮助学生建立计算机系统的全貌和相关软硬件知识体系，深入理解计算机系统各抽象层次之间的关联关系。
在开展课程设计的过程中，学生需要时刻注意站在系统的高度理解程序在编译、加载、执行过程中各个软硬件层次是如何协同工作的。了解程序运行的每个阶段是由硬件处理、软件处理还是软硬件协同处理。
通过该课程设计，以常见计算机系统为对象，采用高级语言进行计算机系统建模、设计、仿真和分析的训练，培养学生的文献检索、系统设计、实验数据的综合和分析报告撰写、沟通交流等多方面的能力。

六、本课程中的复杂工程问题定义
本课程围绕的复杂工程问题不是一个计算机应用问题，而是有关计算机系统基础软硬件设计的问题。学生将通过高级语言建模的方式实现一台基于x86 32位指令集的功能较完备的计算机软硬件系统。学生在实践过程中将涉及对指令集体系结构、Cache存储系统、虚拟存储系统、I/O系统、数据结构等知识的综合利用，以及熟练使用各类Linux系统工具。只有对计算机系统软硬件协同运行机理有较充分的认识，才能顺利完成3个实践任务。

七、课程教学方法
本课程将采用线上线下混合教学方法。教师凝练先修理论课程的知识点，并结合实践过程中的重点和难点提前录制若干微视频，按照任务顺序上传至“智慧树”平台。学生根据任务的进展情况，观看微视频，完成相应的实践任务。再见面课的过程中，师生主要针对实践任务实施过程中遇到的问题和困难展开讨论，教师可结合学生问题对计算机系统设计过程中的理论知识和技术要点进行进一步的拓展，加深学生对计算机内部软硬件运行机理的认识，锻炼学生的系统思维，强化其系统能力，提升其自主学习能力。

八、教学内容
本集中实践需要学生采用C语言完成一台基于x86-32指令集的虚拟计算机系统（NEMU）的建模与仿真，整个设计由3部分任务（PA1~PA3）组成。
任务一（PA1）：简易调试器的设计与实现
熟悉NEMU虚拟计算机系统的工作原理和整个代码框架；实现通用寄存器堆并完成验证；设计简易调试器为后续开发提供基本调试工具的支持，调试器具备单步、断点、检测点、表达式计算等基本功能。
任务二（PA2）：x86-32（i386）指令系统的实现
了解i386指令系统的基本概念和框架；实现对常见i386指令的支持；对程序加载功能进行建模；进一步扩展简易调试器的功能；理解ELF文件结构和对应的数据结构，实现对程序头表、符号表的解析。
任务三（PA3）：存储管理
理解NEMU的存储管理机制，完成Cache存储系统的建模；理解x86-32的段页式虚拟存储系统工作原理，实现段页式虚拟存储器的建模。
教学模式：分组进行集中实践；分组撰写实验报告，分组汇报并答辩。
能力：在系统层面上掌握程序执行过程中计算机系统的各层次软硬件协同工作与转换原理；掌握Linux下的程序开发和项目管理方法；掌握如何结合实践内容，参考技术手册，撰写一份专业的实践报告。
知识点：综合运用所学相关知识进行计算机系统设计。

九、学时分配
教学内容
授课
实验
自学
课程设计
实践（天）
其他
任务一（PA1）：简易调试器的设计与实现
　
　
　
　
2

任务二（PA2）：x86-32（i386）指令系统的实现
　
　
　
　
5

任务三（PA3）：存储管理
　
　
　
　
4

总计：
　
　
　
　
11天（1.5周）


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例
考核成绩由以下部分组成：
1) 系统设计与实现：50%
其中，任务一（10%）、任务二（20%）、任务三（20%）
2) 实践报告：      20%
3) 答辩：          30%

2. 课程目标达成考核与评价方式及成绩评定
课程目标
支撑毕业要求
考核内容
成绩比例（%）
课程目标1
支撑毕业要求3.3
系统设计与实现
20
答辩
10
课程目标2
支撑毕业要求4.3
系统设计与实现
20
实践报告
10
答辩
15
课程目标3
支撑毕业要求7.2
系统设计与实现
10
实践报告
5
课程目标4
支撑毕业要求12.2
实践报告
5
答辩
5
合计
100

3. 考核与评价标准
得分项
满分
要求
得分标准
优秀
良好
及格
不及格
系统设计与实现
50
原创，基本无抄袭，
代码无误、结果正确、描述简单清晰
45-50
40-44
30-39

30分以下
实验报告的完整性及丰富性
20
内容丰富，阐述详细，流程图清晰明了，能客观进行结果分析
18-20
14-17
12-13
12分以下
答辩情况
30
讲解清楚，有理有据，能准确流利回答问题
28-30
24-27
18-23
18分以下































《计算机系统综合实践》实践报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告摘要
概述本次实验需要完成的计算机系统设计过程中的任务，并对具体解决方案及实验结果进行概要介绍。

二、 任务分析
详细介绍需要解决的复杂机器学习工程问题。

三、 方案设计
提出自己的解决方案，以流程图、伪代码等方式描述相应的设计思路，给出具体的编程实现方案。

"
2440072,"
本课程是集中实践类课程。学生在大一学习了“计算机系统基础”课程基础之上，将通过高级语言构建一台支持x86-32指令集架构的完整虚拟计算机系统。学生通过建立一个完整的计算机系统层次结构框架将所涉及的硬件和软件基本概念关联起来，从而实现深入理解计算机系统的全貌和相关软硬件知识体系，理解计算机系统中每一个抽象层次及相互转换关系，建立计算机软硬件协同工作的概念。最终，锻炼学生的计算机系统思维，培养学生的计算机系统能力。

","
1. 采用基于软件模拟的方式，综合利用在程序设计原理、数据结构、计算机系统基础等课程中学习到理论知识开发基于x86-32指令集的虚拟计算机系统，锻炼学生的计算思维能力和系统能力；使其掌握计算机系统各抽象层次之间的逻辑关系和转换机理，建立完整计算机系统的软件和硬件之间的关联关系和软硬件协同工作的概念。（支撑毕业要求3.3）
2. 能够针对计算机系统设计中存在的数据处理、存储等问题设计并建立合理的仿真模型，通过对仿真模拟结果进行归纳、分析等提出计算机系统软硬件设计方案，并分析其合理性和有效性。（支撑毕业要求4.3）

3. 能够将计算机系统设计这一复杂工程问题有效分解为独立功能模块，选用合适的软件及系统工具完成模块的开发、仿真和验证；熟练掌握Linux系统下对大型软件项目进行管理、开发和编译的常用方法及工具。
4. 在计算机系统人软硬件设计过程，能够熟练阅读有关指令集架构、存储管理、GNU GCC工具链等方面的官方英文使用手册或文档，并能针对手册中涉及的技术问题与同组人员展开讨论以寻求最终解决方案。

四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3. 设计/开发解决方案
3.3能够在集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题。
M（0.2）
1
4. 问题分析
4.3能够对复杂计算机工程问题的数学模型进行求解，分析结果的合理性、验证结构的有效性。
H（0.3）
2
7. 使用现代化工具
7.2能够针对复杂计算机工程问题选用或开发合适的软硬件工具，通过实验进行预测和模拟，并理解其适用范围
M（0.2）
3
12. 沟通
12.2能够使用一门外语针对专业问题和同行进行沟通和交流，具有跨语种、跨文化的交流和学习能力以及国际视野。
M（0.4）
4

五、基本要求
本课程是“计算机系统基础”的后续课程，是计算机科学与技术专业（腾讯实验班）的集中实践课程。该课程通过设计一台x86-32虚拟计算机系统（复杂工程问题）帮助学生建立计算机系统的全貌和相关软硬件知识体系，深入理解计算机系统各抽象层次之间的关联关系。
在开展课程设计的过程中，学生需要时刻注意站在系统的高度理解程序在编译、加载、执行过程中各个软硬件层次是如何协同工作的。了解程序运行的每个阶段是由硬件处理、软件处理还是软硬件协同处理。
通过该课程设计，以常见计算机系统为对象，采用高级语言进行计算机系统建模、设计、仿真和分析的训练，培养学生的文献检索、系统设计、实验数据的综合和分析报告撰写、沟通交流等多方面的能力。

六、本课程中的复杂工程问题定义
本课程围绕的复杂工程问题不是一个计算机应用问题，而是有关计算机系统基础软硬件设计的问题。学生将通过高级语言建模的方式实现一台基于x86 32位指令集的功能较完备的计算机软硬件系统。学生在实践过程中将涉及对指令集体系结构、Cache存储系统、虚拟存储系统、I/O系统、数据结构等知识的综合利用，以及熟练使用各类Linux系统工具。只有对计算机系统软硬件协同运行机理有较充分的认识，才能顺利完成3个实践任务。

七、课程教学方法
本课程将采用线上线下混合教学方法。教师凝练先修理论课程的知识点，并结合实践过程中的重点和难点提前录制若干微视频，按照任务顺序上传至“智慧树”平台。学生根据任务的进展情况，观看微视频，完成相应的实践任务。再见面课的过程中，师生主要针对实践任务实施过程中遇到的问题和困难展开讨论，教师可结合学生问题对计算机系统设计过程中的理论知识和技术要点进行进一步的拓展，加深学生对计算机内部软硬件运行机理的认识，锻炼学生的系统思维，强化其系统能力，提升其自主学习能力。

八、教学内容
本集中实践需要学生采用C语言完成一台基于x86-32指令集的虚拟计算机系统（NEMU）的建模与仿真，整个设计由3部分任务（PA1~PA3）组成。
任务一（PA1）：简易调试器的设计与实现
熟悉NEMU虚拟计算机系统的工作原理和整个代码框架；实现通用寄存器堆并完成验证；设计简易调试器为后续开发提供基本调试工具的支持，调试器具备单步、断点、检测点、表达式计算等基本功能。
任务二（PA2）：x86-32（i386）指令系统的实现
了解i386指令系统的基本概念和框架；实现对常见i386指令的支持；对程序加载功能进行建模；进一步扩展简易调试器的功能；理解ELF文件结构和对应的数据结构，实现对程序头表、符号表的解析。
任务三（PA3）：存储管理
理解NEMU的存储管理机制，完成Cache存储系统的建模；理解x86-32的段页式虚拟存储系统工作原理，实现段页式虚拟存储器的建模。
教学模式：分组进行集中实践；分组撰写实验报告，分组汇报并答辩。
能力：在系统层面上掌握程序执行过程中计算机系统的各层次软硬件协同工作与转换原理；掌握Linux下的程序开发和项目管理方法；掌握如何结合实践内容，参考技术手册，撰写一份专业的实践报告。
知识点：综合运用所学相关知识进行计算机系统设计。

九、学时分配
教学内容
授课
实验
自学
课程设计
实践（天）
其他
任务一（PA1）：简易调试器的设计与实现
　
　
　
　
2

任务二（PA2）：x86-32（i386）指令系统的实现
　
　
　
　
5

任务三（PA3）：存储管理
　
　
　
　
4

总计：
　
　
　
　
11天（1.5周）


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例
考核成绩由以下部分组成：
1) 系统设计与实现：50%
其中，任务一（10%）、任务二（20%）、任务三（20%）
2) 实践报告：      20%
3) 答辩：          30%

2. 课程目标达成考核与评价方式及成绩评定
课程目标
支撑毕业要求
考核内容
成绩比例（%）
课程目标1
支撑毕业要求3.3
系统设计与实现
20
答辩
10
课程目标2
支撑毕业要求4.3
系统设计与实现
20
实践报告
10
答辩
15
课程目标3
支撑毕业要求7.2
系统设计与实现
10
实践报告
5
课程目标4
支撑毕业要求12.2
实践报告
5
答辩
5
合计
100

3. 考核与评价标准
得分项
满分
要求
得分标准
优秀
良好
及格
不及格
系统设计与实现
50
原创，基本无抄袭，
代码无误、结果正确、描述简单清晰
45-50
40-44
30-39

30分以下
实验报告的完整性及丰富性
20
内容丰富，阐述详细，流程图清晰明了，能客观进行结果分析
18-20
14-17
12-13
12分以下
答辩情况
30
讲解清楚，有理有据，能准确流利回答问题
28-30
24-27
18-23
18分以下































《计算机系统综合实践》实践报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告摘要
概述本次实验需要完成的计算机系统设计过程中的任务，并对具体解决方案及实验结果进行概要介绍。

二、 任务分析
详细介绍需要解决的复杂机器学习工程问题。

三、 方案设计
提出自己的解决方案，以流程图、伪代码等方式描述相应的设计思路，给出具体的编程实现方案。

"
2440072,"
本课程是集中实践类课程。学生在大一学习了“计算机系统基础”课程基础之上，将通过高级语言构建一台支持x86-32指令集架构的完整虚拟计算机系统。学生通过建立一个完整的计算机系统层次结构框架将所涉及的硬件和软件基本概念关联起来，从而实现深入理解计算机系统的全貌和相关软硬件知识体系，理解计算机系统中每一个抽象层次及相互转换关系，建立计算机软硬件协同工作的概念。最终，锻炼学生的计算机系统思维，培养学生的计算机系统能力。

","
1. 采用基于软件模拟的方式，综合利用在程序设计原理、数据结构、计算机系统基础等课程中学习到理论知识开发基于x86-32指令集的虚拟计算机系统，锻炼学生的计算思维能力和系统能力；使其掌握计算机系统各抽象层次之间的逻辑关系和转换机理，建立完整计算机系统的软件和硬件之间的关联关系和软硬件协同工作的概念。（支撑毕业要求3.3）
2. 能够针对计算机系统设计中存在的数据处理、存储等问题设计并建立合理的仿真模型，通过对仿真模拟结果进行归纳、分析等提出计算机系统软硬件设计方案，并分析其合理性和有效性。（支撑毕业要求4.3）

3. 能够将计算机系统设计这一复杂工程问题有效分解为独立功能模块，选用合适的软件及系统工具完成模块的开发、仿真和验证；熟练掌握Linux系统下对大型软件项目进行管理、开发和编译的常用方法及工具。
4. 在计算机系统人软硬件设计过程，能够熟练阅读有关指令集架构、存储管理、GNU GCC工具链等方面的官方英文使用手册或文档，并能针对手册中涉及的技术问题与同组人员展开讨论以寻求最终解决方案。

四、课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3. 设计/开发解决方案
3.3能够在集中实践、实习实训、毕业设计等教学环节中，应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题。
M（0.2）
1
4. 问题分析
4.3能够对复杂计算机工程问题的数学模型进行求解，分析结果的合理性、验证结构的有效性。
H（0.3）
2
7. 使用现代化工具
7.2能够针对复杂计算机工程问题选用或开发合适的软硬件工具，通过实验进行预测和模拟，并理解其适用范围
M（0.2）
3
12. 沟通
12.2能够使用一门外语针对专业问题和同行进行沟通和交流，具有跨语种、跨文化的交流和学习能力以及国际视野。
M（0.4）
4

五、基本要求
本课程是“计算机系统基础”的后续课程，是计算机科学与技术专业（腾讯实验班）的集中实践课程。该课程通过设计一台x86-32虚拟计算机系统（复杂工程问题）帮助学生建立计算机系统的全貌和相关软硬件知识体系，深入理解计算机系统各抽象层次之间的关联关系。
在开展课程设计的过程中，学生需要时刻注意站在系统的高度理解程序在编译、加载、执行过程中各个软硬件层次是如何协同工作的。了解程序运行的每个阶段是由硬件处理、软件处理还是软硬件协同处理。
通过该课程设计，以常见计算机系统为对象，采用高级语言进行计算机系统建模、设计、仿真和分析的训练，培养学生的文献检索、系统设计、实验数据的综合和分析报告撰写、沟通交流等多方面的能力。

六、本课程中的复杂工程问题定义
本课程围绕的复杂工程问题不是一个计算机应用问题，而是有关计算机系统基础软硬件设计的问题。学生将通过高级语言建模的方式实现一台基于x86 32位指令集的功能较完备的计算机软硬件系统。学生在实践过程中将涉及对指令集体系结构、Cache存储系统、虚拟存储系统、I/O系统、数据结构等知识的综合利用，以及熟练使用各类Linux系统工具。只有对计算机系统软硬件协同运行机理有较充分的认识，才能顺利完成3个实践任务。

七、课程教学方法
本课程将采用线上线下混合教学方法。教师凝练先修理论课程的知识点，并结合实践过程中的重点和难点提前录制若干微视频，按照任务顺序上传至“智慧树”平台。学生根据任务的进展情况，观看微视频，完成相应的实践任务。再见面课的过程中，师生主要针对实践任务实施过程中遇到的问题和困难展开讨论，教师可结合学生问题对计算机系统设计过程中的理论知识和技术要点进行进一步的拓展，加深学生对计算机内部软硬件运行机理的认识，锻炼学生的系统思维，强化其系统能力，提升其自主学习能力。

八、教学内容
本集中实践需要学生采用C语言完成一台基于x86-32指令集的虚拟计算机系统（NEMU）的建模与仿真，整个设计由3部分任务（PA1~PA3）组成。
任务一（PA1）：简易调试器的设计与实现
熟悉NEMU虚拟计算机系统的工作原理和整个代码框架；实现通用寄存器堆并完成验证；设计简易调试器为后续开发提供基本调试工具的支持，调试器具备单步、断点、检测点、表达式计算等基本功能。
任务二（PA2）：x86-32（i386）指令系统的实现
了解i386指令系统的基本概念和框架；实现对常见i386指令的支持；对程序加载功能进行建模；进一步扩展简易调试器的功能；理解ELF文件结构和对应的数据结构，实现对程序头表、符号表的解析。
任务三（PA3）：存储管理
理解NEMU的存储管理机制，完成Cache存储系统的建模；理解x86-32的段页式虚拟存储系统工作原理，实现段页式虚拟存储器的建模。
教学模式：分组进行集中实践；分组撰写实验报告，分组汇报并答辩。
能力：在系统层面上掌握程序执行过程中计算机系统的各层次软硬件协同工作与转换原理；掌握Linux下的程序开发和项目管理方法；掌握如何结合实践内容，参考技术手册，撰写一份专业的实践报告。
知识点：综合运用所学相关知识进行计算机系统设计。

九、学时分配
教学内容
授课
实验
自学
课程设计
实践（天）
其他
任务一（PA1）：简易调试器的设计与实现
　
　
　
　
2

任务二（PA2）：x86-32（i386）指令系统的实现
　
　
　
　
5

任务三（PA3）：存储管理
　
　
　
　
4

总计：
　
　
　
　
11天（1.5周）


十、考核与评价方式及标准
1. 考核与评价内容、方法、成绩比例
考核成绩由以下部分组成：
1) 系统设计与实现：50%
其中，任务一（10%）、任务二（20%）、任务三（20%）
2) 实践报告：      20%
3) 答辩：          30%

2. 课程目标达成考核与评价方式及成绩评定
课程目标
支撑毕业要求
考核内容
成绩比例（%）
课程目标1
支撑毕业要求3.3
系统设计与实现
20
答辩
10
课程目标2
支撑毕业要求4.3
系统设计与实现
20
实践报告
10
答辩
15
课程目标3
支撑毕业要求7.2
系统设计与实现
10
实践报告
5
课程目标4
支撑毕业要求12.2
实践报告
5
答辩
5
合计
100

3. 考核与评价标准
得分项
满分
要求
得分标准
优秀
良好
及格
不及格
系统设计与实现
50
原创，基本无抄袭，
代码无误、结果正确、描述简单清晰
45-50
40-44
30-39

30分以下
实验报告的完整性及丰富性
20
内容丰富，阐述详细，流程图清晰明了，能客观进行结果分析
18-20
14-17
12-13
12分以下
答辩情况
30
讲解清楚，有理有据，能准确流利回答问题
28-30
24-27
18-23
18分以下































《计算机系统综合实践》实践报告




题目名称

学    号             
姓    名             
邮    箱             
学    院             
专    业             
年    级             
任课教师             

年   月   日

一、 报告摘要
概述本次实验需要完成的计算机系统设计过程中的任务，并对具体解决方案及实验结果进行概要介绍。

二、 任务分析
详细介绍需要解决的复杂机器学习工程问题。

三、 方案设计
提出自己的解决方案，以流程图、伪代码等方式描述相应的设计思路，给出具体的编程实现方案。

"
2440073,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
“数据仓库与数据挖掘”是软件工程专业的一本比较重要的专业选修课。这门课主要讲述如何从大量的数据中获得有用的知识的一些基本概念以及相关的技术。通过课程的学习，学生不仅能对数据挖掘的相关概念有清楚的认识，而且对于数据挖掘重要的三个任务：频繁模式挖掘、分类和聚类的相关技术能够依托某种编程语言或平台灵活运用。相应算法的主要思想也有清楚的认识。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。
1． 了解数据挖掘与数据仓库的基本概念，掌握不同类型的数据挖掘算法在实际应用中的主要用途和使用方法。（支撑毕业要求1、2、5、6）
2． 针对实际的数据挖掘任务，能够准确的选取数据挖掘算法，能够对实际问题进行高度的抽象，形式化实际任务描述的具体问题的核心内涵。（支撑毕业要求3）
3． 熟悉关联分析、分类和聚类等数据挖掘算法和主要建模思想，能够使用常见的编程语言或平台设计与开发具体的解决方案解决实际问题。（支撑毕业要求9）
4． 能够理解数据挖掘算法的主要建模思想和内在本质，针对实际问题能够提出改进方案。（支撑毕业要求10）
5． 理解数据挖掘的发展历程和前沿技术的思想基础。（支撑毕业要求12）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√


√
√






课程目标2


√









课程目标3








√



课程目标4









√


课程目标5











√

四、基本要求
课程授课采用计算机多媒体形式，辅以电子教案与电子书。准确认识数据挖掘的基本概念，并在实验环节能对概念和算法应用到实际数据问题中。理论知识与实际实践相结合，这两方面相互促进，加强对知识点的认知。并能熟悉应用本门课程相关的软件和算法。

五、教学内容
1、授课与自学
1 引论
1.1 简介数据挖掘的提出、基本概念的形成
1.2 数据挖掘的发展与分类
1.3 十大数据挖掘流行算法
1.4 数据挖掘的相关会议和期刊简介
本章重点：了解数据挖掘的基本概念与全貌
难点：搞清什么是数据挖掘,并不是所有对数据的操作都是数据挖掘技术
教学模式：依托课本进行课堂授课、指导课后的复习及学生查阅相关文献。
知识点：数据挖掘提出的动机、数据挖掘的基本概念、数据挖掘的分类、数据挖掘的主要算法、主要能解决的问题、相关的会议及期刊列表。
能力要求：能够理解数据挖掘的基本概念；并能对数据挖掘算法和解决的问题进行准确的分类，如预测法与描述法；有监督学习与无监督学习等。知晓最流行的10大数据挖掘算法。
2 认识数据
2.1 数据对象与属性类型：属性、离散属性与连续属性
2.2 数据的基本统计描述：中心趋势度量、度量数据散布、数据的基本统计描述的图形显示
2.3 度量数据的相似性和相异性：数据矩阵与相异性矩阵、离散属性与连续属性的邻近性度量、混合类型属性的相异性度量
本章重点：了解数据的相关特性及相似性度量
难点：数据属性的辨别、混合类型属性的相异性度量
教学模式：课堂授课、课后完成作业一，加强对数据特性及其相似性度量的认识和具体的计算方法。
知识点：数据对象与属性、二元属性、标称属性、序数属性、数值属性、均值、方差、中位数、众数、极差、四分位数、方差、标准差、四分位数极差、分位数图、盒图等图形显示、不同属性的判别及相似性度量、混合属性的相似性度量
能力要求：能够理解知识点的基本概念、并对数据的属性有准确的判别；能对不同属性计算其统计特性，并能利用图形化方式显示；能对数据进行相似性度量计算
3 数据预处理
3.1 数据预处理概述：数据质量、数据预处理的主要任务
3.2 数据清理：缺失值、噪声数据、数据清理作为一个过程
3.3 数据集成：实体识别问题、冗余和相关分析、元组重复、数据值冲突的检测与处理
3.4 数据归约：数据归约策略概述、属性子集选择、直方图、抽样
3.5 数据变换与数据离散化：数据变换策略概述、规范化、分箱离散化、直方图离散化、标称数据的概念分层产生
本章重点：数据预处理的主要任务、主要策略及具体的处理方法
难点：数据预处理任务的判断及算法的选择
教学模式：课堂授课、课后加强对相关概念的理解。最后能够利用算法完成数据预处理
知识点：数据清理、数据集成、数据归约、数据变换与数据离散化
能力要求：能够理解数据预处理的四大主要任务，并能采用相应的方法对各种任务进行处理和分析。
4 挖掘频繁模式、关联和相关性：基本概念和方法
4.1 基本概念：购物篮分析、频繁项集、闭项集和关联规则
4.2 频繁项集挖掘方法：Apriori算法、频繁项集、关联规则、垂直数据格式挖掘
4.3 模式评价：强规则、有趣的规则、关联分析到相关分析、模式评估度量比较
本章重点：Apriori算法
难点：Apriori算法的数学特点及其具体的算法实现
教学模式：课堂授课、通过图表的方式细致的展示Apriori算法的实现过程及步骤，课后学生查阅相关文献，完成作业二。
知识点：频繁项集、规则、强规则、支持度、置信度、提升度
能力要求：能够判断数据挖掘任务是否为频繁模式挖掘，并能利用Apriori方法完成该任务。
5 分类：基本概念
5.1 基本概念：分类、分类的一般方法
5.2 决策树归纳：决策树归纳、属性选择度量
5.3 支持向量机算法简介
5.4 最近邻方法简介
5.4 模型评估与选择：评估分类器性能的度量、保持方法和随机二次抽样、交叉验证
本章重点：分类的基本概念及决策树算法
难点：三种不同的决策树算法的主要思想及其对应的指标
教学模式：课堂授课、课后查阅相关文献加深认识。
知识点：分类、分类的两步法、根节点、叶节点、节点、ID3算法、C4.5算法、CART算法、准确度评价指标
能力要求：能够准确认识分类的基本概念，了解决策树的主要思想及三种算法对应指标的特性。并能引用现有的算法平台完成算法的实现。
6 聚类分析：基本概念和方法
6.1 聚类分析：基本概念、聚类分析的要求、概述
6.2 k-均值聚类
6.3 k-中心值聚类
6.4 聚类评估：估计聚类趋势、确定簇数
本章重点：聚类的基本概念及方法
难点：k-均值聚类的主要步骤
教学模式：课堂授课、课后学生查阅相关文献复习，在实验课上完成该方法的程序编写及调试，准确并深入认识该算法。
知识点：类类距离、类间距离、聚类的主要思想、聚类的几种典型类型、k-均值算法主要指标、步骤、聚类的评价。
能力要求：能够准确认识聚类的基本概念并能完成k-均值算法的设计与代码的编写。
2、实验教学
实验教学内容：
实验一、k-均值算法代码的编写和调试
实验二、完成某数据的分类任务
实验三、完成某数据的聚类任务
实验"
,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
“数据仓库与数据挖掘”是软件工程专业的一本比较重要的专业选修课。这门课主要讲述如何从大量的数据中获得有用的知识的一些基本概念以及相关的技术。通过课程的学习，学生不仅能对数据挖掘的相关概念有清楚的认识，而且对于数据挖掘重要的三个任务：频繁模式挖掘、分类和聚类的相关技术能够依托某种编程语言或平台灵活运用。相应算法的主要思想也有清楚的认识。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。
1． 了解数据挖掘与数据仓库的基本概念，掌握不同类型的数据挖掘算法在实际应用中的主要用途和使用方法。（支撑毕业要求1、2、5、6）
2． 针对实际的数据挖掘任务，能够准确的选取数据挖掘算法，能够对实际问题进行高度的抽象，形式化实际任务描述的具体问题的核心内涵。（支撑毕业要求3）
3． 熟悉关联分析、分类和聚类等数据挖掘算法和主要建模思想，能够使用常见的编程语言或平台设计与开发具体的解决方案解决实际问题。（支撑毕业要求9）
4． 能够理解数据挖掘算法的主要建模思想和内在本质，针对实际问题能够提出改进方案。（支撑毕业要求10）
5． 理解数据挖掘的发展历程和前沿技术的思想基础。（支撑毕业要求12）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√


√
√






课程目标2


√









课程目标3








√



课程目标4









√


课程目标5











√

四、基本要求
课程授课采用计算机多媒体形式，辅以电子教案与电子书。准确认识数据挖掘的基本概念，并在实验环节能对概念和算法应用到实际数据问题中。理论知识与实际实践相结合，这两方面相互促进，加强对知识点的认知。并能熟悉应用本门课程相关的软件和算法。

五、教学内容
1、授课与自学
1 引论
1.1 简介数据挖掘的提出、基本概念的形成
1.2 数据挖掘的发展与分类
1.3 十大数据挖掘流行算法
1.4 数据挖掘的相关会议和期刊简介
本章重点：了解数据挖掘的基本概念与全貌
难点：搞清什么是数据挖掘,并不是所有对数据的操作都是数据挖掘技术
教学模式：依托课本进行课堂授课、指导课后的复习及学生查阅相关文献。
知识点：数据挖掘提出的动机、数据挖掘的基本概念、数据挖掘的分类、数据挖掘的主要算法、主要能解决的问题、相关的会议及期刊列表。
能力要求：能够理解数据挖掘的基本概念；并能对数据挖掘算法和解决的问题进行准确的分类，如预测法与描述法；有监督学习与无监督学习等。知晓最流行的10大数据挖掘算法。
2 认识数据
2.1 数据对象与属性类型：属性、离散属性与连续属性
2.2 数据的基本统计描述：中心趋势度量、度量数据散布、数据的基本统计描述的图形显示
2.3 度量数据的相似性和相异性：数据矩阵与相异性矩阵、离散属性与连续属性的邻近性度量、混合类型属性的相异性度量
本章重点：了解数据的相关特性及相似性度量
难点：数据属性的辨别、混合类型属性的相异性度量
教学模式：课堂授课、课后完成作业一，加强对数据特性及其相似性度量的认识和具体的计算方法。
知识点：数据对象与属性、二元属性、标称属性、序数属性、数值属性、均值、方差、中位数、众数、极差、四分位数、方差、标准差、四分位数极差、分位数图、盒图等图形显示、不同属性的判别及相似性度量、混合属性的相似性度量
能力要求：能够理解知识点的基本概念、并对数据的属性有准确的判别；能对不同属性计算其统计特性，并能利用图形化方式显示；能对数据进行相似性度量计算
3 数据预处理
3.1 数据预处理概述：数据质量、数据预处理的主要任务
3.2 数据清理：缺失值、噪声数据、数据清理作为一个过程
3.3 数据集成：实体识别问题、冗余和相关分析、元组重复、数据值冲突的检测与处理
3.4 数据归约：数据归约策略概述、属性子集选择、直方图、抽样
3.5 数据变换与数据离散化：数据变换策略概述、规范化、分箱离散化、直方图离散化、标称数据的概念分层产生
本章重点：数据预处理的主要任务、主要策略及具体的处理方法
难点：数据预处理任务的判断及算法的选择
教学模式：课堂授课、课后加强对相关概念的理解。最后能够利用算法完成数据预处理
知识点：数据清理、数据集成、数据归约、数据变换与数据离散化
能力要求：能够理解数据预处理的四大主要任务，并能采用相应的方法对各种任务进行处理和分析。
4 挖掘频繁模式、关联和相关性：基本概念和方法
4.1 基本概念：购物篮分析、频繁项集、闭项集和关联规则
4.2 频繁项集挖掘方法：Apriori算法、频繁项集、关联规则、垂直数据格式挖掘
4.3 模式评价：强规则、有趣的规则、关联分析到相关分析、模式评估度量比较
本章重点：Apriori算法
难点：Apriori算法的数学特点及其具体的算法实现
教学模式：课堂授课、通过图表的方式细致的展示Apriori算法的实现过程及步骤，课后学生查阅相关文献，完成作业二。
知识点：频繁项集、规则、强规则、支持度、置信度、提升度
能力要求：能够判断数据挖掘任务是否为频繁模式挖掘，并能利用Apriori方法完成该任务。
5 分类：基本概念
5.1 基本概念：分类、分类的一般方法
5.2 决策树归纳：决策树归纳、属性选择度量
5.3 支持向量机算法简介
5.4 最近邻方法简介
5.4 模型评估与选择：评估分类器性能的度量、保持方法和随机二次抽样、交叉验证
本章重点：分类的基本概念及决策树算法
难点：三种不同的决策树算法的主要思想及其对应的指标
教学模式：课堂授课、课后查阅相关文献加深认识。
知识点：分类、分类的两步法、根节点、叶节点、节点、ID3算法、C4.5算法、CART算法、准确度评价指标
能力要求：能够准确认识分类的基本概念，了解决策树的主要思想及三种算法对应指标的特性。并能引用现有的算法平台完成算法的实现。
6 聚类分析：基本概念和方法
6.1 聚类分析：基本概念、聚类分析的要求、概述
6.2 k-均值聚类
6.3 k-中心值聚类
6.4 聚类评估：估计聚类趋势、确定簇数
本章重点：聚类的基本概念及方法
难点：k-均值聚类的主要步骤
教学模式：课堂授课、课后学生查阅相关文献复习，在实验课上完成该方法的程序编写及调试，准确并深入认识该算法。
知识点：类类距离、类间距离、聚类的主要思想、聚类的几种典型类型、k-均值算法主要指标、步骤、聚类的评价。
能力要求：能够准确认识聚类的基本概念并能完成k-均值算法的设计与代码的编写。
2、实验教学
实验教学内容：
实验一、k-均值算法代码的编写和调试
实验二、完成某数据的分类任务
实验三、完成某数据的聚类任务
实验"
2440074,"
计算机图形学是利用计算机研究图形的表示、生成、处理和显示的一门重要的计算机学科分支，本课程着重计算机图形生成的基本概念、基本原理和基本技术。本课程使得学生对计算机图形学具备基本认识，作为后续学习基础。

","
通过计算机图形学课程的学习，使得学生了解及掌握计算机图形学技术基础知识、以及基本图形编程。
课程目标1：使得学生了解和掌握计算机图形技术的基本原理和基本概念。

课程目标2：使得学生了解和掌握利用OpenGL等标准图形函数库进行基本图形编程。


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√










课程目标2










√


"
2440075,"
本课程是软件学院软件工程专业必修专业课。本课程从编译原理的基础知识入手，通过编译系统实现技术强化对编译理论的认识。本课程全面分析编译器这一软件系统的基本概念、基本原理、基本结构和基本算法，使学生全面掌握编译原理和技术，并能够动手开发一个简单的编译器。
","
1．	了解编译器设计技术的由来以及编译原理在计算机技术中的地位，掌握编译原理的基本概念，掌握编译器各个不同阶段的功能。熟悉编译原理的基本方法和工程知识，能够使用常见的编程思想实现编译的各个过程。能够应用编译器的逻辑结构和实现结构思考和解决一些实际问题，并在解决问题过程中锻炼计算思维能力和系统能力（支撑毕业要求5.1）
2．	学会自动机理论的基本原理和相应算法，对应问题具有抽象能力并为其涉及的自动生成的思想设计相应的程序结构，初步建立系统化、规范化的编译器设计思想。可以查阅和参考开源框架描述文档，评估给定的翻译/编译问题，选择合适的框架和编译方案，评估方案的合理性和有效性。（支撑毕业要求5.1）
3．	在编译原理基本算法的基础上, 重点关注编译器的实现的方法和框架，结合应用实际，对制定的问题解决方案，利用编译原理讲授的算法编码解决问题。掌握编译器的自动生成工具，并能熟练应用，对于过程中遇到的问题，能够清晰明确的表达，并通过互联网等现代化工具解决。针对不同的语言的特性，思考潜在的改进算法（如在存储和优化等方面），设计并实现特定语言的编译器。（支撑毕业要求5.2）
课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
设计/开发解决方案
5.1能够分析 软件工程领域相关应用或基础技术的特定需求，确定具体的研发目标 能根据目标选取恰当的技术与设计流程，并确定系统、模块或流程的研发方案，体现创新意识。

M(0.1)
1，2
5.2能够在社会、安全、环境等现实因素的约束下对研究方案的可行性进行评价 。
H(0.4)
3

本课程中的复杂工程问题定义
1、编译器的设计本身就是一个复杂系统的设计问题，需要最终提供一个完整的解决方案。有机的结合算法、软件体系结构和软件工程的各种理论，对棘手问题给出综合性的解决方案。
2、好的编译器是计算机科学的缩影，其包含大量的技术，比如，贪婪算法（寄存器分配）、启发式搜索技术（列表调度）、图形算法（死码消除）、动态规划（指令筛选）、有穷自动机和下推自动机（扫描和语法分析）、不动点算法（数据流分析）；也会处理复杂的问题，比如，动态分配、同步、命名、局部化、存储器分层管理、管道调度等。
"
2440075,"
本课程是计算机科学与技术学院计算机科学系必修专业课。本课程从软件系统的观点出发研究编译技术的原理，全面分析编译器这一软件系统的基本概念、基本原理、基本结构和基本算法。本课程力求充实反映编译技术和自动机理论的研究成果，使学生全面掌握编译原理和技术，并具备一定并行编译的基础。
","
1．	了解编译器设计技术的由来以及编译原理在计算机技术中的地位，掌握编译原理的基本概念，掌握编译器各个不同阶段的功能。熟悉编译原理的基本方法和工程知识，能够使用常见的编程思想实现编译的各个过程。能够应用编译器的逻辑结构和实现结构思考和解决一些实际问题，并在解决问题过程中锻炼计算思维能力和系统能力（支撑毕业要求1-2）
2．	学会自动机理论的基本原理和相应算法，对应问题具有抽象能力并为其涉及的自动生成的思想涉及相应的程序结构，初步建立系统化、规范化的编译器设计思想。掌握编译器的自动生成工具，并能熟练应用，对于过程中遇到的问题，能够清晰明确的表达和叙述，并通过互联网等现代化工具解决。（支撑毕业要求2-2、2-3）
3．	通过对问题的分析求解，利用已有知识逐步分解复杂工程问题，解决关键核心问题，并构建运行时的存储分配方案，设计开发针对问题的整体解决方案。训练团队合作和沟通能力，培养想好的计算机职业道德规范，具有良好的社会责任感。（支撑毕业要求3-1）

"
2440075,"
本课程是计算机科学与技术学院计算机科学系必修专业课。本课程从软件系统的观点出发研究编译技术的原理，全面分析编译器这一软件系统的基本概念、基本原理、基本结构和基本算法。本课程力求充实反映编译技术和自动机理论的研究成果，使学生全面掌握编译原理和技术，并具备一定并行编译的基础。
","
1．	了解编译器设计技术的由来以及编译原理在计算机技术中的地位，掌握编译原理的基本概念，掌握编译器各个不同阶段的功能。熟悉编译原理的基本方法和工程知识，能够使用常见的编程思想实现编译的各个过程。能够应用编译器的逻辑结构和实现结构思考和解决一些实际问题，并在解决问题过程中锻炼计算思维能力和系统能力（支撑毕业要求1-2）
2．	学会自动机理论的基本原理和相应算法，对应问题具有抽象能力并为其涉及的自动生成的思想涉及相应的程序结构，初步建立系统化、规范化的编译器设计思想。掌握编译器的自动生成工具，并能熟练应用，对于过程中遇到的问题，能够清晰明确的表达和叙述，并通过互联网等现代化工具解决。（支撑毕业要求2-2、2-3）
3．	通过对问题的分析求解，利用已有知识逐步分解复杂工程问题，解决关键核心问题，并构建运行时的存储分配方案，设计开发针对问题的整体解决方案。训练团队合作和沟通能力，培养想好的计算机职业道德规范，具有良好的社会责任感。（支撑毕业要求3-1）

"
2440075,"
本课程是计算机科学与技术学院计算机科学系必修专业课。本课程从软件系统的观点出发研究编译技术的原理，全面分析编译器这一软件系统的基本概念、基本原理、基本结构和基本算法。本课程力求充实反映编译技术和自动机理论的研究成果，使学生全面掌握编译原理和技术，并具备一定并行编译的基础。
","
1．	了解编译器设计技术的由来以及编译原理在计算机技术中的地位，掌握编译原理的基本概念，掌握编译器各个不同阶段的功能。熟悉编译原理的基本方法和工程知识，能够使用常见的编程思想实现编译的各个过程。能够应用编译器的逻辑结构和实现结构思考和解决一些实际问题，并在解决问题过程中锻炼计算思维能力和系统能力（支撑毕业要求1-2）
2．	学会自动机理论的基本原理和相应算法，对应问题具有抽象能力并为其涉及的自动生成的思想涉及相应的程序结构，初步建立系统化、规范化的编译器设计思想。掌握编译器的自动生成工具，并能熟练应用，对于过程中遇到的问题，能够清晰明确的表达和叙述，并通过互联网等现代化工具解决。（支撑毕业要求2-2、2-3）
3．	通过对问题的分析求解，利用已有知识逐步分解复杂工程问题，解决关键核心问题，并构建运行时的存储分配方案，设计开发针对问题的整体解决方案。训练团队合作和沟通能力，培养想好的计算机职业道德规范，具有良好的社会责任感。（支撑毕业要求3-1）

"
2440075,"
本课程是计算机科学与技术学院计算机科学系必修专业课。本课程从软件系统的观点出发研究编译技术的原理，全面分析编译器这一软件系统的基本概念、基本原理、基本结构和基本算法。本课程力求充实反映编译技术和自动机理论的研究成果，使学生全面掌握编译原理和技术，并具备一定并行编译的基础。
","
1．	了解编译器设计技术的由来以及编译原理在计算机技术中的地位，掌握编译原理的基本概念，掌握编译器各个不同阶段的功能。熟悉编译原理的基本方法和工程知识，能够使用常见的编程思想实现编译的各个过程。能够应用编译器的逻辑结构和实现结构思考和解决一些实际问题，并在解决问题过程中锻炼计算思维能力和系统能力（支撑毕业要求1-2）
2．	学会自动机理论的基本原理和相应算法，对应问题具有抽象能力并为其涉及的自动生成的思想涉及相应的程序结构，初步建立系统化、规范化的编译器设计思想。掌握编译器的自动生成工具，并能熟练应用，对于过程中遇到的问题，能够清晰明确的表达和叙述，并通过互联网等现代化工具解决。（支撑毕业要求2-2、2-3）
3．	通过对问题的分析求解，利用已有知识逐步分解复杂工程问题，解决关键核心问题，并构建运行时的存储分配方案，设计开发针对问题的整体解决方案。训练团队合作和沟通能力，培养想好的计算机职业道德规范，具有良好的社会责任感。（支撑毕业要求3-1）

"
2440076,"
《网络协议分析与设计》课程是网络空间安全方向专业选修课程。本课程主要介绍计算机网络中各类协议的设计理念、实现技术与性能分析方法，并通过实验掌握计算机网络协议的基本实现技术。通过本课程学习，使学生掌握TCP/IP各层相关协议设计的基本原理和方法，为今后计算机网络及网络空间安全等进一步学习和研究打下基础。
","
1. 了解计算机网络协议的基本概念，能够融合思维，通过网络协议在实际应用中的用途和使用方法探索网络协议本质联系和规律。（支撑毕业要求2）
2. 熟悉网络各层常用协议的主要特点，能够使用编程语言初步实现常用网络协议，通过网络协议设计实验并解决实际生活中的问题。（支撑毕业要求3、4）
3. 能够收集和处理网络原始数据，分析网络协议，挖掘网络协议存在的缺陷及漏洞，通过综合分析得到协议改进方法。（支撑毕业要求6）
4. 对于学习和实验中遇到的问题，能够清晰明确地表达和陈述，并通过互联网等现代化工具解决。（支撑毕业要求7）
5. 培养良好的计算机、软件工程师的职业道德规范，具有良好的社会责任感。（支撑毕业要求10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
13
14
课程目标1

√












课程目标2


√
√










课程目标3





√








课程目标4






√







课程目标5









√




"
2440077,"
《项目制实践1》课程是面向本科三年级学生的有关大数据智能软件设计与开发的课程，实施项目制教学，培养学生综合运用前沿的数学工具、智能方法、软件技术及交叉学科知识构建大数据软件与系统，研究和解决真实的社会问题。授课内容包括工程师责任与义务、项目设计思想与流程、项目工程化设计开发与软件工具使用、项目管理技术和工程伦理。实践围绕一个项目的构思、设计、实现与运行全过程。通过课程教学，使学生掌握面向真实社会问题的大数据分析方法与智能软件设计开发的基本知识，培养学生对大数据智能软件设计开发全过程的认知、实践和总结交流能力，培养工程师基本素质。
课程开设将学习并对标 Olin-College的Data Science课程（http://www.olin.edu/）。
2020年1月远程协作研发上线的疫情防控大数据智能分析平台（http://tjubd216.cn/virus/）给国家部委、天津市部门与公众提供智能分析服务，获得认可，该平台有2018级三位同学、2017级5位同学参与开发， 为本课程开设提供有益尝试。

","
课程目标1：了解智慧社会与风险社会的基本概念、特征、机遇与挑战，及其在国家战略与建设中的角色和重要性，了解国际、国家、省域、地市、县域、社区等不同尺度面临的风险，了解风险社会中的大数据应用场景，了解社会计算及风险计算的基本概念，了解社会、行为与心理的基本概念及其与智能方法的交叉应用，了解数据、算法、场景等大数据智能三要素。
课程目标2：掌握软件工程的基本概念、基本原理、开发软件项目的工程化方法和技术及在开发过程中应遵循的流程、准则、标准和规范等，实践软件项目工程开发全生命周期， 培养定义问题和解决问题的能力
课程目标3：掌握数据爬虫与预处理的工作原理；掌握信息抽取、文本分类聚类、信息检索等技术；熟练掌握大数据分析基本方法，包括统计分析、聚类、分类、相关规则、回归分析等；熟练掌握大数据可视化基本方法，包括对地理空间数据、社会网络关系、多维数据进行可视化；
课程目标4：培养学生团队协作、合作学习的能力，工程文档规范化编制的能力，以及用书面、口头和形象化手段进行有效交流沟通的能力。
课程目标5：了解项目管理及工程伦理的基本知识，掌握思维导图、UML、软件项目管理等工具的使用，了解大数据技术在社会场景中的应用途径与社会经济效益，能够综合考虑社会、健康、安全、法律、文化以及环境等因素。


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√








课程目标2



√








课程目标3


√

√
√






课程目标4



√


√
√




课程目标5








√



（注意：课程目标不一定与毕业要求一一对应）
"
2440078,,"（此项涉及达成度计算，目标条目数不能修改，需要修改内容）
四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
五、本课程中的复杂工程问题定义（此项为新增）
六、课程教学方法
增加修改履历，作为持续改进的历史记录，今后大纲修改需要一直持续记录下去。

一、 课程基本信息
	课程代码：2440078
	课程名称：操作系统原理
	学时/学分：56/ 3
	学时分配：		授课： 40       	上机：16
实验：           	实践：
		    实践（周数）：
	适用专业：计算机科学与技术、软件工程、网络安全、人工智能
	授课学院：智能与计算学部
	先修课程：程序设计原理、数据结构、计算机系统基础
	同修课程：
	教材及主要参考书：
1. 《现代操作系统（原书第四版）》，[荷] Andrew S.Tanenbaum 著；陈向群，马洪兵 等 译，机械工业出版社，2017-07
2. 《操作系统概念(第7版)》(翻译版)， Abraham Silberschatz, Peter B. Galvin, Greg Gagne著，郑扣根 译，高等教育出版社，2018
参考资料：
1. 《UNIX环境高级编程（第3版）》，[美] W. Richard Stevens，[美] Stephen A. Rago 著；戚正伟，张亚英，尤晋元 译，人民邮电出版社，2014
2. 《Linux操作系统应用与开发教程》，邱铁，清华大学出版社，2016.
3. 天津大学“操作系统”慕课资源
二、 课程简介
	“操作系统原理”是计算机科学与技术/软件工程/网络安全/人工智能专业的一门重要的专业基础必修课。这门课主要讲述影响设计计算机系统中最基本的系统软件——操作系统的各种因素及实际操作。通过课程的学习，学生不仅了解操作系统的使用（外部特性），更了解它的设计和实现（内部特性），掌握其工作原理。而且从课程中，可以学到许多软件设计的思想和技术方法，用于计算机的相关领域，如并发程序设计、算法设计与实现、虚拟环境的创建、安全及网络管理等。
三、 课程目标
1. 了解操作系统的发展历史和分类，了解操作系统在计算机系统中的地位和作用，掌握常用的处理机调度和进程及线程管理的基本技术，掌握进程间通信的方法和解决进程及线程间的竞争问题，了解死锁形成的主要原因和解决方法，掌握内存管理的基本方法和虚拟内存管理技术，掌握数据在外部设备上存储和管理的主要方法，了解设备的使用原理。能够应用这些知识和技术按照解决问题的标准过程解决一些已知的实际问题并在解决问题过程中锻炼计算思维能力和系统能力。（支撑毕业要求3.2）
2. 对于操作系统中复杂工程问题能够通过深入研究发现问题的本质，对该类型的问题共性加以归纳和总结，并能够灵活熟练的运用数学和自然科学的基本原理及方法，对该类问题的本质加以清晰的描述。（支撑毕业要求4.1）
3. 能够对复杂操作系统问题的数学模型进行求解，如死锁的建模、进程和作业的调度算法、页面置换算法的优劣等，分析结果的合理性、验证结果的有效性。（支撑毕业要求4.3）

四、 课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3.工程知识
3.2掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力。
M(0.1)
1
4.问题分析
4.1 能够运用数学、自然科学的基本原理及方法识别、表达相关软件工程问题。
H(0.3)
2
4.3 能够对复杂软件工程问题的数学模型进行求解，分析结果的合理性、验证结果的有效性。
M(0.1)
3
五、 本课程中的复杂工程问题定义
1. 操作系统在计算机系统的大局观。解决操作系统如何全面管理计算机的软硬件资源，以及如何向用户提供良好易用的使用接口的问题。对于一个实际应用问题因为相关联的外部环境因素较多，如计算资源、成本、问题规模等，没有一个绝对好的或者有效的解决方法。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的解决方法。
2. 对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能力，如计算机系统结构等。尤其是计算机软硬件技术飞速发展的现在，操作系统要解决如何适应新产品、新技术和新思想的挑战，也在要新环境，如越来越多的虚拟机环境下起到承上启下的重要作用。要适应在多处理器、多核处理器、并行计算领域、移动及嵌入式领域和实时等场合下对操作系统的不同需求。
六、 课程教学方法
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
七、 教学内容
1、授课与自学
1、操作系统概述
什么是操作系统；操作系统历史及分类；计算机软硬件系统；操作系统结构。 
本章重点：操作系统的历史和分类
难点：各种软件授权方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：UNIX操作系统的历史，GPL等软件授权方式，操作系统分类。
能力要求：能够理解操作系统的分类；能够在实际工作学习中选择合适的操作系统；能够理解软件授权、如GPL、MIT、Apache等，评价软件对社会、健康、安全、法律以及文化的影响，理解应承担的责任。

2、Unix/Linux基础
基本概念、文件与权限、进程与shell、程序开发基础、内核基本结构
本章重点：进程与shell
难点：内核基本结构
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：文件的概念与使用，进程的概念与管理、shell的使用
能力要求：能够理解文件和进程的概念，能够使用shell管理文件和目录，查看和管理进程。

3、进程与线程，死锁
进程、线程、进程间通信、调度、死锁；具体实现方案
本章重点：进程与线程的概念、互斥与同步、死锁
难点：信号量与PV原语
教学模式：课堂授课、课后复习，指导学生查阅相关文献，根据系统调用接口编写操作进程和线程应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：进程、线程、调度、竞争条件、死锁
能力要求：能够理解进程与线程；能够解决竞争条件问题；能够将进程管理的知识用于解决复杂工程问题。

4、内存管理
基本管理、交换、虚拟内存、页面交换算法、分段管理；具体实现方案
本章重点：内存分层结构、分页式内存管理方式
难点：段页式内存管理方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献，理解实现方法，完成基本原理的习题。
知识点：内存分层金字塔模型，分区式、分页式、分段式和段页式内存管理，页面置换算法。
能力要求：能够理解虚拟内存的管理方法；能够将虚拟内存管理的知识用于解决复杂工程问题。

5、文件系统
文件与目录、文件系统；具体实现方案
本章重点：用户管理与权限
难点：文件权限
教学模式：根据系统调用接口编写文件系统应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：文件、文件系统、存储设备、备份恢复
能力要求：能够理解文件、文件系统和存储设备的工作方式；能够将文件管理的知识用于解决复杂工程问题。

6、输入输出设备
I/O硬件、I/O软件、磁盘等块设备、字符设备等；具体实现方案
本章重点：中断与DMA
难点：设备驱动模块的加载机制
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：缓冲区，中断与DMA、设备驱动
能力要求：能够理解设备的管理方法；能够将设备管理的知识用于解决复杂工程问题。
2、上机/实验
	实验一、UNIX/Linux基本命令实验
	实验二、UNIX/Linux环境下Shell基础编程实验
	实验三、操作系统进程创建及进程间通信实验
	实验"
2440078,,"（此项涉及达成度计算，目标条目数不能修改，需要修改内容）
四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
五、本课程中的复杂工程问题定义（此项为新增）
六、课程教学方法
增加修改履历，作为持续改进的历史记录，今后大纲修改需要一直持续记录下去。

一、 课程基本信息
	课程代码：2440078
	课程名称：操作系统原理
	学时/学分：56/ 3
	学时分配：		授课： 40       	上机：16
实验：           	实践：
		    实践（周数）：
	适用专业：计算机科学与技术、软件工程、网络安全、人工智能
	授课学院：智能与计算学部
	先修课程：程序设计原理、数据结构、计算机系统基础
	同修课程：
	教材及主要参考书：
1. 《现代操作系统（原书第四版）》，[荷] Andrew S.Tanenbaum 著；陈向群，马洪兵 等 译，机械工业出版社，2017-07
2. 《操作系统概念(第7版)》(翻译版)， Abraham Silberschatz, Peter B. Galvin, Greg Gagne著，郑扣根 译，高等教育出版社，2018
参考资料：
1. 《UNIX环境高级编程（第3版）》，[美] W. Richard Stevens，[美] Stephen A. Rago 著；戚正伟，张亚英，尤晋元 译，人民邮电出版社，2014
2. 《Linux操作系统应用与开发教程》，邱铁，清华大学出版社，2016.
3. 天津大学“操作系统”慕课资源
二、 课程简介
	“操作系统原理”是计算机科学与技术/软件工程/网络安全/人工智能专业的一门重要的专业基础必修课。这门课主要讲述影响设计计算机系统中最基本的系统软件——操作系统的各种因素及实际操作。通过课程的学习，学生不仅了解操作系统的使用（外部特性），更了解它的设计和实现（内部特性），掌握其工作原理。而且从课程中，可以学到许多软件设计的思想和技术方法，用于计算机的相关领域，如并发程序设计、算法设计与实现、虚拟环境的创建、安全及网络管理等。
三、 课程目标
1. 了解操作系统的发展历史和分类，了解操作系统在计算机系统中的地位和作用，掌握常用的处理机调度和进程及线程管理的基本技术，掌握进程间通信的方法和解决进程及线程间的竞争问题，了解死锁形成的主要原因和解决方法，掌握内存管理的基本方法和虚拟内存管理技术，掌握数据在外部设备上存储和管理的主要方法，了解设备的使用原理。能够应用这些知识和技术按照解决问题的标准过程解决一些已知的实际问题并在解决问题过程中锻炼计算思维能力和系统能力。（支撑毕业要求3.2）
2. 对于操作系统中复杂工程问题能够通过深入研究发现问题的本质，对该类型的问题共性加以归纳和总结，并能够灵活熟练的运用数学和自然科学的基本原理及方法，对该类问题的本质加以清晰的描述。（支撑毕业要求4.1）
3. 能够对复杂操作系统问题的数学模型进行求解，如死锁的建模、进程和作业的调度算法、页面置换算法的优劣等，分析结果的合理性、验证结果的有效性。（支撑毕业要求4.3）

四、 课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3.工程知识
3.2掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力。
M(0.1)
1
4.问题分析
4.1 能够运用数学、自然科学的基本原理及方法识别、表达相关软件工程问题。
H(0.3)
2
4.3 能够对复杂软件工程问题的数学模型进行求解，分析结果的合理性、验证结果的有效性。
M(0.1)
3
五、 本课程中的复杂工程问题定义
1. 操作系统在计算机系统的大局观。解决操作系统如何全面管理计算机的软硬件资源，以及如何向用户提供良好易用的使用接口的问题。对于一个实际应用问题因为相关联的外部环境因素较多，如计算资源、成本、问题规模等，没有一个绝对好的或者有效的解决方法。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的解决方法。
2. 对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能力，如计算机系统结构等。尤其是计算机软硬件技术飞速发展的现在，操作系统要解决如何适应新产品、新技术和新思想的挑战，也在要新环境，如越来越多的虚拟机环境下起到承上启下的重要作用。要适应在多处理器、多核处理器、并行计算领域、移动及嵌入式领域和实时等场合下对操作系统的不同需求。
六、 课程教学方法
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
七、 教学内容
1、授课与自学
1、操作系统概述
什么是操作系统；操作系统历史及分类；计算机软硬件系统；操作系统结构。 
本章重点：操作系统的历史和分类
难点：各种软件授权方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：UNIX操作系统的历史，GPL等软件授权方式，操作系统分类。
能力要求：能够理解操作系统的分类；能够在实际工作学习中选择合适的操作系统；能够理解软件授权、如GPL、MIT、Apache等，评价软件对社会、健康、安全、法律以及文化的影响，理解应承担的责任。

2、Unix/Linux基础
基本概念、文件与权限、进程与shell、程序开发基础、内核基本结构
本章重点：进程与shell
难点：内核基本结构
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：文件的概念与使用，进程的概念与管理、shell的使用
能力要求：能够理解文件和进程的概念，能够使用shell管理文件和目录，查看和管理进程。

3、进程与线程，死锁
进程、线程、进程间通信、调度、死锁；具体实现方案
本章重点：进程与线程的概念、互斥与同步、死锁
难点：信号量与PV原语
教学模式：课堂授课、课后复习，指导学生查阅相关文献，根据系统调用接口编写操作进程和线程应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：进程、线程、调度、竞争条件、死锁
能力要求：能够理解进程与线程；能够解决竞争条件问题；能够将进程管理的知识用于解决复杂工程问题。

4、内存管理
基本管理、交换、虚拟内存、页面交换算法、分段管理；具体实现方案
本章重点：内存分层结构、分页式内存管理方式
难点：段页式内存管理方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献，理解实现方法，完成基本原理的习题。
知识点：内存分层金字塔模型，分区式、分页式、分段式和段页式内存管理，页面置换算法。
能力要求：能够理解虚拟内存的管理方法；能够将虚拟内存管理的知识用于解决复杂工程问题。

5、文件系统
文件与目录、文件系统；具体实现方案
本章重点：用户管理与权限
难点：文件权限
教学模式：根据系统调用接口编写文件系统应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：文件、文件系统、存储设备、备份恢复
能力要求：能够理解文件、文件系统和存储设备的工作方式；能够将文件管理的知识用于解决复杂工程问题。

6、输入输出设备
I/O硬件、I/O软件、磁盘等块设备、字符设备等；具体实现方案
本章重点：中断与DMA
难点：设备驱动模块的加载机制
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：缓冲区，中断与DMA、设备驱动
能力要求：能够理解设备的管理方法；能够将设备管理的知识用于解决复杂工程问题。
2、上机/实验
	实验一、UNIX/Linux基本命令实验
	实验二、UNIX/Linux环境下Shell基础编程实验
	实验三、操作系统进程创建及进程间通信实验
	实验"
2440078,,"（此项涉及达成度计算，目标条目数不能修改，需要修改内容）
四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
五、本课程中的复杂工程问题定义（此项为新增）
六、课程教学方法
增加修改履历，作为持续改进的历史记录，今后大纲修改需要一直持续记录下去。

一、 课程基本信息
	课程代码：2440078
	课程名称：操作系统原理
	学时/学分：56/ 3
	学时分配：		授课： 40       	上机：16
实验：           	实践：
		    实践（周数）：
	适用专业：计算机科学与技术、软件工程、网络安全、人工智能
	授课学院：智能与计算学部
	先修课程：程序设计原理、数据结构、计算机系统基础
	同修课程：
	教材及主要参考书：
1. 《现代操作系统（原书第四版）》，[荷] Andrew S.Tanenbaum 著；陈向群，马洪兵 等 译，机械工业出版社，2017-07
2. 《操作系统概念(第7版)》(翻译版)， Abraham Silberschatz, Peter B. Galvin, Greg Gagne著，郑扣根 译，高等教育出版社，2018
参考资料：
1. 《UNIX环境高级编程（第3版）》，[美] W. Richard Stevens，[美] Stephen A. Rago 著；戚正伟，张亚英，尤晋元 译，人民邮电出版社，2014
2. 《Linux操作系统应用与开发教程》，邱铁，清华大学出版社，2016.
3. 天津大学“操作系统”慕课资源
二、 课程简介
	“操作系统原理”是计算机科学与技术/软件工程/网络安全/人工智能专业的一门重要的专业基础必修课。这门课主要讲述影响设计计算机系统中最基本的系统软件——操作系统的各种因素及实际操作。通过课程的学习，学生不仅了解操作系统的使用（外部特性），更了解它的设计和实现（内部特性），掌握其工作原理。而且从课程中，可以学到许多软件设计的思想和技术方法，用于计算机的相关领域，如并发程序设计、算法设计与实现、虚拟环境的创建、安全及网络管理等。
三、 课程目标
1. 了解操作系统的发展历史和分类，了解操作系统在计算机系统中的地位和作用，掌握常用的处理机调度和进程及线程管理的基本技术，掌握进程间通信的方法和解决进程及线程间的竞争问题，了解死锁形成的主要原因和解决方法，掌握内存管理的基本方法和虚拟内存管理技术，掌握数据在外部设备上存储和管理的主要方法，了解设备的使用原理。能够应用这些知识和技术按照解决问题的标准过程解决一些已知的实际问题并在解决问题过程中锻炼计算思维能力和系统能力。（支撑毕业要求3.2）
2. 对于操作系统中复杂工程问题能够通过深入研究发现问题的本质，对该类型的问题共性加以归纳和总结，并能够灵活熟练的运用数学和自然科学的基本原理及方法，对该类问题的本质加以清晰的描述。（支撑毕业要求4.1）
3. 能够对复杂操作系统问题的数学模型进行求解，如死锁的建模、进程和作业的调度算法、页面置换算法的优劣等，分析结果的合理性、验证结果的有效性。（支撑毕业要求4.3）

四、 课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3.工程知识
3.2掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力。
M(0.1)
1
4.问题分析
4.1 能够运用数学、自然科学的基本原理及方法识别、表达相关软件工程问题。
H(0.3)
2
4.3 能够对复杂软件工程问题的数学模型进行求解，分析结果的合理性、验证结果的有效性。
M(0.1)
3
五、 本课程中的复杂工程问题定义
1. 操作系统在计算机系统的大局观。解决操作系统如何全面管理计算机的软硬件资源，以及如何向用户提供良好易用的使用接口的问题。对于一个实际应用问题因为相关联的外部环境因素较多，如计算资源、成本、问题规模等，没有一个绝对好的或者有效的解决方法。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的解决方法。
2. 对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能力，如计算机系统结构等。尤其是计算机软硬件技术飞速发展的现在，操作系统要解决如何适应新产品、新技术和新思想的挑战，也在要新环境，如越来越多的虚拟机环境下起到承上启下的重要作用。要适应在多处理器、多核处理器、并行计算领域、移动及嵌入式领域和实时等场合下对操作系统的不同需求。
六、 课程教学方法
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
七、 教学内容
1、授课与自学
1、操作系统概述
什么是操作系统；操作系统历史及分类；计算机软硬件系统；操作系统结构。 
本章重点：操作系统的历史和分类
难点：各种软件授权方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：UNIX操作系统的历史，GPL等软件授权方式，操作系统分类。
能力要求：能够理解操作系统的分类；能够在实际工作学习中选择合适的操作系统；能够理解软件授权、如GPL、MIT、Apache等，评价软件对社会、健康、安全、法律以及文化的影响，理解应承担的责任。

2、Unix/Linux基础
基本概念、文件与权限、进程与shell、程序开发基础、内核基本结构
本章重点：进程与shell
难点：内核基本结构
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：文件的概念与使用，进程的概念与管理、shell的使用
能力要求：能够理解文件和进程的概念，能够使用shell管理文件和目录，查看和管理进程。

3、进程与线程，死锁
进程、线程、进程间通信、调度、死锁；具体实现方案
本章重点：进程与线程的概念、互斥与同步、死锁
难点：信号量与PV原语
教学模式：课堂授课、课后复习，指导学生查阅相关文献，根据系统调用接口编写操作进程和线程应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：进程、线程、调度、竞争条件、死锁
能力要求：能够理解进程与线程；能够解决竞争条件问题；能够将进程管理的知识用于解决复杂工程问题。

4、内存管理
基本管理、交换、虚拟内存、页面交换算法、分段管理；具体实现方案
本章重点：内存分层结构、分页式内存管理方式
难点：段页式内存管理方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献，理解实现方法，完成基本原理的习题。
知识点：内存分层金字塔模型，分区式、分页式、分段式和段页式内存管理，页面置换算法。
能力要求：能够理解虚拟内存的管理方法；能够将虚拟内存管理的知识用于解决复杂工程问题。

5、文件系统
文件与目录、文件系统；具体实现方案
本章重点：用户管理与权限
难点：文件权限
教学模式：根据系统调用接口编写文件系统应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：文件、文件系统、存储设备、备份恢复
能力要求：能够理解文件、文件系统和存储设备的工作方式；能够将文件管理的知识用于解决复杂工程问题。

6、输入输出设备
I/O硬件、I/O软件、磁盘等块设备、字符设备等；具体实现方案
本章重点：中断与DMA
难点：设备驱动模块的加载机制
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：缓冲区，中断与DMA、设备驱动
能力要求：能够理解设备的管理方法；能够将设备管理的知识用于解决复杂工程问题。
2、上机/实验
	实验一、UNIX/Linux基本命令实验
	实验二、UNIX/Linux环境下Shell基础编程实验
	实验三、操作系统进程创建及进程间通信实验
	实验"
2440078,,"（此项涉及达成度计算，目标条目数不能修改，需要修改内容）
四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
五、本课程中的复杂工程问题定义（此项为新增）
六、课程教学方法
增加修改履历，作为持续改进的历史记录，今后大纲修改需要一直持续记录下去。

一、 课程基本信息
	课程代码：2440078
	课程名称：操作系统原理
	学时/学分：56/ 3
	学时分配：		授课： 40       	上机：16
实验：           	实践：
		    实践（周数）：
	适用专业：计算机科学与技术、软件工程、网络安全、人工智能
	授课学院：智能与计算学部
	先修课程：程序设计原理、数据结构、计算机系统基础
	同修课程：
	教材及主要参考书：
1. 《现代操作系统（原书第四版）》，[荷] Andrew S.Tanenbaum 著；陈向群，马洪兵 等 译，机械工业出版社，2017-07
2. 《操作系统概念(第7版)》(翻译版)， Abraham Silberschatz, Peter B. Galvin, Greg Gagne著，郑扣根 译，高等教育出版社，2018
参考资料：
1. 《UNIX环境高级编程（第3版）》，[美] W. Richard Stevens，[美] Stephen A. Rago 著；戚正伟，张亚英，尤晋元 译，人民邮电出版社，2014
2. 《Linux操作系统应用与开发教程》，邱铁，清华大学出版社，2016.
3. 天津大学“操作系统”慕课资源
二、 课程简介
	“操作系统原理”是计算机科学与技术/软件工程/网络安全/人工智能专业的一门重要的专业基础必修课。这门课主要讲述影响设计计算机系统中最基本的系统软件——操作系统的各种因素及实际操作。通过课程的学习，学生不仅了解操作系统的使用（外部特性），更了解它的设计和实现（内部特性），掌握其工作原理。而且从课程中，可以学到许多软件设计的思想和技术方法，用于计算机的相关领域，如并发程序设计、算法设计与实现、虚拟环境的创建、安全及网络管理等。
三、 课程目标
1. 了解操作系统的发展历史和分类，了解操作系统在计算机系统中的地位和作用，掌握常用的处理机调度和进程及线程管理的基本技术，掌握进程间通信的方法和解决进程及线程间的竞争问题，了解死锁形成的主要原因和解决方法，掌握内存管理的基本方法和虚拟内存管理技术，掌握数据在外部设备上存储和管理的主要方法，了解设备的使用原理。能够应用这些知识和技术按照解决问题的标准过程解决一些已知的实际问题并在解决问题过程中锻炼计算思维能力和系统能力。（支撑毕业要求3.2）
2. 对于操作系统中复杂工程问题能够通过深入研究发现问题的本质，对该类型的问题共性加以归纳和总结，并能够灵活熟练的运用数学和自然科学的基本原理及方法，对该类问题的本质加以清晰的描述。（支撑毕业要求4.1）
3. 能够对复杂操作系统问题的数学模型进行求解，如死锁的建模、进程和作业的调度算法、页面置换算法的优劣等，分析结果的合理性、验证结果的有效性。（支撑毕业要求4.3）

四、 课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3.工程知识
3.2掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力。
M(0.1)
1
4.问题分析
4.1 能够运用数学、自然科学的基本原理及方法识别、表达相关软件工程问题。
H(0.3)
2
4.3 能够对复杂软件工程问题的数学模型进行求解，分析结果的合理性、验证结果的有效性。
M(0.1)
3
五、 本课程中的复杂工程问题定义
1. 操作系统在计算机系统的大局观。解决操作系统如何全面管理计算机的软硬件资源，以及如何向用户提供良好易用的使用接口的问题。对于一个实际应用问题因为相关联的外部环境因素较多，如计算资源、成本、问题规模等，没有一个绝对好的或者有效的解决方法。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的解决方法。
2. 对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能力，如计算机系统结构等。尤其是计算机软硬件技术飞速发展的现在，操作系统要解决如何适应新产品、新技术和新思想的挑战，也在要新环境，如越来越多的虚拟机环境下起到承上启下的重要作用。要适应在多处理器、多核处理器、并行计算领域、移动及嵌入式领域和实时等场合下对操作系统的不同需求。
六、 课程教学方法
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
七、 教学内容
1、授课与自学
1、操作系统概述
什么是操作系统；操作系统历史及分类；计算机软硬件系统；操作系统结构。 
本章重点：操作系统的历史和分类
难点：各种软件授权方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：UNIX操作系统的历史，GPL等软件授权方式，操作系统分类。
能力要求：能够理解操作系统的分类；能够在实际工作学习中选择合适的操作系统；能够理解软件授权、如GPL、MIT、Apache等，评价软件对社会、健康、安全、法律以及文化的影响，理解应承担的责任。

2、Unix/Linux基础
基本概念、文件与权限、进程与shell、程序开发基础、内核基本结构
本章重点：进程与shell
难点：内核基本结构
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：文件的概念与使用，进程的概念与管理、shell的使用
能力要求：能够理解文件和进程的概念，能够使用shell管理文件和目录，查看和管理进程。

3、进程与线程，死锁
进程、线程、进程间通信、调度、死锁；具体实现方案
本章重点：进程与线程的概念、互斥与同步、死锁
难点：信号量与PV原语
教学模式：课堂授课、课后复习，指导学生查阅相关文献，根据系统调用接口编写操作进程和线程应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：进程、线程、调度、竞争条件、死锁
能力要求：能够理解进程与线程；能够解决竞争条件问题；能够将进程管理的知识用于解决复杂工程问题。

4、内存管理
基本管理、交换、虚拟内存、页面交换算法、分段管理；具体实现方案
本章重点：内存分层结构、分页式内存管理方式
难点：段页式内存管理方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献，理解实现方法，完成基本原理的习题。
知识点：内存分层金字塔模型，分区式、分页式、分段式和段页式内存管理，页面置换算法。
能力要求：能够理解虚拟内存的管理方法；能够将虚拟内存管理的知识用于解决复杂工程问题。

5、文件系统
文件与目录、文件系统；具体实现方案
本章重点：用户管理与权限
难点：文件权限
教学模式：根据系统调用接口编写文件系统应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：文件、文件系统、存储设备、备份恢复
能力要求：能够理解文件、文件系统和存储设备的工作方式；能够将文件管理的知识用于解决复杂工程问题。

6、输入输出设备
I/O硬件、I/O软件、磁盘等块设备、字符设备等；具体实现方案
本章重点：中断与DMA
难点：设备驱动模块的加载机制
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：缓冲区，中断与DMA、设备驱动
能力要求：能够理解设备的管理方法；能够将设备管理的知识用于解决复杂工程问题。
2、上机/实验
	实验一、UNIX/Linux基本命令实验
	实验二、UNIX/Linux环境下Shell基础编程实验
	实验三、操作系统进程创建及进程间通信实验
	实验"
2440078,,"（此项涉及达成度计算，目标条目数不能修改，需要修改内容）
四、课程目标和毕业要求的对应关系（毕业要求指标点内容要使用最新版）
五、本课程中的复杂工程问题定义（此项为新增）
六、课程教学方法
增加修改履历，作为持续改进的历史记录，今后大纲修改需要一直持续记录下去。

一、 课程基本信息
	课程代码：2440078
	课程名称：操作系统原理
	学时/学分：56/ 3
	学时分配：		授课： 40       	上机：16
实验：           	实践：
		    实践（周数）：
	适用专业：计算机科学与技术、软件工程、网络安全、人工智能
	授课学院：智能与计算学部
	先修课程：程序设计原理、数据结构、计算机系统基础
	同修课程：
	教材及主要参考书：
1. 《现代操作系统（原书第四版）》，[荷] Andrew S.Tanenbaum 著；陈向群，马洪兵 等 译，机械工业出版社，2017-07
2. 《操作系统概念(第7版)》(翻译版)， Abraham Silberschatz, Peter B. Galvin, Greg Gagne著，郑扣根 译，高等教育出版社，2018
参考资料：
1. 《UNIX环境高级编程（第3版）》，[美] W. Richard Stevens，[美] Stephen A. Rago 著；戚正伟，张亚英，尤晋元 译，人民邮电出版社，2014
2. 《Linux操作系统应用与开发教程》，邱铁，清华大学出版社，2016.
3. 天津大学“操作系统”慕课资源
二、 课程简介
	“操作系统原理”是计算机科学与技术/软件工程/网络安全/人工智能专业的一门重要的专业基础必修课。这门课主要讲述影响设计计算机系统中最基本的系统软件——操作系统的各种因素及实际操作。通过课程的学习，学生不仅了解操作系统的使用（外部特性），更了解它的设计和实现（内部特性），掌握其工作原理。而且从课程中，可以学到许多软件设计的思想和技术方法，用于计算机的相关领域，如并发程序设计、算法设计与实现、虚拟环境的创建、安全及网络管理等。
三、 课程目标
1. 了解操作系统的发展历史和分类，了解操作系统在计算机系统中的地位和作用，掌握常用的处理机调度和进程及线程管理的基本技术，掌握进程间通信的方法和解决进程及线程间的竞争问题，了解死锁形成的主要原因和解决方法，掌握内存管理的基本方法和虚拟内存管理技术，掌握数据在外部设备上存储和管理的主要方法，了解设备的使用原理。能够应用这些知识和技术按照解决问题的标准过程解决一些已知的实际问题并在解决问题过程中锻炼计算思维能力和系统能力。（支撑毕业要求3.2）
2. 对于操作系统中复杂工程问题能够通过深入研究发现问题的本质，对该类型的问题共性加以归纳和总结，并能够灵活熟练的运用数学和自然科学的基本原理及方法，对该类问题的本质加以清晰的描述。（支撑毕业要求4.1）
3. 能够对复杂操作系统问题的数学模型进行求解，如死锁的建模、进程和作业的调度算法、页面置换算法的优劣等，分析结果的合理性、验证结果的有效性。（支撑毕业要求4.3）

四、 课程目标和毕业要求的对应关系
毕业要求
毕业要求指标点
支撑强度
课程目标
3.工程知识
3.2掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力。
M(0.1)
1
4.问题分析
4.1 能够运用数学、自然科学的基本原理及方法识别、表达相关软件工程问题。
H(0.3)
2
4.3 能够对复杂软件工程问题的数学模型进行求解，分析结果的合理性、验证结果的有效性。
M(0.1)
3
五、 本课程中的复杂工程问题定义
1. 操作系统在计算机系统的大局观。解决操作系统如何全面管理计算机的软硬件资源，以及如何向用户提供良好易用的使用接口的问题。对于一个实际应用问题因为相关联的外部环境因素较多，如计算资源、成本、问题规模等，没有一个绝对好的或者有效的解决方法。需要通过综合分析得到多个适用于不同条件的有效算法或者自行开发特定条件的解决方法。
2. 对于一个实际应用问题需要掌握多种计算机软硬件知识的综合运用能力，如计算机系统结构等。尤其是计算机软硬件技术飞速发展的现在，操作系统要解决如何适应新产品、新技术和新思想的挑战，也在要新环境，如越来越多的虚拟机环境下起到承上启下的重要作用。要适应在多处理器、多核处理器、并行计算领域、移动及嵌入式领域和实时等场合下对操作系统的不同需求。
六、 课程教学方法
课程授课采用计算机多媒体形式，辅以电子教案与电子书。教学强调理论学习与实践相结合，主张学生动手验证理论知识。使用计算机网络辅助教学，包括在线答疑、布置和批改作业及在线测试等。
七、 教学内容
1、授课与自学
1、操作系统概述
什么是操作系统；操作系统历史及分类；计算机软硬件系统；操作系统结构。 
本章重点：操作系统的历史和分类
难点：各种软件授权方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：UNIX操作系统的历史，GPL等软件授权方式，操作系统分类。
能力要求：能够理解操作系统的分类；能够在实际工作学习中选择合适的操作系统；能够理解软件授权、如GPL、MIT、Apache等，评价软件对社会、健康、安全、法律以及文化的影响，理解应承担的责任。

2、Unix/Linux基础
基本概念、文件与权限、进程与shell、程序开发基础、内核基本结构
本章重点：进程与shell
难点：内核基本结构
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：文件的概念与使用，进程的概念与管理、shell的使用
能力要求：能够理解文件和进程的概念，能够使用shell管理文件和目录，查看和管理进程。

3、进程与线程，死锁
进程、线程、进程间通信、调度、死锁；具体实现方案
本章重点：进程与线程的概念、互斥与同步、死锁
难点：信号量与PV原语
教学模式：课堂授课、课后复习，指导学生查阅相关文献，根据系统调用接口编写操作进程和线程应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：进程、线程、调度、竞争条件、死锁
能力要求：能够理解进程与线程；能够解决竞争条件问题；能够将进程管理的知识用于解决复杂工程问题。

4、内存管理
基本管理、交换、虚拟内存、页面交换算法、分段管理；具体实现方案
本章重点：内存分层结构、分页式内存管理方式
难点：段页式内存管理方式
教学模式：课堂授课、课后复习，指导学生查阅相关文献，理解实现方法，完成基本原理的习题。
知识点：内存分层金字塔模型，分区式、分页式、分段式和段页式内存管理，页面置换算法。
能力要求：能够理解虚拟内存的管理方法；能够将虚拟内存管理的知识用于解决复杂工程问题。

5、文件系统
文件与目录、文件系统；具体实现方案
本章重点：用户管理与权限
难点：文件权限
教学模式：根据系统调用接口编写文件系统应用程序，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：文件、文件系统、存储设备、备份恢复
能力要求：能够理解文件、文件系统和存储设备的工作方式；能够将文件管理的知识用于解决复杂工程问题。

6、输入输出设备
I/O硬件、I/O软件、磁盘等块设备、字符设备等；具体实现方案
本章重点：中断与DMA
难点：设备驱动模块的加载机制
教学模式：课堂授课、课后复习，指导学生查阅相关文献，阅读相关源代码以理解实现方法，完成基本原理的习题。
知识点：缓冲区，中断与DMA、设备驱动
能力要求：能够理解设备的管理方法；能够将设备管理的知识用于解决复杂工程问题。
2、上机/实验
	实验一、UNIX/Linux基本命令实验
	实验二、UNIX/Linux环境下Shell基础编程实验
	实验三、操作系统进程创建及进程间通信实验
	实验"
2440079,"
强化学习是一种重要的机器学习方法，在智能体及分析预测等领域有许多应用。本课程应用OpenAI Gym和TensorFlow精通强化学习和深度强化学习的概念，主要包括强化学习的各种要素，即智能体、环境、策略和模型以及相应平台和库；Anaconda、Docker、OpenAIGym、Universe和TensorFlow等安装配置；马尔可夫链和马尔可夫过程及其与强化学习问题建模之间的关系，动态规划的基本概念；蒙特卡罗方法以及不同类型的蒙特卡罗预测和控制方法；时间差分学习、预测、离线/在线策略控制等；多臂赌博机问题以及相关的各种探索策略方法；深度学习的各种基本概念和RNN、LSTM、CNN等神经网络；深度强化学习算法DQN，以及双DQN和对抗网络体系结构等改进架构；DRQN以及DARQN；A3C网络的基本工作原理及架构；策略梯度和优化问题；最后介绍了强化学习的全新进展以及未来发展。
","
1. 了解强化学习的发展历史和主要分类，能够选择适当的模型解决实际需求。（支撑毕业要求8）
2. 能够应用人工智能技术对生活、设计相关问题进行分析，并获得有效的解决方案。（支撑毕业要求4）
3. 能够智能体的设计理论，提出多种模型的设计方案，设计满足解决生产管理、行动通讯等问题的程序。（支撑毕业要求4）
4. 能够针对企業需求问题，理解不同的方案的区别，甄别实际内部的问题与需求并提出解决方案。（支撑毕业要求5）
5. 能够根据系统设计需求，进行团队合作，撰写深度学习系统，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1







√




课程目标2



√








课程目标3



√








课程目标4




√







课程目标5








√
√


"
2440081,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
《软件体系结构》是根植于软件工程发展起来的一门新兴学科，目前已经成为软件工程研究和实践的主要领域。软件体系结构在软件开发中为不同的人员提供了共同交流的语言，体现并尝试了系统早期的设计决策，并作为相同设计的抽象，为实现框架和构件的重用、基于体系结构的软件开发提供了有力的支持。
作为软件工程专业的重要专业课程，本课程主要系统地介绍软件体系结构的基本原理、方法和实践，全面反映软件体系结构研究和应用的最新进展，讨论软件体系结构的基本理论知识，介绍软件体系结构的设计和工业界应用实例，强调理论与实践相结合。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
1. 了解《软件体系结构》这门学科的性质、地位、研究范围、学科进展和未来方向等。
2. 理解该门学科的主要概念、基本原理和策略等。
3. 掌握软件体系结构的建模方法、描述方法，通过对不同软件体系结构风格的掌握，能够采用正确的基于体系结构的软件开发。
4. 能够把所学的原理应用到具体的实践中去，培养学生发现、分析和解决问题的能力等。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1





√
√





课程目标2

√







√


课程目标3


√
√
√





√

课程目标4
√
√
√
√
√







（注意：课程目标不一定与毕业要求一一对应）
"
2440081,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
《软件体系结构》是根植于软件工程发展起来的一门新兴学科，目前已经成为软件工程研究和实践的主要领域。软件体系结构在软件开发中为不同的人员提供了共同交流的语言，体现并尝试了系统早期的设计决策，并作为相同设计的抽象，为实现框架和构件的重用、基于体系结构的软件开发提供了有力的支持。
作为软件工程专业的重要专业课程，本课程主要系统地介绍软件体系结构的基本原理、方法和实践，全面反映软件体系结构研究和应用的最新进展，讨论软件体系结构的基本理论知识，介绍软件体系结构的设计和工业界应用实例，强调理论与实践相结合。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
1. 了解《软件体系结构》这门学科的性质、地位、研究范围、学科进展和未来方向等。
2. 理解该门学科的主要概念、基本原理和策略等。
3. 掌握软件体系结构的建模方法、描述方法，通过对不同软件体系结构风格的掌握，能够采用正确的基于体系结构的软件开发。
4. 能够把所学的原理应用到具体的实践中去，培养学生发现、分析和解决问题的能力等。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1





√
√





课程目标2

√







√


课程目标3


√
√
√





√

课程目标4
√
√
√
√
√







（注意：课程目标不一定与毕业要求一一对应）
"
2440082,"
本课程是一门涉及概率统计学、数据库及可视化等多个领域的交叉学科，属于专业必修课。机器学习技术发展极为迅速，应用非常广泛。该实践课程结合机器学习的基础理论课程，设计实践案例，主要内容包括特征表示与降维、监督学习、无监督学习、集成学习、和强化学习。在教学过程中采用探索式教学，注意理论与实践的结合。同学们可以了解机器学习所采用的主要研究方法和技术手段，掌握使用机器学习平台、工具或算法库求解实际问题的方法。该课程可以培养学生综合运用所学知识解决实际问题的能力，训练学生逻辑思维能力和想象力。它可以使学生掌握理论联系实际的方法，从而使他们能够根据实际需求，运用、改进甚至提出新的机器学习算法，探索应用领域的共性模式发现。通过团队合作的形式，使得同学们的实践能力、表达能力以及团队合作精神得到一定的锻炼。
","
1. 理解机器学习的基本概念、核心任务及分类体系，掌握机器学习的基本推理类型及相应的理论基础；熟练掌握监督学习、非监督学习的主要任务、典型算法、评价标准及典型应用；了解强化学习的基本原理及该理论与其它模型相结合提升学习性能的工作机理。（支撑毕业要求1）
2. 能够结合待分析数据的分布特点，选择合适的监督学习算法（包括贝叶斯网络分类器、支持向量机分类器及神经网络分类器）构建判别模型，并通过合适的测试集构建评价模型的性能。能够通过性能评价结果，解释模型的判别能力与实际应用价值，调整模型参数或改进算法以提高性能。（支撑毕业要求2）
3. 能够综合运用聚类技术、维约简技术、潜在变量模型及时间序列模型对数据进行探索性分析，归纳数据的模式特点、维度统计重要性、潜在关联性及时间效应。能够可视化或评价这些发现的统计重要性，从而调整算法参数或改进算法以获取更加有效的发现。（支撑毕业要求2）
4. 能够运用强化学习的思想，改进典型机器学习算法的性能，包括马尔科夫决策过程，前馈神经网络等。了解强化学习在深度学习中应用的基本原理和典型案例。（支撑毕业要求3）
5. 能够根据复杂问题实际需求，进行团队合作，设计求解方案，能够清晰表述自己的设计思想，与他人进行沟通和交流，培养学生的创新思维和能力。（支撑毕业要求9和11 ）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√
 



 





课程目标3

√

 
 







课程目标4


√
 
 
 





 
课程目标5







 
√
 
√

"
2440083,"
情感计算是计算机科学、认知科学、神经科学、脑科学、心理学、行为科学等多学科交叉的新兴研究领域，在教育、医学、商业、社会服务、以及航空航天等领域有着非常广泛且重要的应用。本课程将通过课堂讲解、学生汇报、课后实践等形式，结合机器学习、模式识别、图像处理、语音信号处理、概率统计等课程知识，围绕情感计算的研究内容和现状、视听情感识别与合成、人类视听情感感知脑认知机制与相关计算机科学技术的影响与启发等不同方面进行深入探讨与讲授，培养学生多学科交叉意识，为在后续相关领域的工作和研究打下基础。
","
本课程的基本教学目标主要包括以下内容：
1.	掌握和理解基本的情感模型理论；
2.了解情感在人类社会发展、自动化系统和人机交互系统等领域的应用；
3.掌握语音情感和面部表情识别研究中主流机器学习算法及研究现状和发展趋势；
4. 熟悉语音和表情识别的一般流程和关键技术；
5.掌握语音和视觉情感合成研究中主流算法及研究现状和发展趋势；
6.熟悉语音和表情合成的关键技术和评估准则；
7.掌握脑认知科学对视听情感刺激的感知与处理过程，了解脑认知研究的主要研究方法、试验范式设计、脑数据处理和分析方法、计算模型等;
8.了解人类情感产生与感知的脑认知机制对计算机科学中情感合成与识别算法的启示；
9.通过课程分组，能够让学生根据情感计算领域中情感合成或情感识别的某个具体内容进行团队讨论与合作；
10.基于机器学习、图像或语音信号处理等技术，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流，编程实现设计方案并进行实验验证。


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3



√








课程目标4





√






课程目标5



√








课程目标6




√







课程目标7



√








课程目标8


√









课程目标9








√



课程目标10









√



"
2440084,,
2440085,"
密码学是网络安全专业的专业核心必修课。
海量的信息以数据形式存放在计算机系统中并通过网络传输共享。如果网络和信息的安全受到破坏，则会危及国家的安全，引起社会的混乱，从而造成重大损失。确保网络和信息的安全已成为网络和计算机领域的基础问题之一。密码是解决网络和信息安全问题的关键技术，它的有效使用可极大提高网络空间的安全性。
课程的主要内容是密码学基础理论与基本技术。课程的目的在于为即将完成网络安全学位基础课程并计划从事网络与信息安全工程实践或理论研究的本科学生提供专业基础指导。
","
1. 掌握现代密码学的基本概念、基础理论、主要支撑算法，方案，协议等技术框架。（支撑毕业要求1、2）
2. 掌握现代密码学中的典型对称密码技术，包括：对称加密算法、密码Hash函数等；理解各类对称密码技术的潜在安全缺陷。（支撑毕业要求2、3）
3. 掌握现代密码学中的典型非对称密码技术，包括：公钥加密算法、数字签名算法等；理解各类非对称密码技术的潜在安全缺陷。（支撑毕业要求2、3）
4. 掌握通过软件或硬件实现非对称密码技术的有效执行算法，包括：素数测试方法、模幂算法、模乘算法等。（支撑毕业要求1、3、4）
5. 初步理解密码学在网络信息系统应用中的高级课题。掌握双向签名、不可否认签名、盲签名、秘密分享、游戏、零知识认证、密钥建立、公钥基础设施（PKI）等技术。（支撑毕业要求1、2、3）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√










课程目标2

√
√









课程目标3

√
√









课程目标4
√

√
√








课程目标5
√
√
√









"
2440086,"
由于信息新技术的快速发展和信息学科之间的交叉融合，新型的信息安全观也在迅速建立并发展，传统的信息安全问题已经转变为更大范围内的网络空间安全问题。《软件安全》课程是网络空间安全方向专业必修课。本课程通过理论与实践的结合，帮助拓宽视野，加深理解，了解软件安全的主要威胁，软件安全性分析的基础方法和理论，软件安全性分析的常用工具，软件安全问题分析方法和技术，当前的研究进展和动态。
","
1. 了解软件安全的背景知识，软件安全包含的问题，软件安全问题的解决方法。（支撑毕业要求2）
2. 掌握软件安全性分析所需的常用工具。（支撑毕业要求3，4）
3. 掌握模糊测试的基本思想，经典模糊测试系统的组成，模糊测试的代表性工具和系统，以及模糊测试的最新技术进展。（支撑毕业要求6）
4. 对于学习和实验中遇到的问题，能够清晰明确地表达和陈述，并通过互联网等现代化工具解决。（支撑毕业要求7） 
5. 培养良好的计算机、软件工程师的职业道德规范，具有良好的社会责任感。（支撑毕业要求10）

"
2440087,"
密码学综合实践是网络安全专业必修集中实践类课程。
网络安全专业必修课密码学原理与实践，讲授了密码学基础算法和协议。本课程选择密码学原理与实践课中的典型密码算法和协议，指导学生加以实验。课程旨在加深学生对其原理的理解，培养学生密码工程实践的能力。
","
通过密码学综合实践课的实验，学生应该加深对密码算法与协议的理解。具体目标为：
1. 掌握主流基础密码算法和协议的工作原理。（支撑毕业要求1、2）
2. 掌握一些基础密码算法和协议的安全分析原理。（支撑毕业要求1、2、3）
3. 能够自行开发实现简单的密码算法和协议。（支撑毕业要求2、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√










课程目标2
√
√
√









课程目标3

√







√



"
2440089,"
信号与系统课程是电子学、信息技术、通信、自动化、计算机、信号处理、雷达、测量、系统工程等专业的重要技术基础课，集中研究确定信号经线性时不变系统进行传输、处理的基本理论和基本分析方法。
","
通过本课程的理论教学，使学生掌握研究信号与系统这门学科的基本方法和思路，培养学生的抽象思维能力，提高分析问题、解决问题的能力，为后续课程的学习以及从事实际工作打下良好的基础。
目标1：掌握科研与系统相关的基本概念、基本数学原理和信号处理技术。（支撑毕业要求1，2）
目标2：能够应用所学的概念和理论，对给定的信号与系统问题进行计算分析，并获得有效结果，比如求解给定信号的傅里叶变换、拉普拉斯变换；求解系统的零输入响应、零状态响应和总响应；判断给定系统是否具备线性时不变系统的若干特性；判定系统的因果特性和稳定性等。（支撑毕业要求1,2）
目标3：掌握基本的实验分析手段和方法，能够用计算机程序实现信号与系统分析的各个主要环节。（支撑毕业要2，3，4）
目标4：掌握信号与系统频域分析法的核心理论，能够利用频谱分析等方法对实际应用系统进行建模和分析研究。（支撑毕业要2，3，4）
目标5：通过具体的基本概念和理论的学习，能够深入了解和思考更具通用性的研究方法和思路，获得有益的启发，在以后的学习工作中可以借鉴。比如通过信号响应来观察了解系统，从频域及复频域的角度研究信号的特性，研究电路系统、机械系统中的信号及系统问题，线性时不变系统基于信号的线性分解来研究复杂信号的响应等。（支撑毕业要求3,4，12）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√










课程目标2
√
√










课程目标3

√
√
√








课程目标4

√
√
√








课程目标5


√
√







√
"
2440090,"
知识工程综合实践的主要内容是实现一个基于知识库的问答系统，其中将贯通知识工程课程的所有内容，包括知识获取、知识表示、知识存储、知识管理、知识问答以及知识推理。旨在让学生通过动手实践，将知识工程课程所学的理论知识与实践操作结合，并融会贯通到实际应用中。

","
(1) 能够熟练应用知识工程应用领域的各类实践工具，实现对知识的表示、分析和处理，并构建知识库或知识图谱。
(2) 应用开源工具和基础程序设计知识，根据实践要求，实现一个基于知识库的问答系统。并在团队协作中，有效进行人际沟通和团队合作。

"
2440091,"
《软件工程综合实践》是软件工程专业中的一门专业综合类的实践课程。在此课程中，由项目驱动学生的实践活动，通过将学生划分为不同的项目组，每个小组可以在教师给出的几种类型的软件系统设计的题目（完全命题、半命题、自选题目）中确定选题，教师定期以小组讨论的方式给予指导和评价。课程结束后，每个小组需要完成软件和文档成果的提交。

","
1. 能够在实践过程中依据项目的软硬件需求将计算机软件知识应用于复杂软件工程问题的分析，完成技术路线的选择，设计开发计划与人员分工方案，培养学生对于复杂软件工程问题的规划和设计能力。能够应用相应程序设计语言高质量的完成具有一定复杂度和一定理论或工程价值的软件设计，能够撰写符合工程规范的软件工程文档。（支撑毕业要求6.1）
2. 能够对复杂软件工程问题设计出合乎软件工程规范的有效的解决方案，能够结合社会、安全、文化等环境因素评价不同方案优劣并加以分析和取舍。（支撑毕业要求8.2）
3. 了解开源软件相关协议内容和使用方法，能够正确运用开源协议。认识信息安全问题的重要性，在解决复杂软件工程的过程中能够选择合理的方案解决信息安全问题。培养可持续发展的意识。（支撑毕业要求9.1）
4. 能够融合数学、自然科学、工程科学等最新产业界成果或新技术，并应用于复杂软件工程问题的解决过程中。在解决问题的过程中不拘泥于固定模式和方法，针对具体问题能够充分发挥创造性。在解决问题的过程中对发现的问题本质继续加以深入研究，培养创新精神，激发创造力。（支撑毕业要求14.1）




"
2440093,"
大数据分析理论与方法是计算机分析类课程中较为重要的课程。这门课程主要面向学生系统的介绍了大数据的概念应用，大数据分析的算法，大数据分析的相关工具。讲述大数据分析的核心思想、关键技术以及一些在其它相关课程和教科书中少有涉及的重要知识点，使学生掌握并深刻理解大数据工作原理，把理论与实践有机结合，针对大数据课程的特点，为每个知识点准备了例子大数据分析源代码，通过学生亲自运行、修改程序的源代码加强对知识点的理解；为每个知识点大量的上机实验作业，使学生在学习本课程后，能应用算法编程实现大数据分析的具体操作。
","
“大数据”作为时下最火热的IT行业的词汇，随之而来的数据仓库、数据分析、数据挖掘等等围绕大数据的商业价值的利用逐渐成为行业人士争相追捧的利润焦点。 “大数据” 其实离我们的生活并不遥远，大到微博的海量用户信息，小到一个小区超市的月销售清单，都蕴含着大量潜在的商业价值。正是由于数据量的快速增长，并且已经远远超过了人们的数据分析能力。因此，科学、商用等领域都迫切需要智能化、自动化的数据分析工具。在这样的背景下，数据挖掘技术应用而生，使得海量数据的分析变得易如反掌。
大数据分析理论与方法是计算机分析类课程中较为重要的课程。这门课程主要面向学生系统的介绍了大数据的概念应用，大数据分析的算法，大数据分析的相关工具。通过以上内容的学习，使学生掌握并深刻理解大数据工作原理，通过分析实验（上机）加快学生大数据技术的应用。
"
2440093,"
大数据分析理论与方法是计算机分析类课程中较为重要的课程。这门课程主要面向学生系统的介绍了大数据的概念应用，大数据分析的算法，大数据分析的相关工具。讲述大数据分析的核心思想、关键技术以及一些在其它相关课程和教科书中少有涉及的重要知识点，使学生掌握并深刻理解大数据工作原理，把理论与实践有机结合，针对大数据课程的特点，为每个知识点准备了例子大数据分析源代码，通过学生亲自运行、修改程序的源代码加强对知识点的理解；为每个知识点大量的上机实验作业，使学生在学习本课程后，能应用算法编程实现大数据分析的具体操作。
","
“大数据”作为时下最火热的IT行业的词汇，随之而来的数据仓库、数据分析、数据挖掘等等围绕大数据的商业价值的利用逐渐成为行业人士争相追捧的利润焦点。 “大数据” 其实离我们的生活并不遥远，大到微博的海量用户信息，小到一个小区超市的月销售清单，都蕴含着大量潜在的商业价值。正是由于数据量的快速增长，并且已经远远超过了人们的数据分析能力。因此，科学、商用等领域都迫切需要智能化、自动化的数据分析工具。在这样的背景下，数据挖掘技术应用而生，使得海量数据的分析变得易如反掌。
大数据分析理论与方法是计算机分析类课程中较为重要的课程。这门课程主要面向学生系统的介绍了大数据的概念应用，大数据分析的算法，大数据分析的相关工具。通过以上内容的学习，使学生掌握并深刻理解大数据工作原理，通过分析实验（上机）加快学生大数据技术的应用。
"
2440093,"
大数据分析理论与方法是计算机分析类课程中较为重要的课程。这门课程主要面向学生系统的介绍了大数据的概念应用，大数据分析的算法，大数据分析的相关工具。讲述大数据分析的核心思想、关键技术以及一些在其它相关课程和教科书中少有涉及的重要知识点，使学生掌握并深刻理解大数据工作原理，把理论与实践有机结合，针对大数据课程的特点，为每个知识点准备了例子大数据分析源代码，通过学生亲自运行、修改程序的源代码加强对知识点的理解；为每个知识点大量的上机实验作业，使学生在学习本课程后，能应用算法编程实现大数据分析的具体操作。
","
“大数据”作为时下最火热的IT行业的词汇，随之而来的数据仓库、数据分析、数据挖掘等等围绕大数据的商业价值的利用逐渐成为行业人士争相追捧的利润焦点。 “大数据” 其实离我们的生活并不遥远，大到微博的海量用户信息，小到一个小区超市的月销售清单，都蕴含着大量潜在的商业价值。正是由于数据量的快速增长，并且已经远远超过了人们的数据分析能力。因此，科学、商用等领域都迫切需要智能化、自动化的数据分析工具。在这样的背景下，数据挖掘技术应用而生，使得海量数据的分析变得易如反掌。
大数据分析理论与方法是计算机分析类课程中较为重要的课程。这门课程主要面向学生系统的介绍了大数据的概念应用，大数据分析的算法，大数据分析的相关工具。通过以上内容的学习，使学生掌握并深刻理解大数据工作原理，通过分析实验（上机）加快学生大数据技术的应用。
"
2440094,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
课程的目的是向大二年级的学生介绍计算机科学与技术领域层出不穷的新技术和在这些新技术推动下的各行各业的发展情况，阐明技术创新对国民经济和产业发展进步的重要作用。通过课程学习使学生能对计算机领域的技术发展的全局有个全面的掌握，对后续的个门专业课的展开可以有较深入的认识和理解。课程属于知识介绍性和讲座性质，内容面很宽但对细节和深度不做要求。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
要求学生对课上老师所介绍的内容能够有全面的了解，对其中关键新技术有深刻的理解和体会，(每次课后需完成一个能体现学生对课上内容的理解与体会的课后作业)。能体会到各项新技术对产业发展推动的重要作用，更能激发对后续课程学习的兴趣和积极性。
1. 了解计算机系统机构和高性能计算新技术及对产业发展的推动。（支撑毕业要求8）
2. 了解计算机网络与通信新技术的发展趋势及相关产业的发展，云计算技术的发展现状。（支撑毕业要求3）
3. 了解信息安全新技术及产业发展现状。（支撑毕业要求3）
4. 了解软件工程新技术及产业如何依托软件工程开发大型项目。（支撑毕业要求3）
5. 了解人工智能信息新技术及产业发展现状（支撑毕业要求9、10）
6. 了解 计算机图形、图像、音频新技术新技术及产业发展现状（支撑毕业要求9、10）
7. 了解 基因工程及生物信息学新技术及产业发展现状（支撑毕业要求9、10）
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√

√
√
√
√


√
课程目标2
√
√

√

√
√
√
√


√
课程目标3
√
√

√

√
√
√
√


√
课程目标4
√
√

√

√
√
√
√


√
课程目标5
√
√

√

√
√
√
√


√
课程目标6
√
√

√

√
√
√
√


√
课程目标7
√
√

√

√
√
√
√


√
"
2440094,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
课程的目的是向大二年级的学生介绍计算机科学与技术领域层出不穷的新技术和在这些新技术推动下的各行各业的发展情况，阐明技术创新对国民经济和产业发展进步的重要作用。通过课程学习使学生能对计算机领域的技术发展的全局有个全面的掌握，对后续的个门专业课的展开可以有较深入的认识和理解。课程属于知识介绍性和讲座性质，内容面很宽但对细节和深度不做要求。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
要求学生对课上老师所介绍的内容能够有全面的了解，对其中关键新技术有深刻的理解和体会，(每次课后需完成一个能体现学生对课上内容的理解与体会的课后作业)。能体会到各项新技术对产业发展推动的重要作用，更能激发对后续课程学习的兴趣和积极性。
1. 了解计算机系统机构和高性能计算新技术及对产业发展的推动。（支撑毕业要求8）
2. 了解计算机网络与通信新技术的发展趋势及相关产业的发展，云计算技术的发展现状。（支撑毕业要求3）
3. 了解信息安全新技术及产业发展现状。（支撑毕业要求3）
4. 了解软件工程新技术及产业如何依托软件工程开发大型项目。（支撑毕业要求3）
5. 了解人工智能信息新技术及产业发展现状（支撑毕业要求9、10）
6. 了解 计算机图形、图像、音频新技术新技术及产业发展现状（支撑毕业要求9、10）
7. 了解 基因工程及生物信息学新技术及产业发展现状（支撑毕业要求9、10）
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√

√
√
√
√


√
课程目标2
√
√

√

√
√
√
√


√
课程目标3
√
√

√

√
√
√
√


√
课程目标4
√
√

√

√
√
√
√


√
课程目标5
√
√

√

√
√
√
√


√
课程目标6
√
√

√

√
√
√
√


√
课程目标7
√
√

√

√
√
√
√


√
"
2440094,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
课程的目的是向大二年级的学生介绍计算机科学与技术领域层出不穷的新技术和在这些新技术推动下的各行各业的发展情况，阐明技术创新对国民经济和产业发展进步的重要作用。通过课程学习使学生能对计算机领域的技术发展的全局有个全面的掌握，对后续的个门专业课的展开可以有较深入的认识和理解。课程属于知识介绍性和讲座性质，内容面很宽但对细节和深度不做要求。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
要求学生对课上老师所介绍的内容能够有全面的了解，对其中关键新技术有深刻的理解和体会，(每次课后需完成一个能体现学生对课上内容的理解与体会的课后作业)。能体会到各项新技术对产业发展推动的重要作用，更能激发对后续课程学习的兴趣和积极性。
1. 了解计算机系统机构和高性能计算新技术及对产业发展的推动。（支撑毕业要求8）
2. 了解计算机网络与通信新技术的发展趋势及相关产业的发展，云计算技术的发展现状。（支撑毕业要求3）
3. 了解信息安全新技术及产业发展现状。（支撑毕业要求3）
4. 了解软件工程新技术及产业如何依托软件工程开发大型项目。（支撑毕业要求3）
5. 了解人工智能信息新技术及产业发展现状（支撑毕业要求9、10）
6. 了解 计算机图形、图像、音频新技术新技术及产业发展现状（支撑毕业要求9、10）
7. 了解 基因工程及生物信息学新技术及产业发展现状（支撑毕业要求9、10）
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√

√
√
√
√


√
课程目标2
√
√

√

√
√
√
√


√
课程目标3
√
√

√

√
√
√
√


√
课程目标4
√
√

√

√
√
√
√


√
课程目标5
√
√

√

√
√
√
√


√
课程目标6
√
√

√

√
√
√
√


√
课程目标7
√
√

√

√
√
√
√


√
"
2440094,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
课程的目的是向大二年级的学生介绍计算机科学与技术领域层出不穷的新技术和在这些新技术推动下的各行各业的发展情况，阐明技术创新对国民经济和产业发展进步的重要作用。通过课程学习使学生能对计算机领域的技术发展的全局有个全面的掌握，对后续的个门专业课的展开可以有较深入的认识和理解。课程属于知识介绍性和讲座性质，内容面很宽但对细节和深度不做要求。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
要求学生对课上老师所介绍的内容能够有全面的了解，对其中关键新技术有深刻的理解和体会，(每次课后需完成一个能体现学生对课上内容的理解与体会的课后作业)。能体会到各项新技术对产业发展推动的重要作用，更能激发对后续课程学习的兴趣和积极性。
1. 了解计算机系统机构和高性能计算新技术及对产业发展的推动。（支撑毕业要求8）
2. 了解计算机网络与通信新技术的发展趋势及相关产业的发展，云计算技术的发展现状。（支撑毕业要求3）
3. 了解信息安全新技术及产业发展现状。（支撑毕业要求3）
4. 了解软件工程新技术及产业如何依托软件工程开发大型项目。（支撑毕业要求3）
5. 了解人工智能信息新技术及产业发展现状（支撑毕业要求9、10）
6. 了解 计算机图形、图像、音频新技术新技术及产业发展现状（支撑毕业要求9、10）
7. 了解 基因工程及生物信息学新技术及产业发展现状（支撑毕业要求9、10）
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√

√
√
√
√


√
课程目标2
√
√

√

√
√
√
√


√
课程目标3
√
√

√

√
√
√
√


√
课程目标4
√
√

√

√
√
√
√


√
课程目标5
√
√

√

√
√
√
√


√
课程目标6
√
√

√

√
√
√
√


√
课程目标7
√
√

√

√
√
√
√


√
"
2440096,"
本课程是计算机科学与技术专业的一门专业选修课。它是在“计算机组成与体系结构”课程的基础上，着重讲解现代处理器的核心架构——超标量的一门高年级本科生课程。该课程将在微体系结构的抽象层次上讲述现代处理器设计中的技术，使学生掌握通过开发指令级并行来获取高性能微体系结构的方法。这些技术包括分支预测、寄存器重命名、多指令分派和发射、乱序执行、基于推断的存储器读写处理等内容。
","
1. 能够应用计算机性能分析方法对超标量处理器设计中的复杂工程问题进行建模和评估，判断不同优化技术对超标量处理器性能带来的影响。能够根据超标量处理器微架构建模的要求，结合性能分析理论，提出典型超标量处理器微架构的设计方案，并能在设计环节中体现创新意识。
2. 能够使用高级语言对超标量处理器微架构中的重要部件进行建模和仿真；能够通过计算机体系结构相关参数的选择进行复杂工程问题的设计空间探测。能够应用性能评估的科学方法对设计和实现结果进行综合分析，找出影响超标量处理器微架构性能的主要因素。
"
2440098,,
2440100,"
《模式识别与深度学习》研究计算机识别物体的机理。本课程主要介绍模式识别与深度学习的一些基本概念、聚类、分类、回归、深度神经网络等基本内容。
通过本课程学习，使学生了解模式识别与深度学习的特点，掌握基本的模式识别与深度学习方法，为后续数据分析与处理以及人工智能等领域的学习打下基础。
","
了解模式识别与深度学习的概念和特点；掌握线性回归问题的特点和方法；掌握聚类和降维的特点和基本方法；了解分类的概念，掌握支持向量机等基本工具的理论和用法；了解图模型的概念，掌握贝叶斯网络和马尔科夫随机场的理论和用法；掌握深度神经网络，尤其是卷积神经网络的理论和使用方法；掌握图模型的理论和应用；掌握模式识别与深度学习的典型应用案例。
1. 了解模式识别与深度学习所涉及的学科和领域，掌握模式识别与深度学习发展过程和趋势，了解模式识别与深度学习技术的学科和技术特点。（支撑毕业要求1）
2. 了解回归问题和方法的特点。了解线性回归的概念。（支撑毕业要求2）
3. 了解聚类和降维的特点，掌握k-means、GMM等聚类算法，掌握PCA等主成分分析和降维算法。（支撑毕业要求3）
4. 了解分类的概念与基本理论，掌握SVM（支持向量机）、RVM（相关向量机）以及它们之间的联系。（支撑毕业要求4）
5. 了解图模型的概念和基本理论，掌握贝叶斯网络、马尔科夫链、循环神经网络，能够实现简单的图像去噪。（支撑毕业要求5）
6. 掌握深度学习的基本工具，例如卷积神经网络，能够实现简单的图像分类。（支撑毕业要求6）
7. 能够根据项目需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5




√







课程目标6





√






课程目标7








√
√


"
2440101,"
统计分析基础，通过大量生物医学实例，引入并介绍统计方法。本课程讲授生物统计学基础的概念和方法，详细讲解相关算法及过程。
","
1. 通过本课程的学习，使学生掌握数据统计方法和数据分析技术，并且熟悉生物医学数据中相关统计分析的基本原理和发展方向。（支撑毕业要求2）
2. 过程与方法目标：通过将理论与实践相结合，要求学生能够把所学知识与技术用于解决实际问题，逐步形成科学的学习观和方法论。（支撑毕业要求3）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√










课程目标2


√









"
2440102,"
《媒体计算》是计算机科学的专业选修课。学生通过本课程的学习，在对不同媒体类型特点了解的基础上，掌握其共有的特征表示、内容分析和计算、以及语义理解的基础理论和方法，为本科生在多媒体分析、计算机视觉和人工智能等方向打下一定基础。

","
掌握媒体数据的特征表示、内容分析与语义计算的基础理论和方法；掌握典型媒体数据的内容分析和语义计算方法，例如文本、图像和视频。
1. 了解媒体计算的基本原理，包括媒体数据表示、数据管理以及语义理解等，了解媒体计算的应用领域。（支撑毕业要求2）
2. 掌握常用媒体特征提取方法，掌握词袋模型及其在图像特征提取中的扩展，掌握媒体特征表示的基本模型和方法，包括向量、矩阵、张量和图模型等。（支撑毕业要求3）
3. 掌握媒体特征分析的基本原理，掌握特征的局部、空间、时序和语义等关联关系。（支撑毕业要求4）
4. 掌握基于内容的媒体分析和检索方法，掌握典型的媒体索引方法和排序方法、算法和模型。（支撑毕业要求5）
5. 掌握媒体语义理解的基本原理和方法，掌握不同媒体数据的语义理解模型，了解语义和本体，掌握自动语义标注方法，能够构建典型的媒体语义理解应用模型。（支撑毕业要求6、7）
6. 了解视频分析的基本原理，掌握视频的特征提取和表示。能够以视频为多模态媒体计算对象，进行媒体计算应用模型的构建。（支撑毕业要求8、9）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1

√










课程目标2


√









课程目标3



√








课程目标4




√







课程目标5





√
√





课程目标6







√
√




"
2440103,"
搜索是用户进行信息查询和获取的主要方式，通常是将信息按照一定的方式进行组织存储，并根据用户的查询，给出有用的信息的过程。问答系统是信息检索的一种，可以根据自然语言形式问题，返回一个简洁的答案或可能的答案列表。
本课程将系统地介绍信息检索和问答系统的基本概念、常用的模型与算法、重要的应用等。在基本概念和算法上，将介绍自然语言处理、深度学习等基本知识贯穿其中。同时将重点介绍自然语言处理的一些重要模型和算法，主要是在大规模语料库的支持下，如何利用统计语言模型和基于深度学习的语言模型进行自动语言知识学习和获取。在应用方面，将讲解信息检索、问答系统、机器翻译等模型，加深学生它们的设计策略和实现技术的了解。同时，结合深度学习介绍信息检索和问答系统技术和应用的最新进展。
","
1. 掌握智能检索和问答系统的基本概念、主要研究内容及研究难点；掌握基于统计的自然语言处理研究思路、及其在自然语言处理各层次（词法、句法、语义、篇章）的重要模型与算法实现；掌握基于深度学习的信息检索和问答研究思路，及其在智能检索和问答的重要模型与算法实现；
在此基础上，掌握文本分类聚类、机器翻译、信息检索、基于自然语言处理的社会计算等所涉及到的关键模型、算法与技术，从而形成有关统计学习、深度学习、自然语言处理和信息检索的一个较为完整的知识体系认知。（支撑毕业要求1）
2. 能够应用统计学、深度学习和计算机科学相关知识，对一个已知的信息检索和问答任务进行问题抽象，建立相应的数学模型，并获得有效结论。（支撑毕业要求2）
3. 能够灵活运用已有的数据资源、工具资源等，针对一项具体的信息检索和问答任务设计出相应的技术解决方案，并能在设计中体现创新意识，主要是在社会应用方面有所拓展。（支撑毕业要求3）；
4. 鼓励学生提出自己的创新性应用设想，并在专业知识的基础上，实现从需求设计、语料数据获取与处理、模型与算法实施、技术体系架构，直至系统实现、评测与改进的整个任务过程（支撑毕业要求4，5）
5. 针对一个复杂的信息检索和问答项目，进行团队合作，查阅相关论文资料，提出部分创新设想，并设计合理的系统方案，能够清晰的进行陈述发言表达自己的设计思想，通过交流进一步完善设计方案。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√
√







课程目标5








√
√


"
2440105 ,"
心理与行为的数学建模与智能化分析是人工智能的经典研究领域之一。该领域是同时涉及智能与计算科学、心理学、社会学和认知科学的交叉学科领域。在互联网及在线社会媒体蓬勃发展的今天，心理与行为分析从数据来源、计算方法，应用形式等多各方面都产生了革命性的进展，结合了计算机技术和社会媒体资源的智能化心理与行为分析及相关的社会应用已经深刻的改变了我们的生活。
本课程旨在帮助学生了解心理、社会和认知科学的基本概念，掌握利用前沿的智能技术和大数据进行心理和行为建模与计算的基本方法，并通过实例进行实践体验。课程主要内容包括了心理与行为的典型数学模型，基于数据挖掘和机器学习的自动化心理与行为分析方法，以及相关方法在智能对话、个性化推荐、舆情分析、社会网络分析等典型领域的应用。
","
1. 掌握心理学与社会学基本概念及理论，理解计算方法与心理及行为要素的内在联系，理解心理与行为现象的客观性和可计算性。
2. 理解心理过程、心理结构、心理干预、语言心理的典型数学模型，掌握利用数学模型建模实际心理问题的方法。
3. 理解社会网络、个体及群体社会行为、社会信息传播、社会博弈的典型数学模型，掌握利用数学模型建模实际社会行为问题的方法。
4. 能够在数学建模的基础上，利用互联网大数据及智能算法来分析和解决实际的心理与行为问题。
5. 能够将心理与行为计算技术应用于若干典型智能社会应用。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
13
14
课程目标1

√
√


√

√






课程目标2


√
√










课程目标3


√
√

√
√







课程目标4


√
√
√
√
√







课程目标5


√
√
√
√
√







四、基本要求
结合课程目标，对课程的教学内容、教学过程（环节）、教学模式、知识与能力目标的达成提出要求。
本课程的基本要求包括以下方面：
1.	教学内容应当包括心理、社会和认知科学的基本概念；利用前沿的智能技术和大数据进行心理和行为建模与计算的基本方法；基于数据挖掘和机器学习的自动化心理与行为分析方法；以及相关方法在智能对话、个性化推荐、舆情分析、社会网络分析等典型领域的应用。
2.	本课程的教学过程以课堂教学为主，并要求学生在课下完成相应的实践案例；
3.	本课程的教学模式采取课上课下相结合的方式，要求学生在课下通过学习指定的文献等材料来支撑课堂学习，并在课堂上采取问题索引、团组讨论等方式激发学生的创造性与洞察力；
4.	课程的考核采用平时实践成绩与期末考核相结合的方式，着重考核学生对于跨学科问题分析的深刻程度和在真实场景中的应用能力；
五、教学内容
一、绪论 （4课时）
1.1. 什么是计算？计算思维与可计算性概述；
1.2. 什么是心理与行为计算？心理问题的特点及其客观性；
1.3. 心理与行为计算的问题类型及典型问题；
重点难点：心理与行为的可计算性
教学模式：课堂授课，课下自学
知识能力要求：理解心理与行为的客观性和可计算性，了解心理与行为问题的典型形式。
二、心理的基本结构 （4课时）
2.1 神经网络
2.2 意识与感知
2.3 思维与语言
2.4 人格与情绪
重点难点：心理学基本概念的知识体系构建
教学模式：课堂授课，课下自学
知识能力要求：掌握心理学的基本概念及理论。
三、 社会行为的基本结构与数学模型 （4课时）
3.1社会网络的基本特征；
3.2 博弈行为及价值交换的数学模型；
3.3 信息传播的数学模型；
3.4 群体决策的数学模型；
重点难点：社会行为的数学建模
教学模式：课堂授课，课下自学
知识能力要求：掌握对典型社会行为进行数学建模的能力。
"
2440106,"
嵌入式计算机系统是指以应用为核心，以计算机技术为基础，其软硬件可配置，对功能、可靠性、成本、体积、功耗有严格约束的一种专用计算机系统。嵌入式系统由于其功能齐全、功耗低、可靠性高、适应面广等诸多特点，在物联网和智能设备设计领域有着广泛的应用。本课程以嵌入式系统的概念、系统软硬件组成、外部接口及外围设备为主要教学内容，旨在帮助学生全面掌握嵌入式系统的基本原理及设计开发方法。
","
通过本课程的学习，使学生在知识和能力方面达到：
1）了解嵌入式系统的概念、组成及特点；
2）了解嵌入式系统硬件平台结构、嵌入式软件及操作系统的相关知识；
3）掌握嵌入式计算机系统的设计原则及设计步骤；
4）掌握嵌入式系统各个组成部分具体的设计方法，包括：嵌入式处理器的选择，总线设计，内存储器的设计，各种常用外设接口的设计，系统的可靠性设计，系统的调试等；
5）能够独立设计一个小型的嵌入式计算机系统。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2
√











课程目标3
√











课程目标4


√









课程目标5

√
√









"
2440106,"
嵌入式计算机系统是指以应用为核心，以计算机技术为基础，其软硬件可配置，对功能、可靠性、成本、体积、功耗有严格约束的一种专用计算机系统。嵌入式系统由于其功能齐全、功耗低、可靠性高、适应面广等诸多特点，在物联网和智能设备设计领域有着广泛的应用。本课程以嵌入式系统的概念、系统软硬件组成、外部接口及外围设备为主要教学内容，旨在帮助学生全面掌握嵌入式系统的基本原理及设计开发方法。
","
通过本课程的学习，使学生在知识和能力方面达到：
1）了解嵌入式系统的概念、组成及特点；
2）了解嵌入式系统硬件平台结构、嵌入式软件及操作系统的相关知识；
3）掌握嵌入式计算机系统的设计原则及设计步骤；
4）掌握嵌入式系统各个组成部分具体的设计方法，包括：嵌入式处理器的选择，总线设计，内存储器的设计，各种常用外设接口的设计，系统的可靠性设计，系统的调试等；
5）能够独立设计一个小型的嵌入式计算机系统。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2
√











课程目标3
√











课程目标4


√









课程目标5

√
√









"
2440107,"
如何亲手打造一个能看懂、甚至能用文字去描述现实世界的视觉智能计算机？如何亲手设计一个类似alphago的下棋智能计算机？本课程将带您一步步了解智能计算系统背后的方法、技术和结构（包括智能算法、智能编程框架和智能芯片等方面），从而能使用和设计智能计算系统，初步满足不同专业科研人员对于智能计算的学习和了解的需求。
","
1. 了解人工智能的发展历史和主要方法；掌握智能计算系统的概念及其发展方向。（支撑毕业要求1、8）
2. 掌握神经网络的基础，包括神经网络训练、神经网络设计原则、过拟合与正则化；掌握深度学习方法，包括卷积神经网络、循环神经网络、生成对抗网络，并能结合实际应用设计相应的网络模型。（支撑毕业要求3、4、5、9、10）
3. 掌握编程框架机器原理。学习TensorFlow编程模型及其用法，并利用TensorFlow实现深度学习的训练与预测。了解其他编程框架，如PyTorch、MXNet、Caffe。（支撑毕业要求3、4、5）
4. 掌握深度学习处理器原理，包括深度学习处理器DLP结构及其优化设计和性能评价；了解其他加速度，如GPU和FPGA。掌握深度学习处理器架构，包括单核和多核深度学习处理起的架构。（支撑毕业要求3、4、5）
5. 掌握智能编程语言，包括智能计算系统抽象架构、智能编程模型、智能编程语言基础、智能应用编程接口、智能应用功能调试、智能应用性能调优和机遇智能编程语言的系统开发。（支撑毕业要求2、3、4、5）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√






√




课程目标2


√
√
√



√
√


课程目标3


√
√
√







课程目标4


√
√
√







课程目标5

√
√
√
√







四、基本要求
结合课程目标，对课程的教学内容、教学过程（环节）、教学模式、知识与能力目标的达成提出要求。
本课程结合人工智能和嵌入式系统设计，让学生深入了解智能计算机的设计方法。课程授课采用计算机多媒体形式，辅以电子教案与纸板教材。教学强调理论学习与实践相结合，主张学生动手验证理论知识强化理解。使用计算机网络辅助教学，包括在线答疑、布置和批改作业等。
五、教学内容
1. 授课与自学
第1章  概述
1.1人工智能
1.2智能计算系统
1.3驱动范例
本章重点：介绍人工智能的概念、发展历史和主要方法；介绍智能计算系统的概念及其发展方向。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：人工智能和智能计算系统的基本概念。
能力：让学生了解智能计算系统的重要性及其发展史。
第2章  神经网络基础
2.1从机器学习到神经网络
2.2神经网络训练
2.3神经网络设计原则
2.4过拟合与正则化
2.5交叉验证
本章重点：介绍神经网络的概念、训练方法和设计原则；讲解神经网络的过拟合与正则化问题以及交叉验证方法。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：神经网络的训练方法；神经网络的设计原则；过拟合与正则化；交叉验证。
能力：让学生能够熟练掌握神经网络，在实际应用中运用神经网络。
第3章  深度学习
3.1适合图像处理的卷积神经网络
3.2基于卷积神经网络的图像分类算法
3.3基于卷积神经网络的图像目标检测算法
3.4序列模型：循环神经网络
3.5生成对抗网络
3.6驱动范例
本章重点：介绍深度学习，通过基于图像处理的卷积神经网络，让学生掌握深度学习的相关知识，并进一步掌握循环神经网络和生成对抗网络。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：适合图像突出的卷积神经网络；基于卷积神经网络的图像分类算法；基于卷积神经网络的图像目标检测算法；循环神经网络；生成对抗网络。
能力：让学生能够熟练掌握深度学习的相关算法，并在实际应用中熟练运用相关算法。
第4章  编程框架使用
4.1为什么需要编程框架
4.2编程框架概述
4.3 TensorFlow编程模型及基本用法
4.4基于TensorFlow实现深度学习预测
4.5基于TensorFlow实现深度学习训练
本章重点：介绍编程框架TensorFlow编程模型及基本用法；让学生掌握基于TensorFlow的深度学习预测和训练。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：编程框架概述；TensorFlow编程模型及基本用法；基于TensorFlow实现深度学习预测；基于TensorFlow实现深度学习训练。
能力：让学生能够熟练使用TensorFlow对深度学习算法进行实现。
第5章  编程框架机理
5.1 TensorFlow设计原则
5.2 TensorFlow计算图机制
5.3 TensorFlow系统实现
5.4编程框架对比
本章重点：介绍编程框架TensorFlow的基本原理，并了解TensorFlow和其他编程框架之间的区别。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：TensorFlow设计原则；TensorFlow计算图机制； TensorFlow系统实现；编程框架对比。
能力：让学生掌握TensorFlow的编程框架原理，并熟悉TensorFlow与其他编程框架的区别，包括PyTorch、MXNet和Caffe。
第6章  深度学习处理器原理
6.1 深度学习处理器概述
6.2 目标算法分析
6.3 深度学习处理器DLP结构
6.4优化设计
6.5性能评价
6.6其他加速器
本章重点：介绍深度学习处理器DLP结构以及优化设计和性能评价；同时，介绍DLP与另外两种加速器（GPU和FPGA）的区别。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：深度学习处理器概述；目标算法分析； 深度学习处理器DLP结构及其优化设计和性能评价；DLP与另外两种加速器（GPU和FPGA）的区别。
能力：让学生掌握深度学习处理器DLP的基本原理，并熟悉DLP与另外两种加速器（GPU和FPGA）的区别。
第7章  深度学习处理器架构
7.1 单核深度学习处理器
7.2 多核深度学习处理器
本章重点：介绍深度学习处理器的架构，包括单核深度学习处理器和多核深度学习处理器。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：单核深度学习处理器架构；多核深度学习处理器架构。
能力：让学生掌握两种深度学习处理器架构：单核深度学习处理器、多核深度学习处理器。
第8章  智能编程语言
8.1 为什么需要智能编程语言
8.2 智能计算系统抽象架构
8.3 智能编程模型
8.4智能编程语言基础
8.5智能应用编程接口
8.6智能应用功能调试
8.7智能应用性能调优
8.8基于智能编程语言的系统开发
本章重点：从介绍语义鸿沟、硬件鸿沟和平台鸿沟开始，介绍智能计算系统的抽象架构，智能编程模型，智能编程语言基础，智能应用编程接口、功能调试和性能调优；最后介绍基于智能编程语言的系统开发。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
知识点：智能计算系统抽象架构，智能编程模型，智能编程语言基础，智能应用编程接口，智能应用功能调试，智能应用性能调优。
能力：让学生了解智能编程语言的起源；掌握智能计算系统抽象架构；掌握智能编程语言及模型；掌握智能应用编程接口、调试调优。最终达到能够进行基于智能语言进行系统开发。
2. 实验
实验教学内容：
实验一、神经网络的实现
实验二、图像风格迁移的实现
实验三、基于TensorFlow实现深度学习预测与训练
实验"
2440108,"
物联网被称为信息社会的第三次浪潮，物联网技术将人类生存的物理世界网络化、信息化，将分离的物理世界和信息空间互联整合，代表了未来网络的发展方向。物联网技术称为未来社会经济发展、社会进步和科技创新的重要基础设施。本课程的目的是使学生掌握物联网技术的定义和基本原理及应用，了解物联网技术的发展，了解物联网的关键技术和方法。其中包括：物联网基本概念、无线感知技术、物联网硬件组成、物联网无线通讯技术、无线传感网、无线感知技术、物联网的数据融合技术、物联网的安全问题和物联网应用、边缘计算等。
","
1) 掌握传感网技术（组网技术、硬件平台、操作系统）、定位技术（定位系统、定位方法）、互联网与移动互联网、无线接入（WiFi无线接入、蓝牙、ZigBee、60GHz毫米波通信）、自动识别技术与RFID技术。（支撑毕业要求1&2&3）
2) 掌握物联网基本应用（智慧交通、智能家居、智能物流、环境监测），掌握物联网科技发展最新动态（云计算、边缘计算、边缘智能、区块链）。（支撑毕业要求6&7）
3）掌握物联网中数据处理的一般流程与相关程序的基本框架，掌握AIoT的概念与基础理论知识，了解AIoT中AI与IoT结合的模式与困难，了解针对特定场景与需求的AIoT套件设计。（支撑毕业要求4）
4）了解典型传感器的工作原理、电路组成与特性，能够举例分析物联网中传感器的应用。（支撑毕业要求5）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√
√









课程目标2





√
√





课程目标3



√








课程目标4




√







课程目标5



√








课程目标6




√







"
2440108,"
物联网被称为信息社会的第三次浪潮，物联网技术将人类生存的物理世界网络化、信息化，将分离的物理世界和信息空间互联整合，代表了未来网络的发展方向。物联网技术称为未来社会经济发展、社会进步和科技创新的重要基础设施。本课程的目的是使学生掌握物联网技术的定义和基本原理及应用，了解物联网技术的发展，了解物联网的关键技术和方法。其中包括：物联网基本概念、无线感知技术、物联网硬件组成、物联网无线通讯技术、无线传感网、无线感知技术、物联网的数据融合技术、物联网的安全问题和物联网应用、边缘计算等。
","
1) 掌握传感网技术（组网技术、硬件平台、操作系统）、定位技术（定位系统、定位方法）、互联网与移动互联网、无线接入（WiFi无线接入、蓝牙、ZigBee、60GHz毫米波通信）、自动识别技术与RFID技术。（支撑毕业要求1&2&3）
2) 掌握物联网基本应用（智慧交通、智能家居、智能物流、环境监测），掌握物联网科技发展最新动态（云计算、边缘计算、边缘智能、区块链）。（支撑毕业要求6&7）
3）掌握物联网中数据处理的一般流程与相关程序的基本框架，掌握AIoT的概念与基础理论知识，了解AIoT中AI与IoT结合的模式与困难，了解针对特定场景与需求的AIoT套件设计。（支撑毕业要求4）
4）了解典型传感器的工作原理、电路组成与特性，能够举例分析物联网中传感器的应用。（支撑毕业要求5）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√
√









课程目标2





√
√





课程目标3



√








课程目标4




√







课程目标5



√








课程目标6




√







"
2440109,"
“逆向工程分析技术”是网络安全专业学生的专业选修课程，是一门涉及计算机科学、网络技术、信息安全技术等多种学科的实践性极强的学科。该课程主要介绍Windows平台上各种调试工具的使用方法以及常见的软件保护技术。通过本课程的学习，可以了解并掌握Windows平台上的可执行程序的逆向技术，具备分析、调试Windows可执行程序的基本能力，也为进一步学习和研究网络信息安全技术的研究打下坚实的基础。
","
1. 了解软件逆向分析的基本原理和技术，掌握常见软件逆向分析工具的使用，能够解决软件逆向分析工作的实际需求。 （支撑毕业要求1.2）
2.  掌握x86与x64体系结构、内存模型与内存管理、指令分类及常用指令功能，掌握PE文件格式，包括基地址与相对虚拟地址、导入地址表与导出地址表、基址重定位等技术，了解头压缩技术和相关PE工具的使用。能根据实际需求，给出逆向分析解决方案。（支撑毕业要求3.1）
3. 掌握DLL注入的概念和基本方法、远程线程创建、消息钩取、DLL卸载、API钩取的基本原理，了解代码混淆技术，能够编写DLL注入和API钩取程序。（支撑毕业要求5.1）
4. 利用已有知识对常见软件进行逆向分析，并可以根据实际要求，结合逆向分析技术，给出解决方案，进行团队合作，与同行进行沟通和交流。（支撑毕业要求5.2）。
毕业要求
毕业要求指标点
支撑强度
课程目标
1.工程知识
1.2能够理解和掌握网络安全领域的专业知识、基本方法和工程知识，并具有计算思维能力和系统能力。
H（0.1）
1
3. 研究
3.1能够熟练应用软件工程领域工程设计和产品开发的全周期全流程方法与技术，评价相关影响因素，设计针对复杂软件工程问题的合理解决方案。
H（0.2）
2
5. 使用现代工具
5.1掌握软件工程专业所需的基本技术、基础资源和基本工具的使用原理和使用方法，并理解它们的局限性；能够针对复杂软件工程问题的不同需求，选择与使用恰当的技术、资源和软硬件工具。
H（0.2）
3
5.2能够开发或选用恰当的现代工具对复杂软件工程问题进行预测和模拟，并分析其局限性。
H（0.1）
4

四、基本要求
逆向工程技术是一门涉及计算机科学、网络技术、信息安全技术等多种学科的实践性极强的课程。通过软件逆向工程课程的开设，对学生多方面能力的提高是有益处的，可以让学生了解软件逆向工程的基本概念，掌握逆向工程的基本方法和技术，达到能够独立开展基本的软件分析工作，参与软件逆向分析工程的效果，建立软件分析的逆向思维方式。逆向工程不同于软件开发，要求学生既要掌握软件开发的基本技术，又要掌握相对底层的技术，能够将计算机科学中最基础各个专业课程融会贯通，对提高学生的程序设计能力也是有极大的帮助。
五、教学内容
分章节说明教学内容，并说明教学重点与难点、主要的教学模式（包括授课、自学、实验、课程设计、大作业等）以及对应的知识、能力要求。 
1. 授课
第1章 软件逆向工程概述
知识点：逆向工程的概念和基本方法，软件逆向工程的应用，软件逆向工程的合法性。
难点: 软件逆向工程的具体应用。
教学模式：课堂授课、课后复习，指导学生查阅相关文献。
能力要求：能够熟悉逆向工程的概念和基本方法。 
 
第二章 x86与x64体系结构
知识点：x86基本概念，权限级别，IA-32内存模型与内存管理，不同操作模式下的内存管理，IA-32数据类型，函数调用、中断与异常, 指令一般格式，指令分类及常用指令功能，x64体系结构。
难点: 内存模型与内存管理。
教学模式：课堂授课、课后复习，指导学生使用工具对相关概念进行深入理解。
能力要求：能够熟悉指令分类及常用指令功能，并了解常见的中断与异常。

第三章 PE文件格式
知识点：PE文件格式，基地址与相对虚拟地址，导入地址表与导出地址表，基址重定位技术，运行时压缩和PE工具。
难点: 基址重定位技术和PE头部压缩技术。
教学模式：课堂授课、课后复习，指导学生使用工具进行实际操作。
能力要求：能够熟悉PE文件格式，并了解基址重定位技术。

第四章 DLL注入
知识点：Windows系统编程基础，Unicode和字符编码，常用Windows核心API简介，DLL注入的基本方法、远程线程创建，DLL卸载，API钩取。
难点: API钩取和代码注入。
教学模式：课堂授课、课后复习，指导学生使用工具进行实际操作。
能力要求：能够熟悉DLL注入方法，并了解常见的API钩取技术。

第五章 代码混淆技术
知识点：理论上的安全性，常见的数据混淆，控制流混淆技术，组合使用函数内联与外联，通过跳转破坏局部性，不透明谓词，基于处理器的控制流间接化，插入无效代码等。
难点: 控制流混淆技术。
教学模式：课堂授课、课后复习，指导学生使用工具进行实际操作。
能力要求：能够熟悉数据混淆，控制流混淆技术，并能够检测常见软件的所使用的代码混淆技术。

2. 实验
实验一、逆向工程基础工具的使用
实验目的：掌握常见逆向工程工具使用，加深对逆向工程技术的理解
实验内容:逆向工程工具使用实验，命令行编译链接工具的使用，编辑链接参数配置，depends、dumpbin等二进制程序基础工具使用。
实验二、反汇编器的使用
实验目的：掌握常见的反汇编器的使用；了解反汇编器的工作原理。
实验内容：反汇编器的使用，调试器windbg、gdb的使用及调试技巧，利用反汇编工具等查看汇编指令，进行单步调试。
实验三、逆向分析实战
实验目的：了解软件逆向分析流程，掌握常见分析方法及操作流程。
实验内容：深入分析寄存器在指令执行的作用下变化；编译器调试选项对编译后程序的影响，调试函数调用过程中栈变化情况，栈帧构造、局部变量内存分片和访问，条件跳转的逆向分析等。 
实验"
2440110,"
在云计算、物联网、大数据等现代信息系统环境下，网络安全机制自身的安全性受到了严峻挑战，必须从体系化层面来提出解决方案。可信计算就是为安全体系提供支撑的重要技术。可信计算研究系统中可信计算环境的构建以及通过可信计算支撑系统安全问题，其内容涉及信息系统和信息安全的多个层面，是一个安全理论、密码学技术和工程实现高度结合的学科。
","
总的教学目标是：使学生掌握可信计算的基本概念，在系统级上认识安全机制，了解安全机制的可信保障需求，学习可信计算基本功能的原理和使用方法，以及利用可信计算功能支撑安全机制的设计和开发方法，了解可信计算对系统安全的支撑作用，体验通过可信计算加固系统，改进系统安全方案的过程，增强开发过程中分析问题和持续改进的意识。该目标分解为以下子目标。
课程目标1：了解可信计算的需求，理解可信根和可信链的基本概念，理解主动可信架构和被动可信架构的区别，可提出基于主动可信控制的安全解决方案。支持毕业要求3.4。
课程目标2：了解可信计算技术细节，能够开发实现可信计算具体功能的模块，并能将模块用于可信计算工程项目。支持毕业要求4.3。
课程目标3：增强从体系化角度寻找系统设计上的安全漏洞的能力，并训练学生通过改进安全功能模块，通过可信计算技术防范安全漏洞。支持毕业要求5.3。
课程目标4：要求学生们搭建可信计算模拟用例来模拟实际环境，并通过模拟用例的运行验证方案的可行性，支持毕业要求6.2。
表1 课程目标与毕业要求拆分指标点的对应关系
序号
课程目标
毕业要求拆分指标点
3.4
4.3
5.3
6.2
1
理解可信计算的基本概念
●



2
掌握可信计算功能模块开发方法

●


3
了解通过可信计算技术防范安全漏洞能力


●

4
通过可信计算模拟用例模拟实际环境，验证可信计算方案可行性



●
"
2440110,"
在云计算、物联网、大数据等现代信息系统环境下，网络安全机制自身的安全性受到了严峻挑战，必须从体系化层面来提出解决方案。可信计算就是为安全体系提供支撑的重要技术。可信计算研究系统中可信计算环境的构建以及通过可信计算支撑系统安全问题，其内容涉及信息系统和信息安全的多个层面，是一个安全理论、密码学技术和工程实现高度结合的学科。
","
总的教学目标是：使学生掌握可信计算的基本概念，在系统级上认识安全机制，了解安全机制的可信保障需求，学习可信计算基本功能的原理和使用方法，以及利用可信计算功能支撑安全机制的设计和开发方法，了解可信计算对系统安全的支撑作用，体验通过可信计算加固系统，改进系统安全方案的过程，增强开发过程中分析问题和持续改进的意识。该目标分解为以下子目标。
课程目标1：了解可信计算的需求，理解可信根和可信链的基本概念，理解主动可信架构和被动可信架构的区别，可提出基于主动可信控制的安全解决方案。支持毕业要求3.4。
课程目标2：了解可信计算技术细节，能够开发实现可信计算具体功能的模块，并能将模块用于可信计算工程项目。支持毕业要求4.3。
课程目标3：增强从体系化角度寻找系统设计上的安全漏洞的能力，并训练学生通过改进安全功能模块，通过可信计算技术防范安全漏洞。支持毕业要求5.3。
课程目标4：要求学生们搭建可信计算模拟用例来模拟实际环境，并通过模拟用例的运行验证方案的可行性，支持毕业要求6.2。
表1 课程目标与毕业要求拆分指标点的对应关系
序号
课程目标
毕业要求拆分指标点
3.4
4.3
5.3
6.2
1
理解可信计算的基本概念
●



2
掌握可信计算功能模块开发方法

●


3
了解通过可信计算技术防范安全漏洞能力


●

4
通过可信计算模拟用例模拟实际环境，验证可信计算方案可行性



●
"
2440110,"
在云计算、物联网、大数据等现代信息系统环境下，网络安全机制自身的安全性受到了严峻挑战，必须从体系化层面来提出解决方案。可信计算就是为安全体系提供支撑的重要技术。可信计算研究系统中可信计算环境的构建以及通过可信计算支撑系统安全问题，其内容涉及信息系统和信息安全的多个层面，是一个安全理论、密码学技术和工程实现高度结合的学科。
","
总的教学目标是：使学生掌握可信计算的基本概念，在系统级上认识安全机制，了解安全机制的可信保障需求，学习可信计算基本功能的原理和使用方法，以及利用可信计算功能支撑安全机制的设计和开发方法，了解可信计算对系统安全的支撑作用，体验通过可信计算加固系统，改进系统安全方案的过程，增强开发过程中分析问题和持续改进的意识。该目标分解为以下子目标。
课程目标1：了解可信计算的需求，理解可信根和可信链的基本概念，理解主动可信架构和被动可信架构的区别，可提出基于主动可信控制的安全解决方案。支持毕业要求3.4。
课程目标2：了解可信计算技术细节，能够开发实现可信计算具体功能的模块，并能将模块用于可信计算工程项目。支持毕业要求4.3。
课程目标3：增强从体系化角度寻找系统设计上的安全漏洞的能力，并训练学生通过改进安全功能模块，通过可信计算技术防范安全漏洞。支持毕业要求5.3。
课程目标4：要求学生们搭建可信计算模拟用例来模拟实际环境，并通过模拟用例的运行验证方案的可行性，支持毕业要求6.2。
表1 课程目标与毕业要求拆分指标点的对应关系
序号
课程目标
毕业要求拆分指标点
3.4
4.3
5.3
6.2
1
理解可信计算的基本概念
●



2
掌握可信计算功能模块开发方法

●


3
了解通过可信计算技术防范安全漏洞能力


●

4
通过可信计算模拟用例模拟实际环境，验证可信计算方案可行性



●
"
2440111,"
“物联网安全”是网络空间安全专业本科生的自主课程。该课程为物联网的正常使用和运行提供可靠的安全保障。通过对本课程的学习，学习和掌握物联网安全体系结构、每一层次采用的安全防范措施及物联网安全法律、法规等方面的基础知识。
","
总体目标：在知识方面，要求了解物联网体系结构的基础知识。具体包括物联网安全的层次模型；物联网每层的安全特点等；进一步学习和掌握密码学的有关知识，具体包括对称密码体制、非对称密码体制、信息完整性保护机制、数字签名、身份认证等密码学等；掌握物联网每层采用的主流的安全防范措施，具体包括：感知层安全、网络层安全、应用层安全等；了解物联网安全管理以及物联网安全法律、法规等方面的基础知识。为物联网建造一个立体的、全方位的安全防护体系，培养学生掌握物联网安全方面的基本理论、知识、方法及设计、维护物联网安全的能力。
通过对知识的掌握，培养学生的物联网安全技术的设计、实现及分析能力，提高他们的专业素质，增强他们理论结合实际能力。主要为毕业要求3.4、4.2、4.3、8.2的实现提供支持。该目标分解为以下子目标。
课程目标1：物联网安全技术是一门理论和实践相结合的课程，既能让学生掌握相关的数学知识和自然科学知识，又能学以致用，针对物联网安全实际场景选择或建立适当的安全模型。支持毕业要求3.4。
课程目标2：物联网安全技术涉及对数据的加解密、隐私信息的隔离、去关联等技术，需要良好的数学训练，能够培养学生应用数学、自然科学和工程科学的基本原理，准确识别、表达、并通过文献研究分析信息安全领域问题。支持毕业要求4.2。
课程目标3：培养学生针对信息安全问题，开发、选择与使用信息安全技术、资源和工具，对问题现象进行预测与模拟的能力。物联网安全技术是当今的研究热点，也是研究难点，需要综合运用现代化的检索手段、数学、计算机、通信等多学科的知识进行整理、模拟、预测及验证，提高学生综合解决问题的能力。支持毕业要求4.3。
课程目标4：对于毕业要求6.1提供支持，物联网安全技术涉及物联网安全管理以及物联网安全法律、法规等方面的基础知识。既能让学生学习理论知识，又能更好的理解物联网安全对社会和个人的影响，增强学生法律和物联网数据防护意识。支持毕业要求8.2。


表1 课程目标与毕业要求拆分指标点的对应关系
序号
课程目标
毕业要求拆分指标点
3.4
4.2
4.3
8.2
1
理解物联网安全的基本概念和物联网安全模型
●



2
掌握物联网安全的基本原理，分析物联网安全领域问题

●


3
能够综合运用所学知识解决物联网安全问题


●

4
学习物联网安全的管理和法律知识，增强学生法律和物联网数据防护意识



●
"
2440112,"
知识表示与推理是人工智能领域的一个重要分支，主要研究在智能系统中如何对知识进行描述，以及如何应用所描述的知识进行推理和决策等。知识表示与推理是传统人工智能的主要研究方向之一，也是人工智能从低层次的感知智能向深层次的认知智能跨越所必须突破的关键技术。知识表示与推理课程是人工智能专业，尤其是人工智能专业知识工程方向的一门重要的专业基础课。
","
通过本课程的学习，使学生了解知识表示与推理的基本理论和基本原理，掌握知识表示的常用语言，能应用常见的知识推理工具进行推理。学会用“形式化思维”去思考和解决人工智能领域常见的各种问题。
目标如下：
（一）掌握基于逻辑的各种常见知识表示语言，包括命题逻辑、描述逻辑、一阶逻辑和逻辑程序等；了解用于知识推理的各种常见算法，包括SAT求解和消解原理等。
（二）了解知识表示的其他方法，如产生式规则、框架等。
（三）掌握常见的知识推理工具，如SAT求解器、ASP求解器等。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√

√








课程目标2
√
√

√








课程目标2

√

√








"
2440113,"
在科学，工程，商业和日常人类活动中产生的信息的数量和复杂性正以惊人的速度增长。本课程的目的是使学生了解可以增强对复杂数据的理解的可视化表示方法和技术。良好的可视化效果不仅可以直观地呈现数据，还可以通过提高理解力，沟通能力和决策能力来实现。
在本课程中，学生将学习人类视觉系统如何处理和感知图像，可视化的良好设计实践，用于可视化来自各个领域的数据的工具，使用VTK等进行交互式可视化应用程序的编程。
","
1. 通过本课程学习，要求学生了解国内外信息可视化的研究背景，掌握基本的数据预处理方法，二维标量场数据等值线抽取算法，三维标量场数据等值面生成和绘制算法，三维标量场数据的体光照模型和体绘制算法;了解高维非空间数据的典型可视化方法，地理信息数据的典型可视化方法，关系网络数据的典型可视化方法，文本数据的典型可视化方法。
要求学生在学完本课程后，掌握信息可视化的基本算法和实现方法，并能使用学到的知识综合性地解决实际问题，具备基本的可视化编程能力。（支撑毕业要求1.2）
2. 通过对问题的分析求解训练问题分析能力， 能够应用数学、自然科学和工程科学的基本原理，使用本课程信息可视分析的思维模式，对复杂工程问题进行识别、分析、归类和表达，掌握运用可视分析技术对复杂工程问题进行综合分析与抽象表示和建模的能力，以获得有效结论。（支撑毕业要求4.1，4.2）
3. 通过对大型问题的分解训练团队合作及沟通能力，编写的程序符合软件工程规范。培养良好的计算机、软件工程师的职业道德规范，具有良好的社会责任感。（支撑毕业要求11.2）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
工程知识
1.2











问题分析



4.1，4.2








团队合作










11.2

"
2440113,"
在科学，工程，商业和日常人类活动中产生的信息的数量和复杂性正以惊人的速度增长。本课程的目的是使学生了解可以增强对复杂数据的理解的可视化表示方法和技术。良好的可视化效果不仅可以直观地呈现数据，还可以通过提高理解力，沟通能力和决策能力来实现。
在本课程中，学生将学习人类视觉系统如何处理和感知图像，可视化的良好设计实践，用于可视化来自各个领域的数据的工具，使用VTK等进行交互式可视化应用程序的编程。
","
1. 通过本课程学习，要求学生了解国内外信息可视化的研究背景，掌握基本的数据预处理方法，二维标量场数据等值线抽取算法，三维标量场数据等值面生成和绘制算法，三维标量场数据的体光照模型和体绘制算法;了解高维非空间数据的典型可视化方法，地理信息数据的典型可视化方法，关系网络数据的典型可视化方法，文本数据的典型可视化方法。
要求学生在学完本课程后，掌握信息可视化的基本算法和实现方法，并能使用学到的知识综合性地解决实际问题，具备基本的可视化编程能力。（支撑毕业要求1.2）
2. 通过对问题的分析求解训练问题分析能力， 能够应用数学、自然科学和工程科学的基本原理，使用本课程信息可视分析的思维模式，对复杂工程问题进行识别、分析、归类和表达，掌握运用可视分析技术对复杂工程问题进行综合分析与抽象表示和建模的能力，以获得有效结论。（支撑毕业要求4.1，4.2）
3. 通过对大型问题的分解训练团队合作及沟通能力，编写的程序符合软件工程规范。培养良好的计算机、软件工程师的职业道德规范，具有良好的社会责任感。（支撑毕业要求11.2）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
工程知识
1.2











问题分析



4.1，4.2








团队合作










11.2

"
2440113,"
在科学，工程，商业和日常人类活动中产生的信息的数量和复杂性正以惊人的速度增长。本课程的目的是使学生了解可以增强对复杂数据的理解的可视化表示方法和技术。良好的可视化效果不仅可以直观地呈现数据，还可以通过提高理解力，沟通能力和决策能力来实现。
在本课程中，学生将学习人类视觉系统如何处理和感知图像，可视化的良好设计实践，用于可视化来自各个领域的数据的工具，使用VTK等进行交互式可视化应用程序的编程。
","
1. 通过本课程学习，要求学生了解国内外信息可视化的研究背景，掌握基本的数据预处理方法，二维标量场数据等值线抽取算法，三维标量场数据等值面生成和绘制算法，三维标量场数据的体光照模型和体绘制算法;了解高维非空间数据的典型可视化方法，地理信息数据的典型可视化方法，关系网络数据的典型可视化方法，文本数据的典型可视化方法。
要求学生在学完本课程后，掌握信息可视化的基本算法和实现方法，并能使用学到的知识综合性地解决实际问题，具备基本的可视化编程能力。（支撑毕业要求1.2）
2. 通过对问题的分析求解训练问题分析能力， 能够应用数学、自然科学和工程科学的基本原理，使用本课程信息可视分析的思维模式，对复杂工程问题进行识别、分析、归类和表达，掌握运用可视分析技术对复杂工程问题进行综合分析与抽象表示和建模的能力，以获得有效结论。（支撑毕业要求4.1，4.2）
3. 通过对大型问题的分解训练团队合作及沟通能力，编写的程序符合软件工程规范。培养良好的计算机、软件工程师的职业道德规范，具有良好的社会责任感。（支撑毕业要求11.2）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
工程知识
1.2











问题分析



4.1，4.2








团队合作










11.2

"
2440114,"
本课程是以计算机视觉基础、结合模式识别的专业选修课程。主要包括计算机视觉基础原理原理及视觉中的识别基础。图像处理、机器学习、模式识别作为基础课程，主要内容包括：（1）计算机视觉的基本概念、发展历史及相关应用；（2）图像统计模型与视觉特征：概率框架下的分类与回归基础及图像特征提取；（3）视觉中的统计学习与推断：统计模型如何在图像中进行使用，基于视觉任务进行学习和推断；（4）图像分类：图像分类与优化算法；（5）时序模型：滤波算法与目标跟踪。
通过教学和实践，巩固学生计算机视觉的基本概念和算法；掌握计算机视觉中的主要建模方法和应用设计；培养学生综合运用所学知识解决实际问题的能力；训练学生逻辑思维能力和创造力，使他们能够了解具体应用领域的背景知识并结合实际需求，运用、改进甚至提出新的深度学习算法，达到理论联系实际。
","
1. 能够结合图像处理的具体任务特点，选择合适的图像处理算法（包括图像去噪、图像模糊化等）构建图像处理模型，并通过合适的测试集构建评价模型的性能。能够通过性能评价结果，解释模型及参数的意义，调整模型参数或改进算法以提高性能。（支撑毕业要求2）
2. 能够综合运用图像统计技术、聚类等模式识别技术对图像进行探索性分析，根据统计结果推测图像特点，反之，根据图像预估统计模型。能够可视化或评价这些统计信息的重要性，从而调整算法参数或改进算法以获取更加有效的发现。（支撑毕业要求2）
3. 能够综合运用关键点提取技术、聚类技术对图像进行配准、特征构建及分类，能够熟练掌握不同类型特征的特点和使用场景，从而为特定任务选择适合特征。（支撑毕业要求2）
4. 能够运用机器学习和模式识别思想，改进经典图像分类模型的效果,包括基于经典特征的线性分类、支持向量机、卷积神经网络等。了解计算机视觉与模式识别在应用中的基本原理和典型案例。（支撑毕业要求3）
5. 能够根据复杂问题实际需求，进行团队合作，设计求解方案，能够清晰表述自己的设计思想，与他人进行沟通和交流，培养学生的创新思维和能力。（支撑毕业要求9和11 ）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√
 



 





课程目标3

√

 
 







课程目标4


√
 
 
 





 
课程目标5







 
√
 
√

"
2440115,"
知识图谱是一种大规模语义网络，已经成为大数据时代知识工程的代表性进展。知识图谱技术是实现机器认知智能和推动各行业智能化发展的关键基础技术。知识图谱也成为大规模知识工程的代表性实践，其学科日益完善。本课程力求涵盖知识图谱相关的基本概念与关键技术。简单的介绍知识图谱相关的基本概念后，系统地讲解知识图谱的构建、管理及实际应用。基本概念包括其定义、历史沿革、研究意义、应用价值和分类；知识图谱的构建包括知识表示、词汇挖掘与实体识别、关系抽取；管理包括知识图谱的建模与存储、查询与检索；应用包括搜索与推荐、问答等。

","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。
1． 了解知识图谱的基本概念，掌握不同类型的知识图谱算法在实际应用中的主要用途和使用方法。（支撑毕业要求1、2、5、6）
2． 针对实际的知识图谱任务，能够准确的选取算法，能够对实际问题进行高度的抽象，形式化实际任务描述的具体问题的核心内涵。（支撑毕业要求3）
3． 熟悉知识图谱相关的算法和主要思想，能够针对现实生活中的问题，选择合理的应用工具，进行方案设计。（支撑毕业要求5）
4． 能够使用常见的编程语言或平台设计与开发具体的解决方案解决实际问题。（支撑毕业要求9）
5． 理解知识图谱的发展历程和前沿技术的思想基础。（支撑毕业要求12）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√


√
√






课程目标2


√









课程目标3




√







课程目标4








√



课程目标5











√

"
2440115,"
知识图谱是一种大规模语义网络，已经成为大数据时代知识工程的代表性进展。知识图谱技术是实现机器认知智能和推动各行业智能化发展的关键基础技术。知识图谱也成为大规模知识工程的代表性实践，其学科日益完善。本课程力求涵盖知识图谱相关的基本概念与关键技术。简单的介绍知识图谱相关的基本概念后，系统地讲解知识图谱的构建、管理及实际应用。基本概念包括其定义、历史沿革、研究意义、应用价值和分类；知识图谱的构建包括知识表示、词汇挖掘与实体识别、关系抽取；管理包括知识图谱的建模与存储、查询与检索；应用包括搜索与推荐、问答等。

","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。
1． 了解知识图谱的基本概念，掌握不同类型的知识图谱算法在实际应用中的主要用途和使用方法。（支撑毕业要求1、2、5、6）
2． 针对实际的知识图谱任务，能够准确的选取算法，能够对实际问题进行高度的抽象，形式化实际任务描述的具体问题的核心内涵。（支撑毕业要求3）
3． 熟悉知识图谱相关的算法和主要思想，能够针对现实生活中的问题，选择合理的应用工具，进行方案设计。（支撑毕业要求5）
4． 能够使用常见的编程语言或平台设计与开发具体的解决方案解决实际问题。（支撑毕业要求9）
5． 理解知识图谱的发展历程和前沿技术的思想基础。（支撑毕业要求12）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√


√
√






课程目标2


√









课程目标3




√







课程目标4








√



课程目标5











√

"
2440115,"
知识图谱是一种大规模语义网络，已经成为大数据时代知识工程的代表性进展。知识图谱技术是实现机器认知智能和推动各行业智能化发展的关键基础技术。知识图谱也成为大规模知识工程的代表性实践，其学科日益完善。本课程力求涵盖知识图谱相关的基本概念与关键技术。简单的介绍知识图谱相关的基本概念后，系统地讲解知识图谱的构建、管理及实际应用。基本概念包括其定义、历史沿革、研究意义、应用价值和分类；知识图谱的构建包括知识表示、词汇挖掘与实体识别、关系抽取；管理包括知识图谱的建模与存储、查询与检索；应用包括搜索与推荐、问答等。

","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。
1． 了解知识图谱的基本概念，掌握不同类型的知识图谱算法在实际应用中的主要用途和使用方法。（支撑毕业要求1、2、5、6）
2． 针对实际的知识图谱任务，能够准确的选取算法，能够对实际问题进行高度的抽象，形式化实际任务描述的具体问题的核心内涵。（支撑毕业要求3）
3． 熟悉知识图谱相关的算法和主要思想，能够针对现实生活中的问题，选择合理的应用工具，进行方案设计。（支撑毕业要求5）
4． 能够使用常见的编程语言或平台设计与开发具体的解决方案解决实际问题。（支撑毕业要求9）
5． 理解知识图谱的发展历程和前沿技术的思想基础。（支撑毕业要求12）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√


√
√






课程目标2


√









课程目标3




√







课程目标4








√



课程目标5











√

"
2440116,"
信息检索与智能问答是一门面向人工智能专业的选修课程；同时也适用于社会科学相关专业学生拓展知识结构。课程涉及到信息检索的背景与发展趋势、基本概念、原理及其在复杂社交情景下的社会媒体挖掘。主要内容包括两个方面：（1）介绍传统及前沿信息检索的基本理论和方法；（2）探讨信息检索及社会媒体挖掘技术在复杂社会网络环境中的应用。旨在培养学生抓住前沿科学和技术、采用理论解决实际问题的能力，并激发学生的互联网创业热情。
","
1. 掌握信息检索与智能问答的基本概念和理论。（支撑毕业要求1）
2. 能够应用信息检索与智能问答基本理论与技术对人工智能领域的复杂问题进行分析。（支撑毕业要求2）
3. 能够根据信息检索与智能问答的具体实现理论，结合实际问题，提出相关任务系统的设计方案，并能在设计环节中体现创新意识，考虑社会、健康、安全、法律、文化以及环境等因素。（支撑毕业要求3）
4. 能够针对现实生活中的复杂信息检索与智能问答问题，选择合理的设计方案，并能够初步实现。（支撑毕业要求5）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4





√






课程目标5












"
2440118,,
2440119,"
本课程讲授区块链技术基本原理、技术应用现状、区块链前沿技术发展方向及应用前景。讲授并上机实践区块链智能合约的开发，共识算法和区块链底层代码的学习与开发。通过本课程可以了解区块链去中心化、不可篡改的特性，了解区块链在现代互联网，尤其是金融科技领域的应用价值。
","
通过本课程的学习，学生应达到以下知识与能力目标：
1. 在本课程中，学生应了解已学习的分布式系统、密码学知识在区块链领域中如何被使用，帮助学生了解在复杂的工程中如何组织各方面的计算机技术知识。学生应了解分布式系统的基本问题和定理，包括了解一致性问题；掌握CAP原理中不可能三角分别是什么；了解拜占庭共识算法的复杂度和大致思路；定性了解拜占庭共识算法的优缺点。学生应在课程中掌握基本的密码学在区块链中的应用，包括掌握Hash算法的使用；了解并能推导区块链系统中的公私钥账户体系；能够实践申请并使用区块链系统的账户；了解Merkle tree的数据结构。对应毕业要求3.1.1数学相关知识（L3）和3.4.1 计算机网络、数据库等专业基础知识（L4）。
2. 在本课程中，学生通过学习复杂的区块链系统，来了解大型的系统性工程。通过各方面知识的整理帮助学生了解区块链技术的原理，了解区块链本质是一个去中心化的数据库。区块链是继承了多项科研技术和工程开发的系统性工程。学生在课程中学习并了解比特币和以太坊的基本技术原理，包括了解比特币诞生的历史背景和初衷；了解比特币的UTXO机制；了解比特币的挖矿基本原理；了解比特币的PoW共识机制。学生在课程中学习并了解以太坊的基本技术原理，包括能在宏观上对比以太坊和比特币的技术差异；能安装使用以太坊的客户端；了解以太坊的智能合约原理并撰写以太坊智能合约代码实现简单的合约代码，如基于ERC20的数字代币发行代码。对应毕业要求3.3掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力，以及4.2 能够根据所学专业知识的基本原理，正确识别与表达计算机科学与技术领域中的计算机基础软硬件系统分析设计以及各类计算机应用中的复杂工程问题，能够通过文献研究寻求计算机科学与技术领域复杂工程问题的解决方法。
3. 学生还应了解区块链技术的发展现状和未来的发展趋势，通过前沿技术资料的搜集和阅读，了解区块链的去中心化特性，了解区块链未来的应用场景，了解区块链作为一种前沿技术对社会产生的深远影响。对应毕业要求8.2.1 软件工程对社会的影响。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√
√








课程目标3







√




"
2440119,"
本课程讲授区块链技术基本原理、技术应用现状、区块链前沿技术发展方向及应用前景。讲授并上机实践区块链智能合约的开发，共识算法和区块链底层代码的学习与开发。通过本课程可以了解区块链去中心化、不可篡改的特性，了解区块链在现代互联网，尤其是金融科技领域的应用价值。
","
通过本课程的学习，学生应达到以下知识与能力目标：
1. 在本课程中，学生应了解已学习的分布式系统、密码学知识在区块链领域中如何被使用，帮助学生了解在复杂的工程中如何组织各方面的计算机技术知识。学生应了解分布式系统的基本问题和定理，包括了解一致性问题；掌握CAP原理中不可能三角分别是什么；了解拜占庭共识算法的复杂度和大致思路；定性了解拜占庭共识算法的优缺点。学生应在课程中掌握基本的密码学在区块链中的应用，包括掌握Hash算法的使用；了解并能推导区块链系统中的公私钥账户体系；能够实践申请并使用区块链系统的账户；了解Merkle tree的数据结构。对应毕业要求3.1.1数学相关知识（L3）和3.4.1 计算机网络、数据库等专业基础知识（L4）。
2. 在本课程中，学生通过学习复杂的区块链系统，来了解大型的系统性工程。通过各方面知识的整理帮助学生了解区块链技术的原理，了解区块链本质是一个去中心化的数据库。区块链是继承了多项科研技术和工程开发的系统性工程。学生在课程中学习并了解比特币和以太坊的基本技术原理，包括了解比特币诞生的历史背景和初衷；了解比特币的UTXO机制；了解比特币的挖矿基本原理；了解比特币的PoW共识机制。学生在课程中学习并了解以太坊的基本技术原理，包括能在宏观上对比以太坊和比特币的技术差异；能安装使用以太坊的客户端；了解以太坊的智能合约原理并撰写以太坊智能合约代码实现简单的合约代码，如基于ERC20的数字代币发行代码。对应毕业要求3.3掌握软件工程领域各因素之间的相互间的关系，具备分析软件工程中复杂问题的能力，以及4.2 能够根据所学专业知识的基本原理，正确识别与表达计算机科学与技术领域中的计算机基础软硬件系统分析设计以及各类计算机应用中的复杂工程问题，能够通过文献研究寻求计算机科学与技术领域复杂工程问题的解决方法。
3. 学生还应了解区块链技术的发展现状和未来的发展趋势，通过前沿技术资料的搜集和阅读，了解区块链的去中心化特性，了解区块链未来的应用场景，了解区块链作为一种前沿技术对社会产生的深远影响。对应毕业要求8.2.1 软件工程对社会的影响。

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2


√
√








课程目标3







√




"
2440120,"
计算机视觉方向聚焦人类视觉智能，建设涵盖智能视觉感知、视觉增强与恢复、视觉理解的全链条。扎根理论、突破瓶颈、面向产业、输出人才、产学研结合
教授计算机视觉的基本概念、原理、算法和常用方法，安排16课时的上机教学内容，培养计算机视觉分析处理的开发能力。
","
了解计算机视觉的发展和特点；掌握光场和全光函数的方法与特点；掌握双目视觉、多目视觉的原理与方法；了解SLAM技术；掌握深度相机及其应用方法；掌握运动捕捉方法和语义理解方法。
1. 了解计算机视觉所涉及的学科和领域，掌握计算机视觉发展过程和趋势，了解计算机视觉技术的学科和技术特点。（支撑毕业要求1）
2. 了解光场和全光函数的方法与特点，掌握光场概念、参数化描述、光场相机、光场应用。（支撑毕业要求2）
3. 了解双目视觉、多目视觉的原理与方法，掌握双目视觉原理及场景的深度估计、多视角立体原理与方法。（支撑毕业要求3）
4. 了解SLAM技术，理解机器人视觉的基础算法。（支撑毕业要求4）
5. 掌握深度相机及其应用方法，能够基于Kinect相机实现深度图像的超分辨率与恢复方法。（支撑毕业要求5）
6. 掌握运动捕捉方法和语义理解方法，掌握运动捕捉原理、基础与应用，了解图像分割、视频分割、目标检测。（支撑毕业要求6）
7. 能够根据项目需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5




√







课程目标6





√






课程目标7








√
√



"
2440120,"
计算机视觉方向聚焦人类视觉智能，建设涵盖智能视觉感知、视觉增强与恢复、视觉理解的全链条。扎根理论、突破瓶颈、面向产业、输出人才、产学研结合
教授计算机视觉的基本概念、原理、算法和常用方法，安排16课时的上机教学内容，培养计算机视觉分析处理的开发能力。
","
了解计算机视觉的发展和特点；掌握光场和全光函数的方法与特点；掌握双目视觉、多目视觉的原理与方法；了解SLAM技术；掌握深度相机及其应用方法；掌握运动捕捉方法和语义理解方法。
1. 了解计算机视觉所涉及的学科和领域，掌握计算机视觉发展过程和趋势，了解计算机视觉技术的学科和技术特点。（支撑毕业要求1）
2. 了解光场和全光函数的方法与特点，掌握光场概念、参数化描述、光场相机、光场应用。（支撑毕业要求2）
3. 了解双目视觉、多目视觉的原理与方法，掌握双目视觉原理及场景的深度估计、多视角立体原理与方法。（支撑毕业要求3）
4. 了解SLAM技术，理解机器人视觉的基础算法。（支撑毕业要求4）
5. 掌握深度相机及其应用方法，能够基于Kinect相机实现深度图像的超分辨率与恢复方法。（支撑毕业要求5）
6. 掌握运动捕捉方法和语义理解方法，掌握运动捕捉原理、基础与应用，了解图像分割、视频分割、目标检测。（支撑毕业要求6）
7. 能够根据项目需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）

毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5




√







课程目标6





√






课程目标7








√
√



"
2440122,"
虚拟现实技术（VR）和增强现实技术（AR）在我们生活中的应用越来越广泛，在教育界的应用更是意义显著，对提高教学效率和学生学习效果尤为重要，大学生需要成为虚拟现实技术的应用者与受益者。但当今真正懂得和了解VR与AR的人并不多，为了贯彻这个理念，本教学团队决定在软件学院开设「虚拟现实概论」这一门课。
本门课概念清晰、要点突出、说明细致透彻、以大量的典型案例贯穿其中的软硬件主旨。此外为了便于学生学习，上课特别对晦涩难懂的专业词汇全部进行了详细的反覆说明，使学生能够由浅入深地认识和掌握虚拟现实及增强现实技术，从而促进该技术的普及与应用。另外，本门课亦有上机课，透过上机的训练，让学生练习以滚球游戏为模版，以及Unity3D的设计工具来实作AR版的Android程序。

","
2016被业界称为“VR元年”，随着Oculus Rift， HTC Vive和索尼的PS VR全部亮相，虚拟现实热潮被点燃，在过去一年多的时间里，包括阿里、乐视、暴风科技等在内的40多家上市公司宣布进军VR领域。VR行业成为投资机构的热门投资板块。虚拟现实及增强现实正朝着下一代信息和计算平台的方向快速发展。同时使用者对虚拟现实体验要求变得越来越高时，对引擎底层的开发和优化能力也显得愈加重要。这正是国内众多开发者缺少的。在虚拟现实的时代，中国庞大的用户基数更是发展虚拟现实产业的先天优势。无论国内还是国际，中国和世界站在同一起跑线，虚拟现实与增强现实如何和各个领域结合产生更大的价值，如何能抓住机遇进入这个有着巨大发展前景的行业成为全球技术发展的里程碑，是目前大家所关注的一个焦点。
而通过本课程的学习，主要在协助学生开发虚拟和现实世界的桥接技术，并以此来解决一般生活中不易做到的应用，并能够掌握社会国家的要求，成为该行业中的菁英。而本课程有以下的目标：

1. 了解虚拟现实的发展历史和主要分类，能够选择适当的虚拟现实设备解决实际需求。（支撑毕业要求8）
2. 能够应用虚拟现实技术对生活、安全等管理相关问题进行分析，并获得有效的解决方案。（支撑毕业要求4）
3. 能够多媒体系统与设计的理论，提出多道系统的设计方案，设计满足解决生产管理、行动通讯等问题的程序。（支撑毕业要求4）
4. 能够针对专案管理问题，理解不同的企业管理方案的区别，甄别实际内部的问题与需求并提出解决方案。（支撑毕业要求5）
5. 能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求9、10）
并透过这些目标，讓学生能够工程知识融会贯通，并具备设计/开发解决方案的能力，最后也能够在教师的引导下，学习如何使用现代工具来对复杂的科学问题进行研究，找到合理有效的方案。
     本专业课的课程目标与毕业要求的关系矩阵如下：



毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1







√




课程目标2



√








课程目标3



√








课程目标4




√







课程目标5








√
√



"
2440123,"
本课程为软件工程专业高年级必修。综合实训是软件工程专业本科生教学的一个重要实践环节，是课堂教学的延伸。通过本次实训，让同学们能够综合应用数学、自然科学和专业知识，深入的理解复杂工程问题，通过实际项目能够解决软件开发中的复杂工程问题，深入理解实际工程问题的解决方案，以便学生在走向工作岗位后能够尽快完成从一个学生到工程师的转变。
","
1. 能够综合应用数学、自然科学、工程基础和专业知识解决软件开发中的复杂工程问题，能够在综合考虑系统需求、系统开发周期、系统的维护性、计算资源、可靠性等诸多因素下设计、开发并实现一个软件系统（或者系统中的部分模块设计）。（支撑毕业要求3.3）
2. 学生能够在企业与企业开发团队紧密合作，通过企业开发团队的指导能够在开发实际工程项目过程中全面合理的评估项目可能涉及到的社会、健康、安全、法律、文化以及环境等因素的影响。（支撑毕业要求5.3）
3. 学生能够在企业与企业开发团队紧密合作，通过企业开发团队的指导能够深入理解合格软件工程师所应该具备的社会公德和职业道德，能够在企业实际项目开发过程中深入学习工程师的应遵循的职业规范，优秀工程师所应具备的职业道德和职业行为。（支撑毕业要求10.2）
4. 学生在企业实训过程中跟企业团队紧密配合，根据企业导师的指导完成项目团队的组建，全面了解项目团队的工作运行，在项目开发过程中充分理解在软件工程实践项目中的个人与团队的关系，理解个人和团队的利益统一性，充分了解团队中各个成员的工作职责和作用，全面了解团队的组建、运行过程。（支撑毕业要求11.1）
5. 学生在企业实训过程中跟企业团队紧密合作，根据企业导师统一安排与相关学科中的成员组成团队完成企业实际的工程问题，能够在项目开发过程中根据各自学科背景不同承担不同的角色，在整个项目开发过过程中，学生能够根据不同的角色学习互相配合、执行和团队的领导决策能力。（支撑毕业要求11.2）

"
2440124,"
本课程为计算机科学与技术专业高年级必修。综合实训是计算机科学与技术专业本科生教学的一个重要实践环节，是课堂教学的延伸。通过本次实训，让同学们能够综合应用数学、自然科学和专业知识，深入的理解复杂工程问题，通过实际项目能够解决计算机系统设计及应用开发中的复杂工程问题，深入理解实际工程问题的解决方案，以便学生在走向工作岗位后能够尽快完成从一个学生到工程师的转变。
","
1. 能够综合应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题，能够在综合考虑系统需求、系统开发周期、系统的维护性、计算资源、可靠性等诸多因素下设计、开发并实现一个计算机系统设计或应用开发设计（或者系统中的部分模块设计）。（支撑毕业要求3.3）
2. 学生能够在企业与企业开发团队紧密合作，通过企业开发团队的指导能够在开发实际工程项目过程中全面合理的评估项目可能涉及到的社会、健康、安全、法律、文化以及环境等因素的影响。（支撑毕业要求5.3）
3. 学生能够在企业与企业开发团队紧密合作，通过企业开发团队的指导能够深入理解合格工程师所应该具备的社会公德和职业道德，能够在企业实际项目开发过程中深入学习工程师的应遵循的职业规范，优秀工程师所应具备的职业道德和职业行为。（支撑毕业要求10.2）
4. 学生在企业实训过程中跟企业团队紧密配合，根据企业导师的指导完成项目团队的组建，全面了解项目团队的工作运行，在项目开发过程中充分理解在计算机工程实践项目中的个人与团队的关系，理解个人和团队的利益统一性，充分了解团队中各个成员的工作职责和作用，全面了解团队的组建、运行过程。（支撑毕业要求11.1）
5. 学生在企业实训过程中跟企业团队紧密合作，根据企业导师统一安排与计算机相关学科中的成员组成团队完成企业实际的工程问题，能够在项目开发过程中根据各自学科背景不同承担不同的角色，在整个项目开发过过程中，学生能够根据不同的角色学习互相配合、执行和团队的领导决策能力。（支撑毕业要求11.2）

"
2440124,"
本课程为计算机科学与技术专业高年级必修。综合实训是计算机科学与技术专业本科生教学的一个重要实践环节，是课堂教学的延伸。通过本次实训，让同学们能够综合应用数学、自然科学和专业知识，深入的理解复杂工程问题，通过实际项目能够解决计算机系统设计及应用开发中的复杂工程问题，深入理解实际工程问题的解决方案，以便学生在走向工作岗位后能够尽快完成从一个学生到工程师的转变。
","
1. 能够综合应用数学、自然科学、工程基础和专业知识解决计算机系统设计及应用开发中的复杂工程问题，能够在综合考虑系统需求、系统开发周期、系统的维护性、计算资源、可靠性等诸多因素下设计、开发并实现一个计算机系统设计或应用开发设计（或者系统中的部分模块设计）。（支撑毕业要求3.3）
2. 学生能够在企业与企业开发团队紧密合作，通过企业开发团队的指导能够在开发实际工程项目过程中全面合理的评估项目可能涉及到的社会、健康、安全、法律、文化以及环境等因素的影响。（支撑毕业要求5.3）
3. 学生能够在企业与企业开发团队紧密合作，通过企业开发团队的指导能够深入理解合格工程师所应该具备的社会公德和职业道德，能够在企业实际项目开发过程中深入学习工程师的应遵循的职业规范，优秀工程师所应具备的职业道德和职业行为。（支撑毕业要求10.2）
4. 学生在企业实训过程中跟企业团队紧密配合，根据企业导师的指导完成项目团队的组建，全面了解项目团队的工作运行，在项目开发过程中充分理解在计算机工程实践项目中的个人与团队的关系，理解个人和团队的利益统一性，充分了解团队中各个成员的工作职责和作用，全面了解团队的组建、运行过程。（支撑毕业要求11.1）
5. 学生在企业实训过程中跟企业团队紧密合作，根据企业导师统一安排与计算机相关学科中的成员组成团队完成企业实际的工程问题，能够在项目开发过程中根据各自学科背景不同承担不同的角色，在整个项目开发过过程中，学生能够根据不同的角色学习互相配合、执行和团队的领导决策能力。（支撑毕业要求11.2）

"
2440125,"
“数字逻辑与数字系统”是智能与计算学部的一门大类学科基础课程它主要讲授数字逻辑电路的基本理论、分析和设计方法，是分析和设计包括计算机在内的各类数字系统的基础课程。
通过本课程的学习，能够使学生熟悉并掌握信息的数字化表示、基本逻辑器件的功能以及布尔代数理论；能够掌握组合逻辑电路和时序电路的分析和设计方法；能够掌握使用硬件描述语言和主流EDA工具进行现代化数字电路模块设计的流程和方法，并了解可编程器件的编程技术；以MIPS为例，初步了解指令集体系结构（ISA）的基本概念，在此基础上利用所学的数字电路分析与设计方法，采用主流EDA工具，解决“单周期处理器设计”这一复杂工程问题。
该课程针对当前计算机类专业的学生普遍存在的“吃软怕硬”的问题，旨在培养学生的硬件能力、提升系统能力，真正做到“双腿”走路，以适应人工智能大潮对算力、数据和算法的多重需求。
","
1. 掌握数制、逻辑门的基本概念、布尔代数原理和化简方法、组合逻辑电路和时序逻辑电路的设计技术、基于硬件描述语言SystemVerilog的数字电路设计技术以及指令集体系结构的初步概念；并能够综合利用上述的专业知识设计基本数字模块，最终具备解决如“单周期处理器设计”这类的复杂数字系统设计问题。
2. 能够根据具体工程要求，应用数字电路设计相关方法和技术，提出数字电路系统的设计方案，并能高效的使用SystemVerilog硬件描述语言对数字电路设计方案进行建模和实现，能在设计环节中体现创新意识。
3. 能够针对具体的数字电路系统工程问题，选择与使用EDA开发工具及FPGA可编程阵列，对于数字电路进行建模、仿真和验证。


毕业要求

5.1
5.2
7.1
课程目标1
√


课程目标2

√

课程目标3


√

"
2440125,"
“数字逻辑与数字系统”是智能与计算学部的一门大类学科基础课程它主要讲授数字逻辑电路的基本理论、分析和设计方法，是分析和设计包括计算机在内的各类数字系统的基础课程。
通过本课程的学习，能够使学生熟悉并掌握信息的数字化表示、基本逻辑器件的功能以及布尔代数理论；能够掌握组合逻辑电路和时序电路的分析和设计方法；能够掌握使用硬件描述语言和主流EDA工具进行现代化数字电路模块设计的流程和方法，并了解可编程器件的编程技术；以MIPS为例，初步了解指令集体系结构（ISA）的基本概念，在此基础上利用所学的数字电路分析与设计方法，采用主流EDA工具，解决“单周期处理器设计”这一复杂工程问题。
该课程针对当前计算机类专业的学生普遍存在的“吃软怕硬”的问题，旨在培养学生的硬件能力、提升系统能力，真正做到“双腿”走路，以适应人工智能大潮对算力、数据和算法的多重需求。
","
1. 掌握数制、逻辑门的基本概念、布尔代数原理和化简方法、组合逻辑电路和时序逻辑电路的设计技术、基于硬件描述语言SystemVerilog的数字电路设计技术以及指令集体系结构的初步概念；并能够综合利用上述的专业知识设计基本数字模块，最终具备解决如“单周期处理器设计”这类的复杂数字系统设计问题。
2. 能够根据具体工程要求，应用数字电路设计相关方法和技术，提出数字电路系统的设计方案，并能高效的使用SystemVerilog硬件描述语言对数字电路设计方案进行建模和实现，能在设计环节中体现创新意识。
3. 能够针对具体的数字电路系统工程问题，选择与使用EDA开发工具及FPGA可编程阵列，对于数字电路进行建模、仿真和验证。


毕业要求

5.1
5.2
7.1
课程目标1
√


课程目标2

√

课程目标3


√

"
2440125,"
“数字逻辑与数字系统”是智能与计算学部的一门大类学科基础课程它主要讲授数字逻辑电路的基本理论、分析和设计方法，是分析和设计包括计算机在内的各类数字系统的基础课程。
通过本课程的学习，能够使学生熟悉并掌握信息的数字化表示、基本逻辑器件的功能以及布尔代数理论；能够掌握组合逻辑电路和时序电路的分析和设计方法；能够掌握使用硬件描述语言和主流EDA工具进行现代化数字电路模块设计的流程和方法，并了解可编程器件的编程技术；以MIPS为例，初步了解指令集体系结构（ISA）的基本概念，在此基础上利用所学的数字电路分析与设计方法，采用主流EDA工具，解决“单周期处理器设计”这一复杂工程问题。
该课程针对当前计算机类专业的学生普遍存在的“吃软怕硬”的问题，旨在培养学生的硬件能力、提升系统能力，真正做到“双腿”走路，以适应人工智能大潮对算力、数据和算法的多重需求。
","
1. 掌握数制、逻辑门的基本概念、布尔代数原理和化简方法、组合逻辑电路和时序逻辑电路的设计技术、基于硬件描述语言SystemVerilog的数字电路设计技术以及指令集体系结构的初步概念；并能够综合利用上述的专业知识设计基本数字模块，最终具备解决如“单周期处理器设计”这类的复杂数字系统设计问题。
2. 能够根据具体工程要求，应用数字电路设计相关方法和技术，提出数字电路系统的设计方案，并能高效的使用SystemVerilog硬件描述语言对数字电路设计方案进行建模和实现，能在设计环节中体现创新意识。
3. 能够针对具体的数字电路系统工程问题，选择与使用EDA开发工具及FPGA可编程阵列，对于数字电路进行建模、仿真和验证。


毕业要求

5.1
5.2
7.1
课程目标1
√


课程目标2

√

课程目标3


√

"
2440125,"
“数字逻辑与数字系统”是智能与计算学部的一门大类学科基础课程它主要讲授数字逻辑电路的基本理论、分析和设计方法，是分析和设计包括计算机在内的各类数字系统的基础课程。
通过本课程的学习，能够使学生熟悉并掌握信息的数字化表示、基本逻辑器件的功能以及布尔代数理论；能够掌握组合逻辑电路和时序电路的分析和设计方法；能够掌握使用硬件描述语言和主流EDA工具进行现代化数字电路模块设计的流程和方法，并了解可编程器件的编程技术；以MIPS为例，初步了解指令集体系结构（ISA）的基本概念，在此基础上利用所学的数字电路分析与设计方法，采用主流EDA工具，解决“单周期处理器设计”这一复杂工程问题。
该课程针对当前计算机类专业的学生普遍存在的“吃软怕硬”的问题，旨在培养学生的硬件能力、提升系统能力，真正做到“双腿”走路，以适应人工智能大潮对算力、数据和算法的多重需求。
","
1. 掌握数制、逻辑门的基本概念、布尔代数原理和化简方法、组合逻辑电路和时序逻辑电路的设计技术、基于硬件描述语言SystemVerilog的数字电路设计技术以及指令集体系结构的初步概念；并能够综合利用上述的专业知识设计基本数字模块，最终具备解决如“单周期处理器设计”这类的复杂数字系统设计问题。
2. 能够根据具体工程要求，应用数字电路设计相关方法和技术，提出数字电路系统的设计方案，并能高效的使用SystemVerilog硬件描述语言对数字电路设计方案进行建模和实现，能在设计环节中体现创新意识。
3. 能够针对具体的数字电路系统工程问题，选择与使用EDA开发工具及FPGA可编程阵列，对于数字电路进行建模、仿真和验证。


毕业要求

5.1
5.2
7.1
课程目标1
√


课程目标2

√

课程目标3


√

"
2440125,"
“数字逻辑与数字系统”是智能与计算学部的一门大类学科基础课程它主要讲授数字逻辑电路的基本理论、分析和设计方法，是分析和设计包括计算机在内的各类数字系统的基础课程。
通过本课程的学习，能够使学生熟悉并掌握信息的数字化表示、基本逻辑器件的功能以及布尔代数理论；能够掌握组合逻辑电路和时序电路的分析和设计方法；能够掌握使用硬件描述语言和主流EDA工具进行现代化数字电路模块设计的流程和方法，并了解可编程器件的编程技术；以MIPS为例，初步了解指令集体系结构（ISA）的基本概念，在此基础上利用所学的数字电路分析与设计方法，采用主流EDA工具，解决“单周期处理器设计”这一复杂工程问题。
该课程针对当前计算机类专业的学生普遍存在的“吃软怕硬”的问题，旨在培养学生的硬件能力、提升系统能力，真正做到“双腿”走路，以适应人工智能大潮对算力、数据和算法的多重需求。
","
1. 掌握数制、逻辑门的基本概念、布尔代数原理和化简方法、组合逻辑电路和时序逻辑电路的设计技术、基于硬件描述语言SystemVerilog的数字电路设计技术以及指令集体系结构的初步概念；并能够综合利用上述的专业知识设计基本数字模块，最终具备解决如“单周期处理器设计”这类的复杂数字系统设计问题。
2. 能够根据具体工程要求，应用数字电路设计相关方法和技术，提出数字电路系统的设计方案，并能高效的使用SystemVerilog硬件描述语言对数字电路设计方案进行建模和实现，能在设计环节中体现创新意识。
3. 能够针对具体的数字电路系统工程问题，选择与使用EDA开发工具及FPGA可编程阵列，对于数字电路进行建模、仿真和验证。


毕业要求

5.1
5.2
7.1
课程目标1
√


课程目标2

√

课程目标3


√

"
2440126,"
数据库理论与技术是计算机科学的主要分支之一。现今，数据库是各行业进行数据管理的最有效手段。数据库的力量源于其理论与实践超过40年的发展历程，并集中体现在“数据库管理系统”（简称DBMS）的这种专门软件之中。在DBMS的管理下，数据库用于高效和安全地创建、存储、维护和搜索数据。本课程是计算机科学与技术专业本科生的主干课程之一。
通过本课程的学习，学生能够：
(1) 系统地掌握数据库系统的基本原理和技术，
(2) 熟练使用SQL在一种DBMS上进行各种数据库操作，
(3) 掌握数据库设计的方法，具有根据实际需求设计数据库模式以及针对应用开发数据库系统的能力。

","
1. 理解数据库、数据模型和三级模式的基本概念；理解关系模型和关系代数的基本理论；掌握使用SQL定义数据、查询数据和更新数据。能够写出查询的关系代数表达式；能够根据数据查询和更新需求写出SQL语句。（支撑毕业要求7.1）
2. 理解关系数据库的规范化理论；掌握使用E/R图或UML图建立高层数据模型。能够针对实际领域的数据建模需求进行分析，并应用关系数据库理论作指导进行数据库设计。（支撑毕业要求7.1）
3. 理解约束和触发器体现的数据库完整性；掌握视图和索引的使用；理解服务器环境下的三层体系结构和存储过程；了解关系查询处理和查询优化方法。能够针对实际领域的数据使用需求进行数据库调优，包括建立视图、索引、约束、触发器、存储过程等数据库对象。（支撑毕业要求5.1）
4. 理解数据库的安全性，掌握SQL提供的安全机制；理解数据库恢复和并发控制技术。能够针对实际领域的数据使用需求制定SQL权限授权与回收机制。（支撑毕业要求6.1）
5. 掌握某种开源关系数据库管理系统的基本操作（如PostgreSQL/MySQL），能够以该系统作为实验平台，进行上述课程目标的实验任务。（支撑毕业要求5.1）
课程目标与毕业要求的关系矩阵。
毕业要求
毕业要求指标点
支撑强度
课程目标
5. 设计/开发/建造
5.1能够熟练应用计算机科学与技术领域的基本原理和方法，设计针对复杂计算机工程问题的合理解决方案。
M（0.2）
3、5
6. 研究
6.1 基于基本科学原理掌握针对复杂计算机工程问的科学研究方法。
H（0.3）
4
7. 使用现代工具
7.1 能够针对复杂计算机工程问题的不同需求，开发、选择与使用恰当的技术、资源和软硬件工具。
M（0.1）
1、2

"
2440126,"
数据库理论与技术是计算机科学的主要分支之一。现今，数据库是各行业进行数据管理的最有效手段。数据库的力量源于其理论与实践超过40年的发展历程，并集中体现在“数据库管理系统”（简称DBMS）的这种专门软件之中。在DBMS的管理下，数据库用于高效和安全地创建、存储、维护和搜索数据。本课程是计算机科学与技术专业本科生的主干课程之一。
通过本课程的学习，学生能够：
(1) 系统地掌握数据库系统的基本原理和技术，
(2) 熟练使用SQL在一种DBMS上进行各种数据库操作，
(3) 掌握数据库设计的方法，具有根据实际需求设计数据库模式以及针对应用开发数据库系统的能力。

","
1. 理解数据库、数据模型和三级模式的基本概念；理解关系模型和关系代数的基本理论；掌握使用SQL定义数据、查询数据和更新数据。能够写出查询的关系代数表达式；能够根据数据查询和更新需求写出SQL语句。（支撑毕业要求7.1）
2. 理解关系数据库的规范化理论；掌握使用E/R图或UML图建立高层数据模型。能够针对实际领域的数据建模需求进行分析，并应用关系数据库理论作指导进行数据库设计。（支撑毕业要求7.1）
3. 理解约束和触发器体现的数据库完整性；掌握视图和索引的使用；理解服务器环境下的三层体系结构和存储过程；了解关系查询处理和查询优化方法。能够针对实际领域的数据使用需求进行数据库调优，包括建立视图、索引、约束、触发器、存储过程等数据库对象。（支撑毕业要求5.1）
4. 理解数据库的安全性，掌握SQL提供的安全机制；理解数据库恢复和并发控制技术。能够针对实际领域的数据使用需求制定SQL权限授权与回收机制。（支撑毕业要求6.1）
5. 掌握某种开源关系数据库管理系统的基本操作（如PostgreSQL/MySQL），能够以该系统作为实验平台，进行上述课程目标的实验任务。（支撑毕业要求5.1）
课程目标与毕业要求的关系矩阵。
毕业要求
毕业要求指标点
支撑强度
课程目标
5. 设计/开发/建造
5.1能够熟练应用计算机科学与技术领域的基本原理和方法，设计针对复杂计算机工程问题的合理解决方案。
M（0.2）
3、5
6. 研究
6.1 基于基本科学原理掌握针对复杂计算机工程问的科学研究方法。
H（0.3）
4
7. 使用现代工具
7.1 能够针对复杂计算机工程问题的不同需求，开发、选择与使用恰当的技术、资源和软硬件工具。
M（0.1）
1、2

"
2440126,"
数据库理论与技术是计算机科学的主要分支之一。现今，数据库是各行业进行数据管理的最有效手段。数据库的力量源于其理论与实践超过40年的发展历程，并集中体现在“数据库管理系统”（简称DBMS）的这种专门软件之中。在DBMS的管理下，数据库用于高效和安全地创建、存储、维护和搜索数据。本课程是计算机科学与技术专业本科生的主干课程之一。
通过本课程的学习，学生能够：
(1) 系统地掌握数据库系统的基本原理和技术，
(2) 熟练使用SQL在一种DBMS上进行各种数据库操作，
(3) 掌握数据库设计的方法，具有根据实际需求设计数据库模式以及针对应用开发数据库系统的能力。

","
1. 理解数据库、数据模型和三级模式的基本概念；理解关系模型和关系代数的基本理论；掌握使用SQL定义数据、查询数据和更新数据。能够写出查询的关系代数表达式；能够根据数据查询和更新需求写出SQL语句。（支撑毕业要求7.1）
2. 理解关系数据库的规范化理论；掌握使用E/R图或UML图建立高层数据模型。能够针对实际领域的数据建模需求进行分析，并应用关系数据库理论作指导进行数据库设计。（支撑毕业要求7.1）
3. 理解约束和触发器体现的数据库完整性；掌握视图和索引的使用；理解服务器环境下的三层体系结构和存储过程；了解关系查询处理和查询优化方法。能够针对实际领域的数据使用需求进行数据库调优，包括建立视图、索引、约束、触发器、存储过程等数据库对象。（支撑毕业要求5.1）
4. 理解数据库的安全性，掌握SQL提供的安全机制；理解数据库恢复和并发控制技术。能够针对实际领域的数据使用需求制定SQL权限授权与回收机制。（支撑毕业要求6.1）
5. 掌握某种开源关系数据库管理系统的基本操作（如PostgreSQL/MySQL），能够以该系统作为实验平台，进行上述课程目标的实验任务。（支撑毕业要求5.1）
课程目标与毕业要求的关系矩阵。
毕业要求
毕业要求指标点
支撑强度
课程目标
5. 设计/开发/建造
5.1能够熟练应用计算机科学与技术领域的基本原理和方法，设计针对复杂计算机工程问题的合理解决方案。
M（0.2）
3、5
6. 研究
6.1 基于基本科学原理掌握针对复杂计算机工程问的科学研究方法。
H（0.3）
4
7. 使用现代工具
7.1 能够针对复杂计算机工程问题的不同需求，开发、选择与使用恰当的技术、资源和软硬件工具。
M（0.1）
1、2

"
,"
数据库理论与技术是计算机科学的主要分支之一。现今，数据库是各行业进行数据管理的最有效手段。数据库的力量源于其理论与实践超过40年的发展历程，并集中体现在“数据库管理系统”（简称DBMS）的这种专门软件之中。在DBMS的管理下，数据库用于高效和安全地创建、存储、维护和搜索数据。本课程是计算机科学与技术专业本科生的主干课程之一。
通过本课程的学习，学生能够：
(1) 系统地掌握数据库系统的基本原理和技术，
(2) 熟练使用SQL在一种DBMS上进行各种数据库操作，
(3) 掌握数据库设计的方法，具有根据实际需求设计数据库模式以及针对应用开发数据库系统的能力。

","
1. 理解数据库、数据模型和三级模式的基本概念；理解关系模型和关系代数的基本理论；掌握使用SQL定义数据、查询数据和更新数据。能够写出查询的关系代数表达式；能够根据数据查询和更新需求写出SQL语句。（支撑毕业要求7.1）
2. 理解关系数据库的规范化理论；掌握使用E/R图或UML图建立高层数据模型。能够针对实际领域的数据建模需求进行分析，并应用关系数据库理论作指导进行数据库设计。（支撑毕业要求7.1）
3. 理解约束和触发器体现的数据库完整性；掌握视图和索引的使用；理解服务器环境下的三层体系结构和存储过程；了解关系查询处理和查询优化方法。能够针对实际领域的数据使用需求进行数据库调优，包括建立视图、索引、约束、触发器、存储过程等数据库对象。（支撑毕业要求5.1）
4. 理解数据库的安全性，掌握SQL提供的安全机制；理解数据库恢复和并发控制技术。能够针对实际领域的数据使用需求制定SQL权限授权与回收机制。（支撑毕业要求6.1）
5. 掌握某种开源关系数据库管理系统的基本操作（如PostgreSQL/MySQL），能够以该系统作为实验平台，进行上述课程目标的实验任务。（支撑毕业要求5.1）
课程目标与毕业要求的关系矩阵。
毕业要求
毕业要求指标点
支撑强度
课程目标
5. 设计/开发/建造
5.1能够熟练应用计算机科学与技术领域的基本原理和方法，设计针对复杂计算机工程问题的合理解决方案。
M（0.2）
3、5
6. 研究
6.1 基于基本科学原理掌握针对复杂计算机工程问的科学研究方法。
H（0.3）
4
7. 使用现代工具
7.1 能够针对复杂计算机工程问题的不同需求，开发、选择与使用恰当的技术、资源和软硬件工具。
M（0.1）
1、2

"
2440126,"
数据库理论与技术是计算机科学的主要分支之一。现今，数据库是各行业进行数据管理的最有效手段。数据库的力量源于其理论与实践超过40年的发展历程，并集中体现在“数据库管理系统”（简称DBMS）的这种专门软件之中。在DBMS的管理下，数据库用于高效和安全地创建、存储、维护和搜索数据。本课程是计算机科学与技术专业本科生的主干课程之一。
通过本课程的学习，学生能够：
(1) 系统地掌握数据库系统的基本原理和技术，
(2) 熟练使用SQL在一种DBMS上进行各种数据库操作，
(3) 掌握数据库设计的方法，具有根据实际需求设计数据库模式以及针对应用开发数据库系统的能力。

","
1. 理解数据库、数据模型和三级模式的基本概念；理解关系模型和关系代数的基本理论；掌握使用SQL定义数据、查询数据和更新数据。能够写出查询的关系代数表达式；能够根据数据查询和更新需求写出SQL语句。（支撑毕业要求7.1）
2. 理解关系数据库的规范化理论；掌握使用E/R图或UML图建立高层数据模型。能够针对实际领域的数据建模需求进行分析，并应用关系数据库理论作指导进行数据库设计。（支撑毕业要求7.1）
3. 理解约束和触发器体现的数据库完整性；掌握视图和索引的使用；理解服务器环境下的三层体系结构和存储过程；了解关系查询处理和查询优化方法。能够针对实际领域的数据使用需求进行数据库调优，包括建立视图、索引、约束、触发器、存储过程等数据库对象。（支撑毕业要求5.1）
4. 理解数据库的安全性，掌握SQL提供的安全机制；理解数据库恢复和并发控制技术。能够针对实际领域的数据使用需求制定SQL权限授权与回收机制。（支撑毕业要求6.1）
5. 掌握某种开源关系数据库管理系统的基本操作（如PostgreSQL/MySQL），能够以该系统作为实验平台，进行上述课程目标的实验任务。（支撑毕业要求5.1）
课程目标与毕业要求的关系矩阵。
毕业要求
毕业要求指标点
支撑强度
课程目标
5. 设计/开发/建造
5.1能够熟练应用计算机科学与技术领域的基本原理和方法，设计针对复杂计算机工程问题的合理解决方案。
M（0.2）
3、5
6. 研究
6.1 基于基本科学原理掌握针对复杂计算机工程问的科学研究方法。
H（0.3）
4
7. 使用现代工具
7.1 能够针对复杂计算机工程问题的不同需求，开发、选择与使用恰当的技术、资源和软硬件工具。
M（0.1）
1、2

"
2440127,"
对课程概况描述，包括课程设置的目的与意义，课程的知识领域与主要内容等情况。
本课程为人工智能专业本科生奠定专业课程所需数学基础。一方面，人工智能的符号主义流派涉及的知识表示等主要研究问题建立在数理逻辑基础之上，同时，计算能力作为人工智能的基础，计算理论为其理论支撑；另一方面，人工智能的联结主义流派涉及的机器学习等主要研究问题建立在微积分、概率论与数理统计、矩阵分析、最优化方法基础之上。考虑到人工智能专业本科数学类课程中已经修过高等数学、线性代数、概率论与数理统计和离散数学等课程，本课程选取数理逻辑（离散数学中未涉及到）、计算理论、矩阵分析和最优化方法四个部分的内容，作为人工智能数学基础。
","
通过本课程的学习，学生应达到的目标，包括知识与能力目标，并能够支撑专业的毕业要求（分解指标点）；要用动词描述如了解、掌握等，从而说明层次和程度[1]。
基础课要结合通用的毕业要求[2]进行描述。
专业基础课、专业课给出课程目标与毕业要求的关系矩阵。
1. 理解和掌握经典逻辑系统的语法定义
2. 理解和掌握经典逻辑系统的自然推理系统
3. 理解和掌握证明构造性的定义
4. 理解和掌握构造性逻辑的蕴含
5. 理解和掌握构造性逻辑的形式推演
6. 理解和掌握图灵机的数学模型
7. 理解邱奇图灵论题
8. 理解和掌握通用图灵机和不可判定问题
9. 理解和掌握莱斯定理
10. 理解可归约性
11. 理解时间复杂度和空间复杂度
12. 理解和掌握矩阵基本概念
13. 理解和掌握特征值估计理论与方法
14. 理解和掌握矩阵的Jordan标准型
15. 理解和掌握矩阵的三角分解
16. 理解和掌握向量范数和矩阵范数
17. 理解和掌握凸集和凸函数
18. 理解费马定理、拉格朗日乘数法、KKT条件
19. 理解和掌握梯度下降法
20. 理解和掌握牛顿法
21. 理解共轭梯度法
22. 理解分治法


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1


√









课程目标2

√
√
√

√






课程目标3


√
√








课程目标4

√
√


√






课程目标5

√
√
√
√







课程目标6


√









课程目标7

√
√



√





课程目标8

√
√
√








课程目标9

√
√


√






课程目标10

√
√
√
√

√





课程目标11


√









课程目标12


√


√






课程目标13


√
√








课程目标14

√










课程目标15

√

√

√






课程目标16


√



√





课程目标17


√
√








课程目标18


√


√






课程目标19


√
√








课程目标20

√

√
√







课程目标21

√



√






课程目标22



√


√





（注意：课程目标不一定与毕业要求一一对应）
"
2440129,"
没有网络安全就没有国家安全。网络空间是所有信息系统的集合，其核心仍是信息安全。
信息系统安全面向网络空间安全、密码学、计算机科学与技术、信息与通信工程、软件工程、管理科学与工程等相关学科。信息系统安全综合实践从信息系统安全理论课程体系出发，以基本型实验为主，逐步拓展至综合型实验直至创新型实验，由易到难。课程实验内容包括操作系统和数据库系统的身份认证和访问控制实验、日志安全审计实验、服务器安全配置实验以及病毒、木马检测及防护实验。随着实验内容的进阶，使学生在提高动手实践能力的同时，对信息系统安全的基本理论知识融会贯通，形成完整的信息系统安全知识体系。
","
通过本课程的学习，学生应达到的目标，包括融会贯通信息系统安全的基本理论知识，能利用其知识分析信息安全系统安全问题，具备解决网络空间安全领域涉及到的信息安全问题的能力。
1. 理解掌握身份认证、访问控制的技术原理，能够动手完成实验和得到预期结论。（支撑毕业要求1、2）
2. 掌握信息系统安全威胁技术原理与防御策略，包括：恶意代码、木马攻击、缓冲区攻击、拒绝服务攻击等，能够分析具体的攻击手段并给出适当的解决方案。（支撑毕业要求1、3）
3. 熟悉Windows安全策略与配置，熟练软件操作。 （支撑毕业要求1）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√
√










课程目标2
√

√









课程目标3
√











"
2440130,"
本课程是智能与计算学部本科生的专业核心课程；是计算机网络的基础课程，旨在介绍计算机网络（以Internet为背景）设计和实现的基本概念、协议和应用。使同学们掌握计算机网络设计和实现的基本概念、网络体系结构，熟悉Internet的协议和应用，掌握基本的计算机网络协议设计和实现方法。

","
1、掌握计算机网络体系结构的基本概念。掌握计算机网络数据包交换的基本原理。能够将数学和专业知识用于解决复杂工程问题。 （支撑毕业要求1）
2、熟悉经典网络协议，包括HTTP，TCP, IP，CSMA以及路由算法和协议等。通过对经典网络协议的学习，掌握网络协议的设计理念、实现技术与性能评价方法。能够应用数学和工程科学的基本原理，分析复杂工程问题，以获得有效结论。能够设计针对负责工程问题的解决方案，设计满足需求的网络协议。（支撑毕业要求2）
3、掌握TCP/IP网络应用程序设计的基本原理和方法，能够根据应用需求，独立设计和实现Interent网络应用协议。能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求3）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
Ö











课程目标2

Ö










课程目标3


Ö










"
2440130,"
本课程是智能与计算学部本科生的专业核心课程；是计算机网络的基础课程，旨在介绍计算机网络（以Internet为背景）设计和实现的基本概念、协议和应用。使同学们掌握计算机网络设计和实现的基本概念、网络体系结构，熟悉Internet的协议和应用，掌握基本的计算机网络协议设计和实现方法。

","
1、掌握计算机网络体系结构的基本概念。掌握计算机网络数据包交换的基本原理。能够将数学和专业知识用于解决复杂工程问题。 （支撑毕业要求1）
2、熟悉经典网络协议，包括HTTP，TCP, IP，CSMA以及路由算法和协议等。通过对经典网络协议的学习，掌握网络协议的设计理念、实现技术与性能评价方法。能够应用数学和工程科学的基本原理，分析复杂工程问题，以获得有效结论。能够设计针对负责工程问题的解决方案，设计满足需求的网络协议。（支撑毕业要求2）
3、掌握TCP/IP网络应用程序设计的基本原理和方法，能够根据应用需求，独立设计和实现Interent网络应用协议。能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求3）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
Ö











课程目标2

Ö










课程目标3


Ö










"
2440130,"
本课程是智能与计算学部本科生的专业核心课程；是计算机网络的基础课程，旨在介绍计算机网络（以Internet为背景）设计和实现的基本概念、协议和应用。使同学们掌握计算机网络设计和实现的基本概念、网络体系结构，熟悉Internet的协议和应用，掌握基本的计算机网络协议设计和实现方法。

","
1、掌握计算机网络体系结构的基本概念。掌握计算机网络数据包交换的基本原理。能够将数学和专业知识用于解决复杂工程问题。 （支撑毕业要求1）
2、熟悉经典网络协议，包括HTTP，TCP, IP，CSMA以及路由算法和协议等。通过对经典网络协议的学习，掌握网络协议的设计理念、实现技术与性能评价方法。能够应用数学和工程科学的基本原理，分析复杂工程问题，以获得有效结论。能够设计针对负责工程问题的解决方案，设计满足需求的网络协议。（支撑毕业要求2）
3、掌握TCP/IP网络应用程序设计的基本原理和方法，能够根据应用需求，独立设计和实现Interent网络应用协议。能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求3）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
Ö











课程目标2

Ö










课程目标3


Ö










"
2440130,"
本课程是智能与计算学部本科生的专业核心课程；是计算机网络的基础课程，旨在介绍计算机网络（以Internet为背景）设计和实现的基本概念、协议和应用。使同学们掌握计算机网络设计和实现的基本概念、网络体系结构，熟悉Internet的协议和应用，掌握基本的计算机网络协议设计和实现方法。

","
1、掌握计算机网络体系结构的基本概念。掌握计算机网络数据包交换的基本原理。能够将数学和专业知识用于解决复杂工程问题。 （支撑毕业要求1）
2、熟悉经典网络协议，包括HTTP，TCP, IP，CSMA以及路由算法和协议等。通过对经典网络协议的学习，掌握网络协议的设计理念、实现技术与性能评价方法。能够应用数学和工程科学的基本原理，分析复杂工程问题，以获得有效结论。能够设计针对负责工程问题的解决方案，设计满足需求的网络协议。（支撑毕业要求2）
3、掌握TCP/IP网络应用程序设计的基本原理和方法，能够根据应用需求，独立设计和实现Interent网络应用协议。能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求3）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
Ö











课程目标2

Ö










课程目标3


Ö










"
2440130,"
本课程是智能与计算学部本科生的专业核心课程；是计算机网络的基础课程，旨在介绍计算机网络（以Internet为背景）设计和实现的基本概念、协议和应用。使同学们掌握计算机网络设计和实现的基本概念、网络体系结构，熟悉Internet的协议和应用，掌握基本的计算机网络协议设计和实现方法。

","
1、掌握计算机网络体系结构的基本概念。掌握计算机网络数据包交换的基本原理。能够将数学和专业知识用于解决复杂工程问题。 （支撑毕业要求1）
2、熟悉经典网络协议，包括HTTP，TCP, IP，CSMA以及路由算法和协议等。通过对经典网络协议的学习，掌握网络协议的设计理念、实现技术与性能评价方法。能够应用数学和工程科学的基本原理，分析复杂工程问题，以获得有效结论。能够设计针对负责工程问题的解决方案，设计满足需求的网络协议。（支撑毕业要求2）
3、掌握TCP/IP网络应用程序设计的基本原理和方法，能够根据应用需求，独立设计和实现Interent网络应用协议。能够根据系统设计需求，进行团队合作，撰写设计方案，能够清晰的进行陈述发言表达自己的设计思想，与他人进行沟通和交流。（支撑毕业要求3）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
Ö











课程目标2

Ö










课程目标3


Ö










"
2440131,"
本项目制课程主要是利用语法分析的自动生成工具ANTLR将计算机专业主干课程编译原理中讲的概念和方法应用到实践中，解决实际工程问题。
ANTLR是一款强大的语法分析器生成工具，可用于读取、处理、执行和翻译结构化的文本或二进制文件。它被广泛应用于学术领域和工业生产实践，是众多语言、工具和框架的基石。除了一些鼎鼎大名的项目之外，ANTLR还可以构建各种各样的实用工具，如配置文件读取器、遗留代码转换器、维基文本渲染器、JSON解析器、用于创建数据库的对象-关系映射和描述的三维可视化以及在Java源代码中插入性能监控代码。
要求学生在分析理解教程已有的例子的基础上，分组实现一个自定义的翻译过程（可以包括语言的编译器、代码的分析程序、代码的解析程序，或者其他需要实现结构转换的翻译过程）通过本课程设计的训练，学生在掌握编译程序基本构造的基础上，具有分析和实现现有编译程序的初步能力，并且加深对程序设计语言原理的理解，提高中、大型程序的组织、分析、架构和开发能力。
","
1．	对编译程序的整体结构有清晰的了解；（支撑毕业要求1）
2．	掌握词法分析和语法分析的基本方法；（支撑毕业要求2）
3．	具有设计各种常见语言成分的目标结构的能力；（支撑毕业要求3）
4．	掌握静态和动态存储分配技术；（支撑毕业要求4）
5．	熟悉编译程序中各种主要的数据结构；（支撑毕业要求1）
6.		具有分析和实现编译程序的初步能力。（支撑毕业要求5）


毕业要求

1
2
3
4
5
6
7
8
9
10
11
12
课程目标1
√











课程目标2

√










课程目标3


√









课程目标4



√








课程目标5
√











课程目标6




√








"
